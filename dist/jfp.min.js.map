{"version":3,"sources":["jfp.js"],"names":["jfp","resolveFunction","functionValue","curryAlias","args","slice","arguments","apply","curry","pickAlias","key","value","cleanKey","Boolean","pick","partial","chooseResolver","resolveToPick","charAt","resolver","j","isUndefined","undefined","not","equal","a","b","missingValues","isType","typeString","getType","isArray","isNumeric","pattern","number","numericString","match","isTruthy","typeCheckReduction","result","isPrimitive","primitiveNames","reduce","bind","isBoolean","isEmptyString","isFunction","isNull","isNumber","isObject","isString","identity","valueType","Object","prototype","toString","call","begin","valueSet","end","values","Array","shortCircuit","defaultValue","userFn","testValue","maybe","type","typeOkay","either","when","checkValue","eitherIf","predicateValue","safePredicate","eitherWhen","sanitizedFn","concat","original","extension","sanitizedExtension","i","length","push","basePartial","direction","appliedFunction","applicationArgs","reverseArgs","reverse","countArguments","execute","rpartial","toDec","parseInt","copyArray","makeValueArray","conj","dest","cons","source","first","lastIndex","last","drop","index","finalIndex","sanitizedIndex","firstArray","secondArray","dropLast","nth","rest","take","count","naturalComparator","comparison","sort","optionValue","comparator","finalSet","each","userArray","sanitizedArray","dropFirst","init","valueMap","pickResult","merge","defaultObj","mergeData","finalObj","argumentCount","appliedFn","recursor","recurFn","recursorFn","localRecursor","verifyRecurValue","recurValue","recur","recursingFn","reducer","reduction","collection","appliedReducer","initialState","hasInitialState","initialValue","remainder","compositor","f","g","$f","$g","compositeFn","compose","pipeline","partialReverse","clone","originalValue","depth","depthOkay","geq","copyOkay","copy","keys","container","newDepth","err","RangeError","maybeType","eitherType","mapper","finalArray","map","mapperFn","filterer","userPredicate","filter","predicate","filterFn","compact","valueList","predicateAccumulator","total","sanitizedTotal","numberOf","accumulator","captureUnique","finalList","unique","union","set1","set2","addToHash","finalObject","buildValueHash","captureIntersection","valueHash","intersect","setHash","captureDifference","difference","symmetricDifference","setUnion","setIntersection","everyReducer","every","finder","done","find","someRecur","some","contains","partitioner","partitions","partition","list","sanitizedPredicate","multiPartitioner","partitionPredicate","computedPartitions","multiPartition","predicateArgs","sanitizedArgs","sanitizedList","firstExists","ander","orer","reduceConditions","conditionArgs","operator","initialCondition","and","or","xor","equivalent","keyReduction","baseObj","toValues","dereferencer","dataObject","token","trim","internalDeref","baseData","sanitizedDefault","keyTokens","split","deref","sanitizedKey","sanitizedData","plucker","pluckKeys","sanitizedObject","pluck","adder","current","add","divider","divide","multiplier","multiply","subtractor","subtract","rangeRecurCheck","m","n","inc","rangeBuilder","currentRange","finalRange","range","start","increment","mod","modulo","_a","_b","Math","floor","abs","truncate","max","maxValue","Number","MAX_VALUE","min","minValue","fac","factorial","greater","throwWhenNotComparable","TypeError","less","isInt","isNegative","isPositive","isZero","isEven","isNonNegative","isNonPositive","isNonZero","isOdd","leq","module","exports"],"mappings":"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","file":"jfp.min.js","sourcesContent":["var jfp = (function(){\n    'use strict';\n    \n    function resolveFunction(functionValue){\n        return typeof functionValue === 'string' ? jfp[functionValue] : functionValue;\n    }\n    \n    function curryAlias(){\n        var args = jfp.slice(0, arguments);\n\n        args[0] = resolveFunction(args[0]);\n        \n        return jfp.apply(jfp.curry, args);\n    }\n    \n    function pickAlias(key, value){\n        var cleanKey = key.slice(1);\n        \n        return Boolean(value) ? jfp.pick(cleanKey, value) : jfp.partial(jfp.pick, cleanKey);\n    }\n    \n    function chooseResolver(value){\n        var resolveToPick = typeof value === 'string' && value.charAt(0) === ':';\n        \n        return resolveToPick ? pickAlias : curryAlias;\n    }\n    \n    return function(){\n        var args = jfp.slice(0, arguments),\n            resolver = chooseResolver(args[0]);\n        \n        return jfp.apply(resolver, args);\n    };\n    \n})();\n\n(function(j){\n    'use strict';\n\n    function isUndefined(value){\n        return value === undefined;\n    }\n    \n    function not(value){\n        return !Boolean(value);\n    }\n    \n    function equal (a, b) {\n        var missingValues = isUndefined(a) || isUndefined(b);\n        return not(missingValues) && a === b;\n    }\n\n    function isType (typeString, value) {\n        return j.equal(j.getType(value), typeString);\n    }\n    \n    function isArray(value){\n        return isType('array', value);\n    }\n    \n    function isNumeric(value){\n        var pattern = /^(0x)?[0-9]+((\\.[0-9]+)|(e\\-?[0-9]+))?$/,\n            number = isType('number', value),\n            numericString = isType('string', value) && Boolean(value.match(pattern));\n            \n        return number || numericString;\n    }\n    \n    function isTruthy(value){\n        return Boolean(value);\n    }\n    \n    function typeCheckReduction (value, result, typeString){\n        return result || isType(typeString, value);\n    }\n    \n    function isPrimitive (value) {\n        var primitiveNames = ['number',\n                              'string',\n                              'boolean',\n                              'undefined'];\n\n        return primitiveNames.reduce(typeCheckReduction.bind(null, value), equal(null, value));\n    }\n\n    j.equal = equal;\n    j.isArray = isArray;\n    j.isBoolean = isType.bind(null, 'boolean');\n    j.isEmptyString = equal.bind(null, '');\n    j.isFunction = isType.bind(null, 'function');\n    j.isNull = equal.bind(null, null);\n    j.isNumber = isType.bind(null, 'number');\n    j.isNumeric = isNumeric;\n    j.isObject = isType.bind(null, 'object');\n    j.isPrimitive = isPrimitive;\n    j.isString = isType.bind(null, 'string');\n    j.isType = isType;\n    j.isTruthy = isTruthy;\n    j.isUndefined = isType.bind(null, 'undefined');\n    j.not = not;\n\n})(jfp);\n\n\n(function(j){\n    'use strict';\n\n    function identity(value){\n        return value;\n    }\n\n    function getType (value) {\n        var valueType = typeof value,\n            isArray = valueType === 'object' && Object.prototype.toString.call(value) === '[object Array]';\n            \n        return isArray ? 'array' : valueType;\n    }\n\n    function slice(begin, valueSet, end){\n        var values = j.not(j.isTruthy(valueSet)) ? [] : valueSet;\n\n        return j.not(j.isTruthy(end)) ?\n                    Array.prototype.slice.call(values, begin) :\n                    Array.prototype.slice.call(values, begin, end);\n    }\n\n    function shortCircuit(defaultValue, userFn, testValue){\n        return (j.isTruthy(testValue) || testValue === 0) ?\n            userFn(testValue) :\n            defaultValue;\n    }\n\n    function maybe(value){\n        var type = arguments[1],\n            typeOkay = getType(value) === type;\n\n        return typeOkay || (!type && !!value) ? value : null;\n    }\n\n    function either(defaultValue, testValue){\n        var type = arguments[2];\n        return maybe(testValue, type) === null ? defaultValue : testValue;\n    }\n    \n    function apply(userFn, args){\n        return userFn.apply(null, args);\n    }\n\n    function when(checkValue, userFn){\n        var args = slice(2, arguments);\n        return j.isTruthy(checkValue) ? apply(userFn, args) : null;\n    }\n\n    function eitherIf(defaultValue, testValue, predicateValue){\n        var safePredicate = j.isUndefined(predicateValue) ? true : predicateValue;\n\n        return j.either(defaultValue, j.when(safePredicate, j.partial(j.identity, testValue)));\n    }\n\n    function eitherWhen(defaultValue, predicateValue, userFn){\n        var sanitizedFn = eitherIf(j.identity, userFn, j.isFunction(userFn));\n\n        return j.either(defaultValue, j.when(predicateValue, sanitizedFn));\n    }\n\n    function concat(original, extension){\n        var result = slice(0, either([], original)),\n            sanitizedExtension = either([], extension),\n            i;\n\n        //This is the most performant way to handle concatenation. Trust me.\n        for(i = 0; i < sanitizedExtension.length; i++){\n            result.push(sanitizedExtension[i]);\n        }\n\n        return result;\n    }\n\n    function basePartial(direction, userFn){\n        var args = slice(2, arguments);\n\n        return function appliedFunction(){\n            var applicationArgs = (direction === 'left') ?\n                                    concat(args, slice(0, arguments)) :\n                                    concat(slice(0, arguments), args);\n\n            return apply(userFn, applicationArgs);\n        };\n    }\n\n    function reverseArgs(userFn){\n        return function(){\n            var args = j.slice(0, arguments).reverse();\n            return j.apply(userFn, args);\n        };\n    }\n\n    function countArguments(userFn){\n        return either(function(){}, userFn).length;\n    }\n\n    function execute(userFn){\n        return j.apply(userFn, j.slice(1, arguments));\n    }\n    \n    j.apply = apply;\n    j.concat = concat;\n    j.countArguments = countArguments;\n    j.either = either;\n    j.eitherIf = eitherIf;\n    j.eitherWhen = eitherWhen;\n    j.execute = execute;\n    j.getType = getType;\n    j.identity = identity;\n    j.maybe = maybe;\n    j.partial = basePartial('left', basePartial, 'left');\n    j.reverseArgs = reverseArgs;\n    j.rpartial = basePartial('left', basePartial, 'right');\n    j.shortCircuit = shortCircuit;\n    j.slice = slice;\n    j.when = when;\n\n})(jfp);\n\n\n(function(j){\n    'use strict';\n\n    function toDec(value){\n        return (j.isNumeric(value)) ? parseInt(value, 10) : null;\n    }\n\n    j.toDec = toDec;\n\n})(jfp);\n\n(function(j){\n    'use strict';\n\n    function copyArray(valueSet){\n        return j.slice(0, valueSet);\n    }\n\n    function makeValueArray(value){\n        return j.not(j.isUndefined(value)) ? [value] : [];\n    }\n\n    function conj(value, dest){\n        return j.concat(copyArray(dest), makeValueArray(value));\n    }\n\n    function cons(value, source){\n        return j.concat(makeValueArray(value), source);\n    }\n\n    function first(values){\n        return j.isArray(values) ? j.either(null, values[0]) : null;\n    }\n\n    function lastIndex(values){\n        return j.isArray(values) ? values.length - 1 : null;\n    }\n\n    function last(values){\n        return j.isArray(values) ? values[lastIndex(values)] : null;\n    }\n\n    function drop(index, valueSet){\n        var finalIndex = lastIndex(valueSet),\n\n            sanitizedIndex = (index === 0 || index === finalIndex) ?\n                index : j.either(1, index) - 1,\n\n            firstArray = (sanitizedIndex === 0) ?\n                [] : j.slice(0, valueSet, sanitizedIndex),\n\n            secondArray = (sanitizedIndex === finalIndex)?\n                [] : j.slice(sanitizedIndex + 1, valueSet);\n\n        return j.concat(firstArray, secondArray);\n    }\n\n    function dropLast(valueSet){\n        return drop(lastIndex(valueSet), valueSet);\n    }\n\n    function nth(index, valueSet){\n        return j.either(null, j.either([], valueSet)[index]);\n    }\n\n    function rest(values){\n        return j.slice(1, values);\n    }\n\n    function take(count, values){\n        return j.isArray(values) ? j.slice(0, values, count) : null;\n    }\n\n    function naturalComparator(a, b){\n        var comparison = a < b ? -1 : 1;\n        return a === b ? 0 : comparison;\n    }\n\n    function sort(optionValue, valueSet){\n        var comparator = j.isFunction(optionValue) ? optionValue : naturalComparator,\n            finalSet = j.isArray(optionValue) ? j.slice(0, optionValue) : j.slice(0, valueSet);\n\n        return finalSet.sort(comparator);\n    }\n\n    function each(userFn, userArray){\n        var sanitizedArray = j.either([], userArray),\n            sanitizedFn = j.either(j.identity, userFn),\n            i;\n\n        for(i = 0; i < sanitizedArray.length; i++){\n            if(sanitizedFn(sanitizedArray[i], i) === false){\n                break;\n            }\n        }\n\n        return sanitizedArray;\n    }\n\n    j.conj = conj;\n    j.cons = cons;\n    j.copyArray = copyArray;\n    j.drop = drop;\n    j.dropFirst = j.partial(drop, 0);\n    j.dropLast = dropLast;\n    j.each = each;\n    j.first = first;\n    j.init = j.dropLast;\n    j.last = last;\n    j.lastIndex = lastIndex;\n    j.nth = nth;\n    j.rest = rest;\n    j.sort = sort;\n    j.take = take;\n\n})(jfp);\n\n\n(function(j){\n    'use strict';\n\n    function pick(key, valueMap){\n        var pickResult = j.either({}, valueMap)[key];\n        return j.isUndefined(pickResult) ? null : pickResult;\n    }\n\n    function merge(defaultObj, mergeData){\n        var finalObj = {},\n            key;\n\n        for(key in j.either({}, defaultObj)){\n            finalObj[key] = defaultObj[key];\n        }\n\n        for(key in j.either({}, mergeData)){\n            finalObj[key] = mergeData[key];\n        }\n\n        return j.eitherIf(null, finalObj, j.isTruthy(defaultObj));\n    }\n\n    j.merge = merge;\n    j.pick = pick;\n\n})(jfp);\n\n\n(function(j){\n    'use strict';\n\n    //This is complicated and I don't expect people to grok it on first read.\n    function curry(userFn){\n        var args = j.slice(1, arguments),\n            argumentCount = j.countArguments(userFn),\n            appliedFn = (args.length < argumentCount) ? j.apply(j.partial, j.concat([curry, userFn], args)) : null,\n            result = (Boolean(userFn) && args.length >= argumentCount) ? j.apply(userFn, args) : null;\n\n        return j.either(appliedFn, result);\n    }\n\n    //zOMG! TAIL OPTIMIZED RECURSION\n    function recursor(recurFn){\n        var args = j.slice(1, arguments);\n\n        //This is to make the returned function distinct and identifiable.\n        return function recursorFn(localRecursor){\n            return j.apply(recurFn, j.concat([localRecursor], args));\n        };\n    }\n\n    function verifyRecurValue(recurValue){\n        return typeof recurValue === 'function' &&\n            recurValue.toString().match('recursorFn');\n    }\n\n    //Tail optimization with managed recursion is really complicated.\n    //Please don't muck with this unless you TRULY understand what is happening.\n    function recur(userFn){\n        var recursingFn = j.either(j.identity, userFn, 'function'),\n            localRecursor = j.partial(recursor, recursingFn),\n            recurValue = j.apply(localRecursor, j.slice(1, arguments));\n\n        while(verifyRecurValue(recurValue = recurValue(localRecursor)) && recursingFn !== j.identity);\n\n        return recurValue;\n    }\n\n\t/*\n     * Reduce uses tail-optimized (while-trampolined, fully returning) recursion to resolve reductions.\n     * Reducer is a pure function for handling a single reduction step.\n     * Reduce manages the setup and recursion execution.\n     */\n    function reducer(userFn, recur, reduction, collection){\n        return collection.length === 0 ?\n                    reduction :\n                    recur(userFn(reduction, j.first(collection)),\n                          j.rest(collection));\n    }\n\n    function reduce(userFn, values){\n        var appliedReducer = j.partial(reducer, userFn),\n            initialState = arguments[2],\n            hasInitialState = typeof initialState !== 'undefined',\n            \n            initialValue = !hasInitialState ? j.first(values) : initialState,\n            remainder = !hasInitialState ? j.rest(values) : values;\n\n        return (Boolean(values) && values.length > 0) ? j.recur(appliedReducer, initialValue, remainder) : initialValue;\n    }\n\n    //Produces a function that returns f(g(x))\n    function compositor(f, g){\n        var $f = typeof f !== 'function' ? j.identity : f,\n            $g = typeof g !== 'function' ? j.identity : g;\n            \n        function compositeFn () {\n            return $f(j.apply($g, j.slice(0, arguments)));\n        }\n        \n        return compositeFn;\n    }\n\n    function compose(){\n        return reduce(compositor, j.slice(0, arguments), j.identity);\n    }\n\n    function pipeline(value){\n        return j.apply(compose, j.slice(1, arguments).reverse())(value);\n    }\n\n    function partialReverse(){\n        return j.apply(j.compose(j.reverseArgs, j.partial),\n                       j.slice(0, arguments));\n    }\n\n    function clone (originalValue, depth) {\n        var depthOkay = j.isUndefined(depth) || j.geq(depth, 0),\n            copyOkay = j.isType('object', originalValue) || j.isType('array', originalValue);\n        \n        function copy () {\n            var keys = Object.keys(originalValue),\n                container = j.isArray(originalValue) ? [] : {};\n            \n            j.each(function (key) {\n                var newDepth = j.isNumber(depth) ? depth - 1 : undefined;\n                \n                try {\n                    container[key] = clone(originalValue[key], newDepth);\n                } catch (err) {\n                    throw new RangeError('Object contains circular reference or is too deep to clone.');\n                }\n                \n            }, keys);\n            \n            return container;\n        }\n        \n        return copyOkay && depthOkay ? copy() : originalValue;\n    }\n\n    function maybeType (typeString) {\n        return j.curry(function (value) {\n            return j.maybe(value, typeString);\n        }).apply(j, j.slice(1, arguments));\n    }\n    \n    function eitherType (typeString) {\n        return j.curry(function (defaultValue, optionValue) {\n            return j.either(defaultValue, optionValue, typeString);\n        }).apply(j, j.slice(1, arguments));\n    }\n    \n    j.clone = clone;\n    j.compose = compose;\n    j.curry = curry;\n    j.eitherType = eitherType;\n    j.maybeType = maybeType;\n    j.partialReverse = partialReverse;\n    j.pipeline = pipeline;\n    j.recur = recur;\n    j.reduce = reduce;\n\n})(jfp);\n\n\n(function(j){\n\t\n    /*\n     * Map uses reduce to produce a new, completely reference-decoupled list of values\n     * Mapper handles a single update step for the final output array\n     */\n    function mapper(userFn, finalArray, value){\n        finalArray.push(userFn(value));\n        return finalArray;\n    }\n\n    function map (userFn, values) {\n        var mapperFn = j.partial(mapper, userFn);\n        return j.reduce(mapperFn, values, []);\n    }\n    \n    /*\n     * Filter uses reduce to produce a new, completely reference-decoupled list of values\n     * Filterer handles a single update step for the final output array\n     */\n    function filterer(userPredicate, finalArray, value){\n        return userPredicate(value) ? j.conj(value, finalArray) : finalArray;\n    }\n\n    function filter (predicate, values) {\n        var filterFn = j.partial(filterer, predicate);\n        return j.reduce(filterFn, values, []);\n    }\n    \n    function compact(valueList){\n        return filter(j.isTruthy, valueList);\n    }\n\n    function predicateAccumulator(predicate, total, value){\n        var sanitizedTotal = j.either(0, total, 'number');\n        return predicate(value) ? sanitizedTotal + 1 : sanitizedTotal;\n    }\n\n    function numberOf(predicate, valueSet){\n        var accumulator = j.partial(predicateAccumulator, predicate);\n        return j.reduce(accumulator, j.either([], valueSet), 0);\n    }\n\n    function captureUnique(finalList, value){\n        return j.last(finalList) === value ? finalList : j.conj(value, finalList);\n    }\n    \n    function unique(valueSet){\n        return j.reduce(captureUnique, j.sort(j.slice(0, valueSet)), []);\n    }\n\n    function union(set1, set2){\n        return j.compose(j.unique, j.concat)(set1, set2);\n    }\n\n    function addToHash(finalObject, value){\n        finalObject[value] = true;\n        return finalObject;\n    }\n\n    function buildValueHash(valueList){\n        return j.either({}, j.reduce(addToHash, valueList, {}));\n    }\n\n    function captureIntersection(valueHash, finalList, value){\n        return valueHash[value] ? j.conj(value, finalList) : finalList;\n    }\n    \n    function intersect(set1, set2){\n        var setHash = buildValueHash(j.either([], set2));\n        return j.reduce(j.partial(captureIntersection, setHash), set1, []); \n    }\n\n    function captureDifference(valueHash, finalList, value){\n        return !valueHash[value] ? j.conj(value, finalList) : finalList;\n    }\n    \n    function difference(set1, set2){\n        var setHash = buildValueHash(j.either([], set2));\n        return j.reduce(j.partial(captureDifference, setHash), set1, []);\n    }\n\n    function symmetricDifference(set1, set2){\n        var setUnion = union(set1, set2),\n            setIntersection = intersect(set1, set2);\n\n        return difference(setUnion, setIntersection);\n    }\n\n    function everyReducer (predicate, result, valueList){\n        return result && predicate(valueList);\n    }\n\n    function every (predicate, valueList){\n        var reducer = j.partial(everyReducer, predicate);\n        return Boolean(j.reduce(reducer, valueList, true));\n    }\n\n    function finder (recur, predicate, valueList) {\n        var done = !Boolean(valueList) || valueList.length === 0,\n            result = done ? null : j.first(valueList);\n        \n        return done || predicate(result) ? result : recur(predicate, j.rest(valueList));\n    }\n\n    function find (predicate, valueList){\n        return j.recur(finder, predicate, valueList);\n    }\n\n    function someRecur(recur, predicate, valueList){\n        var done = valueList.length === 0,\n            result = done ? false : predicate(j.first(valueList));\n            \n        return result || done ? result : recur(predicate, j.rest(valueList));\n    }\n\n    function some(predicate, valueList){\n        return Boolean(j.recur(someRecur, predicate, valueList));\n    }\n    \n    function contains(value, valueList){\n        return some(j.partial(j.equal, value), valueList);\n    }\n\n    function partitioner(predicate, partitions, value){\n        var index = predicate(value) ? 0 : 1;\n\n        partitions[index].push(value);\n\n        return partitions;\n    }\n\n    function partition(predicate, list){\n        var sanitizedPredicate = j.either(j.identity, predicate, 'function');\n        \n        return j.reduce(j.partial(partitioner, sanitizedPredicate),\n                        j.either([], list),\n                        [[], []]);\n    }\n\n    function multiPartitioner(predicate, partitions, value){\n        var partitionPredicate = j.rpartial(predicate, value),\n            computedPartitions = j.dropLast(partitions);\n        \n        return j.concat(computedPartitions, partition(partitionPredicate, j.last(partitions)));\n    }\n    \n    function multiPartition(predicate, predicateArgs, list){\n        var sanitizedArgs = j.either([], predicateArgs),\n            sanitizedPredicate = j.either(j.identity, predicate),\n            sanitizedList = j.either([], list);\n            \n        return !Boolean(list) ?\n                [[], []] :\n                j.reduce(j.partial(multiPartitioner, sanitizedPredicate),\n                         sanitizedArgs,\n                         [sanitizedList]);\n    }\n\n    function firstExists (list) {\n        return j.not(j.isNull(j.first(list)));\n    }\n\n    j.contains = contains;\n    j.compact = compact;\n    j.difference = difference;\n    j.every = every;\n\tj.filter = filter;\n    j.find = find;\n    j.firstExists = firstExists;\n    j.intersect = intersect;\n\tj.map = map;\n\tj.multiPartition = multiPartition;\n\tj.numberOf = numberOf;\n    j.partition = partition;\n    j.some = some;\n    j.symmetricDifference = symmetricDifference;\n    j.union = union;\n    j.unique = unique;\n\n})(jfp);\n\n(function (j) {\n\t'use strict';\n\t\n\t//Performs 'and' operation on valueSet\n    function ander(a, b){\n        return a && b;\n    }\n\n    function orer(a, b){\n        return a || b;\n    }\n\n    function reduceConditions(conditionArgs, operator, initialCondition){\n        var args = j.map(Boolean, j.slice(0, conditionArgs));\n        return Boolean(j.reduce(operator, args, initialCondition));\n    }\n\n    function and(a, b){\n        return reduceConditions(arguments, ander, true);\n    }\n\n    function or(a, b){\n        return reduceConditions(arguments, orer, false);\n    }\n\n    function xor(a, b){\n        var equivalent = Boolean(a) === Boolean(b);\n        return or(a, b) && j.not(equivalent);\n    }\n\n\tj.and = and;\n\tj.or = or;\n\tj.xor = xor;\n\n})(jfp);\n\n(function (j) {\n\t'use strict';\n\t\n    /*\n     * toValues converts an object to an array of values\n     * This is necessary for reduce to convert objects into\n     * processible arrays in an upcoming version.\n     */\n\tfunction keyReduction (baseObj, finalList, key) {\n\t\treturn j.conj(baseObj[key], finalList);\n\t}\n\t\n\tfunction toValues (baseObj) {\n\t\tvar reducer = j.partial(keyReduction, baseObj);\n\t\treturn j.isNull(j.maybe(baseObj, 'object')) ? null : j.reduce(reducer, Object.keys(baseObj), []);\n\t}\n\n\tfunction dereferencer(dataObject, token){\n        var key = j.either('', token).trim();\n        return key === '' ? dataObject : j.pick(token, dataObject);\n    }\n\n    function internalDeref(key, baseData, defaultValue){\n        var sanitizedDefault = defaultValue === undefined ? null : defaultValue,\n            keyTokens = key.split('.'),\n            result = j.reduce(dereferencer, keyTokens, baseData);\n        \n        return j.either(sanitizedDefault, result);\n    }\n    \n    function deref(key, baseData, defaultValue){\n        // Satisifes backwards-compatibility case where key an data are reversed\n        var sanitizedKey = typeof key === 'string' ? key : baseData,\n            sanitizedData = typeof baseData === 'object' ? baseData : key;\n        \n        // Fully sanitize data before executing the dereference function\n        sanitizedKey = j.either('', sanitizedKey, 'string');\n        sanitizedData = j.either(null, sanitizedData, 'object');\n        \n        return internalDeref(j.either('', sanitizedKey), sanitizedData, defaultValue);\n    }\n    \n    function plucker (baseObj, finalObj, key){\n        finalObj[key] = baseObj[key];\n        return finalObj;\n    }\n    \n    function pluckKeys (keys, baseObj){\n        var sanitizedObject = j.either({}, baseObj, 'object');\n        return j.reduce(j.partial(plucker, sanitizedObject), keys, {});\n    }\n    \n    function pluck (key, baseObj) {\n        return pluckKeys([key], baseObj);\n    }\n\n\tj.deref = deref;\n    j.pluck = pluck;\n    j.pluckKeys = pluckKeys;\n    j.toValues = toValues;\n\n})(jfp);\n\n(function(j){\n    'use strict';\n\n//This is a recursive add fn\n    function adder(recur, current, valueSet){\n        return (valueSet.length === 0) ?\n                current :\n                recur(current + j.first(valueSet), j.rest(valueSet));\n    }\n    \n    function add(a, b){\n        return j.recur(adder, 0, j.slice(0, arguments));\n    }\n    \n    //This is a recursive divide fn\n    function divider(recur, current, valueSet){\n        return (valueSet.length === 0) ?\n                current :\n                recur(current / j.first(valueSet), j.rest(valueSet));\n    }\n    \n    function divide(){\n        var args = j.slice(0, arguments),\n            first = args.length ? j.first(args) : 1;\n        return j.recur(divider, first, j.rest(args));\n    }\n    \n    //This is a recursive multiply fn\n    function multiplier(recur, current, valueSet){\n        return (valueSet.length === 0) ?\n                current :\n                recur(current * j.first(valueSet), j.rest(valueSet));\n    }\n    \n    function multiply(){\n        return j.recur(multiplier, 1, j.slice(0, arguments));\n    }\n    \n    //This is a recursive subtraction fn\n    function subtractor(recur, current, valueSet){\n        return (valueSet.length === 0) ?\n                current :\n                recur(current - j.first(valueSet), j.rest(valueSet));\n    }\n    \n    function subtract(){\n        var args = j.slice(0, arguments),\n            first = args.length ? j.first(args) : 0;\n        return j.recur(subtractor, first, j.rest(args));\n    }\n\n    //This is a recursive constructor function for ranges\n    function rangeRecurCheck(m, n, inc){\n        return inc > 0 ? (m + inc) < n : (m + inc) > n;\n    }\n\n    function rangeBuilder(recur, currentRange, m, n, inc){\n        var finalRange = rangeRecurCheck(m - inc, n, inc) ?\n                            j.conj(m, currentRange) :\n                            currentRange;\n        \n        return rangeRecurCheck(m, n, inc) ?\n                recur(finalRange, m + inc, n, inc) :\n                finalRange;\n    }\n    \n    function range(a, b, inc){\n        var start = j.isUndefined(b) ? 0 : a,\n            end = j.isUndefined(b) ? j.either(0, a) : b,\n            increment = (!inc) ? 1 : inc;\n            \n        return j.recur(rangeBuilder,\n                       [],\n                       j.either(0, start),\n                       j.either(0, end),\n                       increment);\n    }\n\n    function mod(a, b){\n        return j.isUndefined(b) ? j.either(0, a) : a%b;\n    }\n\n    function modulo(a, b){\n        var _a = j.either(0, a),\n            _b = j.either(0, b);\n\n        return (_a > 0) ? mod(_a, _b) : _b * (Math.floor(Math.abs(_a)/_b) + 1) + _a;\n    }\n\n    function truncate(value){\n        return (value > 0) ? Math.floor(value) : Math.floor(value) + 1;\n    }\n    \n    function max(a, b){\n        var maxValue = -Number.MAX_VALUE,\n            _a = j.isUndefined(a) ? maxValue : a,\n            _b = j.isUndefined(b) ? maxValue : b;\n            \n        maxValue = (_a > maxValue) ? _a : maxValue;\n        maxValue = (_b > maxValue) ? _b : maxValue;\n        \n        return maxValue;\n    }\n    \n    function min(a, b){\n        var minValue = Number.MAX_VALUE,\n            _a = j.isUndefined(a) ? minValue : a,\n            _b = j.isUndefined(b) ? minValue : b;\n        \n        minValue = (_a < minValue) ? _a : minValue;\n        minValue = (_b < minValue) ? _b : minValue;\n        \n        return minValue;\n    }\n\n    function fac(value){\n        var factorial = j.compose(j.partial(j.reduce, multiply),\n                                  j.partial(range, 1),\n                                  j.partial(add, 1));\n\n        return j.either(1, j.when(j.greater(value, 0), factorial, value));\n    }\n\n    j.add = add;\n    j.divide = divide;\n    j.fac = fac;\n    j.inc = j.partial(j.add, 1);\n    j.max = max;\n    j.min = min;\n    j.mod = mod;\n    j.modulo = modulo;\n    j.multiply = multiply;\n    j.range = range;\n    j.subtract = subtract;\n    j.truncate = truncate;\n\n})(jfp);\n\n\n(function(j){\n\n    function throwWhenNotComparable(a, b){\n        j.when(j.isUndefined(a) || j.isUndefined(b), function(){\n            throw new TypeError('Inequality comparisons require two values');\n        });\n    }\n\n    function greater(a, b){\n        throwWhenNotComparable(a, b);\n        return a > b;\n    }\n\n    function less(a, b){\n        throwWhenNotComparable(a, b);\n        return a < b;\n    }\n\n    function isInt(value){\n        return j.equal(j.truncate(value), value);\n    }\n\n    var isNegative = j.partial(greater, 0),\n        isPositive = j.partial(less, 0),\n        isZero = j.partial(j.equal, 0),\n        isEven = j.compose(isZero, j.rpartial(j.mod, 2));\n\n    j.isEven = isEven;\n    j.isInt = isInt;\n    j.isNegative = isNegative;\n    j.isNonNegative = j.compose(j.not, isNegative);\n    j.isNonPositive = j.compose(j.not, isPositive);\n    j.isNonZero = j.compose(j.not, isZero);\n    j.isOdd = j.compose(j.not, isEven);\n    j.isPositive = isPositive;\n    j.isZero = isZero;\n\n    //Special case predicate naming is intended for these functions\n    //There is a general expectation that these not be named with 'is'\n    j.geq = j.compose(j.not, less);\n    j.greater = greater;\n    j.leq = j.compose(j.not, greater);\n    j.less = less;\n\n})(jfp);\n\nvar j = jfp;\n\nif(typeof module !== 'undefined' && Boolean(module.exports)){\n    module.exports = j;\n}\n\n\n"]}