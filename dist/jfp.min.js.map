{"version":3,"file":"jfp.min.js","sources":["jfp.js"],"names":["jfp","resolveFunction","functionValue","curryAlias","args","slice","arguments","apply","curry","pickAlias","key","value","cleanKey","Boolean","pick","partial","chooseResolver","resolveToPick","charAt","resolver","j","isUndefined","undefined","not","equal","a","b","missingValues","isType","typeString","getType","isArray","Object","prototype","toString","call","isNumeric","pattern","number","numericString","match","isTruthy","typeCheckReduction","result","isPrimitive","primitiveNames","reduce","bind","isBoolean","isEmptyString","isFunction","isNull","isNumber","isObject","isString","identity","begin","valueSet","end","values","Array","shortCircuit","defaultValue","userFn","testValue","maybe","type","typeOkay","either","when","checkValue","eitherIf","predicateValue","safePredicate","eitherWhen","sanitizedFn","concat","original","extension","sanitizedExtension","i","length","push","basePartial","direction","appliedFunction","applicationArgs","reverseArgs","reverse","countArguments","execute","rpartial","toDec","parseInt","copyArray","makeValueArray","conj","dest","cons","source","first","lastIndex","last","drop","index","finalIndex","sanitizedIndex","firstArray","secondArray","dropLast","nth","rest","take","count","naturalComparator","comparison","sort","optionValue","comparator","finalSet","each","userArray","sanitizedArray","dropFirst","init","valueMap","pickResult","merge","defaultObj","mergeData","finalObj","argumentCount","appliedFn","recursor","recurFn","recursorFn","localRecursor","verifyRecurValue","recurValue","recur","recursingFn","valueReducer","baseObj","finalList","keyList","toValues","baseIsValid","keys","reducer","reduction","collection","initialState","appliedReducer","hasInitialState","initialValue","remainder","compositor","f","g","compositeFn","compose","pipeline","partialReverse","clone","originalValue","depth","depthOkay","geq","copyOkay","copy","container","newDepth","err","RangeError","map","filter","arrayReduceAdapter","reducerFn","valueList","mapper","finalArray","filterer","userPredicate","compact","predicateAccumulator","predicate","total","sanitizedTotal","numberOf","accumulator","captureUnique","unique","union","set1","set2","addToHash","finalObject","buildValueHash","captureIntersection","valueHash","intersect","setHash","captureDifference","difference","symmetricDifference","setUnion","setIntersection","everyReducer","every","finder","done","find","someRecur","some","contains","partitioner","partitions","partition","list","sanitizedPredicate","multiPartitioner","partitionPredicate","computedPartitions","multiPartition","predicateArgs","sanitizedArgs","sanitizedList","ander","orer","reduceConditions","conditionArgs","operator","initialCondition","and","or","xor","equivalent","dereferencer","dataObject","token","trim","internalDeref","baseData","sanitizedDefault","keyTokens","split","deref","sanitizedKey","sanitizedData","plucker","pluckKeys","sanitizedObject","pluck","adder","current","add","divider","divide","multiplier","multiply","subtractor","subtract","rangeRecurCheck","m","n","inc","rangeBuilder","currentRange","finalRange","range","start","increment","mod","modulo","_a","_b","Math","floor","abs","truncate","max","maxValue","Number","MAX_VALUE","min","minValue","fac","factorial","greater","throwWhenNotComparable","TypeError","less","isInt","isNegative","isPositive","isZero","isEven","isNonNegative","isNonPositive","isNonZero","isOdd","leq","module","exports"],"mappings":"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","sourcesContent":["var jfp = (function(){\n    'use strict';\n    \n    function resolveFunction(functionValue){\n        return typeof functionValue === 'string' ? jfp[functionValue] : functionValue;\n    }\n    \n    function curryAlias(){\n        var args = jfp.slice(0, arguments);\n\n        args[0] = resolveFunction(args[0]);\n        \n        return jfp.apply(jfp.curry, args);\n    }\n    \n    function pickAlias(key, value){\n        var cleanKey = key.slice(1);\n        \n        return Boolean(value) ? jfp.pick(cleanKey, value) : jfp.partial(jfp.pick, cleanKey);\n    }\n    \n    function chooseResolver(value){\n        var resolveToPick = typeof value === 'string' && value.charAt(0) === ':';\n        \n        return resolveToPick ? pickAlias : curryAlias;\n    }\n    \n    return function(){\n        var args = jfp.slice(0, arguments),\n            resolver = chooseResolver(args[0]);\n        \n        return jfp.apply(resolver, args);\n    };\n    \n})();\n\n(function(j){\n    'use strict';\n\n    function isUndefined(value){\n        return value === undefined;\n    }\n    \n    function not(value){\n        return !Boolean(value);\n    }\n    \n    function equal (a, b) {\n        var missingValues = isUndefined(a) || isUndefined(b);\n        return not(missingValues) && a === b;\n    }\n\n    function isType (typeString, value) {\n        return j.equal(j.getType(value), typeString);\n    }\n    \n    function isArray(value){\n        return isType('object', value) && Object.prototype.toString.call(value) === '[object Array]';\n    }\n    \n    function isNumeric(value){\n        var pattern = /^(0x)?[0-9]+((\\.[0-9]+)|(e\\-?[0-9]+))?$/,\n            number = isType('number', value),\n            numericString = isType('string', value) && Boolean(value.match(pattern));\n            \n        return number || numericString;\n    }\n    \n    function isTruthy(value){\n        return Boolean(value);\n    }\n    \n    function typeCheckReduction (value, result, typeString){\n        return result || isType(typeString, value);\n    }\n    \n    function isPrimitive (value) {\n        var primitiveNames = ['number',\n                              'string',\n                              'boolean',\n                              'undefined'];\n\n        return primitiveNames.reduce(typeCheckReduction.bind(null, value), equal(null, value));\n    }\n\n    j.equal = equal;\n    j.isArray = isArray;\n    j.isBoolean = isType.bind(null, 'boolean');\n    j.isEmptyString = equal.bind(null, '');\n    j.isFunction = isType.bind(null, 'function');\n    j.isNull = equal.bind(null, null);\n    j.isNumber = isType.bind(null, 'number');\n    j.isNumeric = isNumeric;\n    j.isObject = isType.bind(null, 'object');\n    j.isPrimitive = isPrimitive;\n    j.isString = isType.bind(null, 'string');\n    j.isType = isType;\n    j.isTruthy = isTruthy;\n    j.isUndefined = isType.bind(null, 'undefined');\n    j.not = not;\n\n})(jfp);\n\n\n(function(j){\n    'use strict';\n\n    function identity(value){\n        return value;\n    }\n\n    function slice(begin, valueSet, end){\n        var values = j.not(j.isTruthy(valueSet)) ? [] : valueSet;\n\n        return j.not(j.isTruthy(end)) ?\n                    Array.prototype.slice.call(values, begin) :\n                    Array.prototype.slice.call(values, begin, end);\n    }\n\n    function shortCircuit(defaultValue, userFn, testValue){\n        return (j.isTruthy(testValue) || testValue === 0) ?\n            userFn(testValue) :\n            defaultValue;\n    }\n\n    function maybe(value){\n        var type = arguments[1],\n            typeOkay = typeof value === type;\n\n        return typeOkay || (!type && !!value) ? value : null;\n    }\n\n    function either(defaultValue, testValue){\n        var type = arguments[2];\n        return maybe(testValue, type) === null ? defaultValue : testValue;\n    }\n\n    function apply(userFn, args){\n        return userFn.apply(null, args);\n    }\n\n    function when(checkValue, userFn){\n        var args = slice(2, arguments);\n        return j.isTruthy(checkValue) ? apply(userFn, args) : null;\n    }\n\n    function eitherIf(defaultValue, testValue, predicateValue){\n        var safePredicate = j.isUndefined(predicateValue) ? true : predicateValue;\n\n        return j.either(defaultValue, j.when(safePredicate, j.partial(j.identity, testValue)));\n    }\n\n    function eitherWhen(defaultValue, predicateValue, userFn){\n        var sanitizedFn = eitherIf(j.identity, userFn, j.isFunction(userFn));\n\n        return j.either(defaultValue, j.when(predicateValue, sanitizedFn));\n    }\n\n    function concat(original, extension){\n        var result = slice(0, either([], original)),\n            sanitizedExtension = either([], extension),\n            i;\n\n        //This is the most performant way to handle concatenation. Trust me.\n        for(i = 0; i < sanitizedExtension.length; i++){\n            result.push(sanitizedExtension[i]);\n        }\n\n        return result;\n    }\n\n    function basePartial(direction, userFn){\n        var args = slice(2, arguments);\n\n        return function appliedFunction(){\n            var applicationArgs = (direction === 'left') ?\n                                    concat(args, slice(0, arguments)) :\n                                    concat(slice(0, arguments), args);\n\n            return apply(userFn, applicationArgs);\n        };\n    }\n\n    function reverseArgs(userFn){\n        return function(){\n            var args = j.slice(0, arguments).reverse();\n            return j.apply(userFn, args);\n        };\n    }\n\n    function countArguments(userFn){\n        return either(function(){}, userFn).length;\n    }\n\n    function execute(userFn){\n        return j.apply(userFn, j.slice(1, arguments));\n    }\n    \n    function getType (value) {\n        return typeof value;\n    }\n\n    j.apply = apply;\n    j.concat = concat;\n    j.countArguments = countArguments;\n    j.either = either;\n    j.eitherIf = eitherIf;\n    j.eitherWhen = eitherWhen;\n    j.execute = execute;\n    j.getType = getType;\n    j.identity = identity;\n    j.maybe = maybe;\n    j.partial = basePartial('left', basePartial, 'left');\n    j.reverseArgs = reverseArgs;\n    j.rpartial = basePartial('left', basePartial, 'right');\n    j.shortCircuit = shortCircuit;\n    j.slice = slice;\n    j.when = when;\n\n})(jfp);\n\n\n(function(j){\n    'use strict';\n\n    function toDec(value){\n        return (j.isNumeric(value)) ? parseInt(value, 10) : null;\n    }\n\n    j.toDec = toDec;\n\n})(jfp);\n\n(function(j){\n    'use strict';\n\n    function copyArray(valueSet){\n        return j.slice(0, valueSet);\n    }\n\n    function makeValueArray(value){\n        return j.not(j.isUndefined(value)) ? [value] : [];\n    }\n\n    function conj(value, dest){\n        return j.concat(copyArray(dest), makeValueArray(value));\n    }\n\n    function cons(value, source){\n        return j.concat(makeValueArray(value), source);\n    }\n\n    function first(values){\n        return j.isArray(values) ? j.either(null, values[0]) : null;\n    }\n\n    function lastIndex(values){\n        return j.isArray(values) ? values.length - 1 : null;\n    }\n\n    function last(values){\n        return j.isArray(values) ? values[lastIndex(values)] : null;\n    }\n\n    function drop(index, valueSet){\n        var finalIndex = lastIndex(valueSet),\n\n            sanitizedIndex = (index === 0 || index === finalIndex) ?\n                index : j.either(1, index) - 1,\n\n            firstArray = (sanitizedIndex === 0) ?\n                [] : j.slice(0, valueSet, sanitizedIndex),\n\n            secondArray = (sanitizedIndex === finalIndex)?\n                [] : j.slice(sanitizedIndex + 1, valueSet);\n\n        return j.concat(firstArray, secondArray);\n    }\n\n    function dropLast(valueSet){\n        return drop(lastIndex(valueSet), valueSet);\n    }\n\n    function nth(index, valueSet){\n        return j.either(null, j.either([], valueSet)[index]);\n    }\n\n    function rest(values){\n        return j.slice(1, values);\n    }\n\n    function take(count, values){\n        return j.isArray(values) ? j.slice(0, values, count) : null;\n    }\n\n    function naturalComparator(a, b){\n        var comparison = a < b ? -1 : 1;\n        return a === b ? 0 : comparison;\n    }\n\n    function sort(optionValue, valueSet){\n        var comparator = j.isFunction(optionValue) ? optionValue : naturalComparator,\n            finalSet = j.isArray(optionValue) ? j.slice(0, optionValue) : j.slice(0, valueSet);\n\n        return finalSet.sort(comparator);\n    }\n\n    function each(userFn, userArray){\n        var sanitizedArray = j.either([], userArray),\n            sanitizedFn = j.either(j.identity, userFn),\n            i;\n\n        for(i = 0; i < sanitizedArray.length; i++){\n            if(sanitizedFn(sanitizedArray[i], i) === false){\n                break;\n            }\n        }\n\n        return sanitizedArray;\n    }\n\n    j.conj = conj;\n    j.cons = cons;\n    j.copyArray = copyArray;\n    j.drop = drop;\n    j.dropFirst = j.partial(drop, 0);\n    j.dropLast = dropLast;\n    j.each = each;\n    j.first = first;\n    j.init = j.dropLast;\n    j.last = last;\n    j.lastIndex = lastIndex;\n    j.nth = nth;\n    j.rest = rest;\n    j.sort = sort;\n    j.take = take;\n\n})(jfp);\n\n\n(function(j){\n    'use strict';\n\n    function pick(key, valueMap){\n        var pickResult = j.either({}, valueMap)[key];\n        return j.isUndefined(pickResult) ? null : pickResult;\n    }\n\n    function merge(defaultObj, mergeData){\n        var finalObj = {},\n            key;\n\n        for(key in j.either({}, defaultObj)){\n            finalObj[key] = defaultObj[key];\n        }\n\n        for(key in j.either({}, mergeData)){\n            finalObj[key] = mergeData[key];\n        }\n\n        return j.eitherIf(null, finalObj, j.isTruthy(defaultObj));\n    }\n\n    j.merge = merge;\n    j.pick = pick;\n\n})(jfp);\n\n\n(function(j){\n    'use strict';\n\n    //This is complicated and I don't expect people to grok it on first read.\n    function curry(userFn){\n        var args = j.slice(1, arguments),\n            argumentCount = j.countArguments(userFn),\n            appliedFn = (args.length < argumentCount) ? j.apply(j.partial, j.concat([curry, userFn], args)) : null,\n            result = (!!userFn && args.length >= argumentCount) ? j.apply(userFn, args) : null;\n\n        return j.either(appliedFn, result);\n    }\n\n    //zOMG! TAIL OPTIMIZED RECURSION\n    function recursor(recurFn){\n        var args = j.slice(1, arguments);\n\n        //This is to make the returned function distinct and identifiable.\n        return function recursorFn(localRecursor){\n            return j.apply(recurFn, j.concat([localRecursor], args));\n        };\n    }\n\n    function verifyRecurValue(recurValue){\n        return typeof recurValue === 'function' &&\n            recurValue.toString().match('recursorFn');\n    }\n\n    //Tail optimization with managed recursion is really complicated.\n    //Please don't muck with this unless you TRULY understand what is happening.\n    function recur(userFn){\n        var recursingFn = j.either(j.identity, userFn, 'function'),\n            localRecursor = j.partial(recursor, recursingFn),\n            recurValue = j.apply(localRecursor, j.slice(1, arguments));\n\n        while(verifyRecurValue(recurValue = recurValue(localRecursor)) && recursingFn !== j.identity);\n\n        return recurValue;\n    }\n\n    /*\n     * toValues converts an object to an array of values\n     * This is necessary for reduce to convert objects into\n     * processible arrays in an upcoming version.\n     */\n    function valueReducer (recur, baseObj, finalList, keyList) {\n        finalList.push(baseObj[j.first(keyList)]);\n        return keyList.length === 1 ? finalList : recur(baseObj, finalList, j.rest(keyList));\n    }\n    \n    function toValues (baseObj) {\n        var baseIsValid = typeof baseObj === 'object';\n        return !baseIsValid ? null : j.recur(valueReducer, baseObj, [], Object.keys(baseObj));\n    }\n    \n\t/*\n     * Reduce uses tail-optimized (while-trampolined, fully returning) recursion to resolve reductions.\n     * Reducer is a pure function for handling a single reduction step.\n     * Reduce manages the setup and recursion execution.\n     */\n    function reducer(userFn, recur, reduction, collection){\n        return collection.length === 0 ?\n                    reduction :\n                    recur(userFn(reduction, j.first(collection)),\n                          j.rest(collection));\n    }\n\n    function reduce(userFn, values, initialState){\n        var appliedReducer = j.partial(reducer, userFn),\n            hasInitialState = typeof initialState !== 'undefined',\n            \n            initialValue = !hasInitialState ? j.first(values) : initialState,\n            remainder = !hasInitialState ? j.rest(values) : values;\n\n        return (!!values && values.length > 0) ? j.recur(appliedReducer, initialValue, remainder) : initialValue;\n    }\n\n    //Produces a function that returns f(g(x))\n    function compositor(f, g){\n        var compositeFn = function(){\n            return f(j.apply(g, j.slice(0, arguments)));\n        };\n        \n        return typeof g !== 'function' ? f : compositeFn;\n    }\n\n    function compose(){\n        return reduce(compositor, j.slice(0, arguments), j.identity);\n    }\n\n    function pipeline(value){\n        return j.apply(compose, j.slice(1, arguments).reverse())(value);\n    }\n\n    function partialReverse(){\n        return j.apply(j.compose(j.reverseArgs, j.partial),\n                       j.slice(0, arguments));\n    }\n\n    function clone (originalValue, depth) {\n        var depthOkay = j.isUndefined(depth) || j.geq(depth, 0),\n            copyOkay = j.isType('object', originalValue);\n        \n        function copy () {\n            var keys = Object.keys(originalValue),\n                container = j.isArray(originalValue) ? [] : {};\n            \n            j.each(function (key) {\n                var newDepth = j.isNumber(depth) ? depth - 1 : undefined;\n                \n                try {\n                    container[key] = clone(originalValue[key], newDepth);\n                } catch (err) {\n                    throw new RangeError('Object contains circular reference or is too deep to clone.');\n                }\n                \n            }, keys);\n            \n            return container;\n        }\n        \n        return copyOkay && depthOkay ? copy() : originalValue;\n    }\n\n    j.clone = clone;\n    j.compose = compose;\n    j.curry = curry;\n    j.partialReverse = partialReverse;\n    j.pipeline = pipeline;\n    j.recur = recur;\n    j.reduce = reduce;\n    j.toValues = toValues;\n\n})(jfp);\n\n\n(function(j){\n\t\n    var map, filter;\n    \n    // Adapter function for reduce to allow for simplification of\n    // array construction behaviors like map and filter\n    function arrayReduceAdapter(reducerFn, userFn, valueList){\n        var appliedReducer = j.partial(reducerFn, userFn),\n            result = j.reduce(appliedReducer, valueList, []);\n        \n        return j.either([], result);\n    }\n\n    /*\n     * Map uses reduce to produce a new, completely reference-decoupled list of values\n     * Mapper handles a single update step for the final output array\n     */\n    function mapper(userFn, finalArray, value){\n        finalArray.push(userFn(value));\n        return finalArray;\n    }\n\n    map = j.partial(arrayReduceAdapter, mapper);\n\n    /*\n     * Filter uses reduce to produce a new, completely reference-decoupled list of values\n     * Filterer handles a single update step for the final output array\n     */\n    function filterer(userPredicate, finalArray, value){\n        return userPredicate(value) ? j.conj(value, finalArray) : finalArray;\n    }\n\n    filter = j.partial(arrayReduceAdapter, filterer);\n    \n    function compact(valueList){\n        return filter(j.isTruthy, valueList);\n    }\n\n    function predicateAccumulator(predicate, total, value){\n        var sanitizedTotal = j.either(0, total, 'number');\n        return predicate(value) ? sanitizedTotal + 1 : sanitizedTotal;\n    }\n\n    function numberOf(predicate, valueSet){\n        var accumulator = j.partial(predicateAccumulator, predicate);\n        return j.reduce(accumulator, j.either([], valueSet), 0);\n    }\n\n    function captureUnique(finalList, value){\n        return j.last(finalList) === value ? finalList : j.conj(value, finalList);\n    }\n    \n    function unique(valueSet){\n        return j.reduce(captureUnique, j.sort(j.slice(0, valueSet)), []);\n    }\n\n    function union(set1, set2){\n        return j.compose(j.unique, j.concat)(set1, set2);\n    }\n\n    function addToHash(finalObject, value){\n        finalObject[value] = true;\n        return finalObject;\n    }\n\n    function buildValueHash(valueList){\n        return j.either({}, j.reduce(addToHash, valueList, {}));\n    }\n\n    function captureIntersection(valueHash, finalList, value){\n        return valueHash[value] ? j.conj(value, finalList) : finalList;\n    }\n    \n    function intersect(set1, set2){\n        var setHash = buildValueHash(j.either([], set2));\n        return j.reduce(j.partial(captureIntersection, setHash), set1, []); \n    }\n\n    function captureDifference(valueHash, finalList, value){\n        return !valueHash[value] ? j.conj(value, finalList) : finalList;\n    }\n    \n    function difference(set1, set2){\n        var setHash = buildValueHash(j.either([], set2));\n        return j.reduce(j.partial(captureDifference, setHash), set1, []);\n    }\n\n    function symmetricDifference(set1, set2){\n        var setUnion = union(set1, set2),\n            setIntersection = intersect(set1, set2);\n\n        return difference(setUnion, setIntersection);\n    }\n\n    function everyReducer (predicate, result, valueList){\n        return result && predicate(valueList);\n    }\n\n    function every (predicate, valueList){\n        var reducer = j.partial(everyReducer, predicate);\n        return Boolean(j.reduce(reducer, valueList, true));\n    }\n\n    function finder (recur, predicate, valueList) {\n        var done = !Boolean(valueList) || valueList.length === 0,\n            result = done ? null : j.first(valueList);\n        \n        return done || predicate(result) ? result : recur(predicate, j.rest(valueList));\n    }\n\n    function find (predicate, valueList){\n        return j.recur(finder, predicate, valueList);\n    }\n\n    function someRecur(recur, predicate, valueList){\n        var done = valueList.length === 0,\n            result = done ? false : predicate(j.first(valueList));\n            \n        return result || done ? result : recur(predicate, j.rest(valueList));\n    }\n\n    function some(predicate, valueList){\n        return Boolean(j.recur(someRecur, predicate, valueList));\n    }\n    \n    function contains(value, valueList){\n        return some(j.partial(j.equal, value), valueList);\n    }\n\n    function partitioner(predicate, partitions, value){\n        var index = predicate(value) ? 0 : 1;\n\n        partitions[index].push(value);\n\n        return partitions;\n    }\n\n    function partition(predicate, list){\n        var sanitizedPredicate = j.either(j.identity, predicate, 'function');\n        \n        return j.reduce(j.partial(partitioner, sanitizedPredicate),\n                        j.either([], list),\n                        [[], []]);\n    }\n\n    function multiPartitioner(predicate, partitions, value){\n        var partitionPredicate = j.rpartial(predicate, value),\n            computedPartitions = j.dropLast(partitions);\n        \n        return j.concat(computedPartitions, partition(partitionPredicate, j.last(partitions)));\n    }\n    \n    function multiPartition(predicate, predicateArgs, list){\n        var sanitizedArgs = j.either([], predicateArgs),\n            sanitizedPredicate = j.either(j.identity, predicate),\n            sanitizedList = j.either([], list);\n            \n        return !Boolean(list) ?\n                [[], []] :\n                j.reduce(j.partial(multiPartitioner, sanitizedPredicate),\n                         sanitizedArgs,\n                         [sanitizedList]);\n    }\n\n    j.contains = contains;\n    j.compact = compact;\n    j.difference = difference;\n    j.every = every;\n\tj.filter = filter;\n    j.find = find;\n    j.intersect = intersect;\n\tj.map = map;\n\tj.multiPartition = multiPartition;\n\tj.numberOf = numberOf;\n    j.partition = partition;\n    j.some = some;\n    j.symmetricDifference = symmetricDifference;\n    j.union = union;\n    j.unique = unique;\n\n})(jfp);\n\n(function (j) {\n\t'use strict';\n\t\n\t//Performs 'and' operation on valueSet\n    function ander(a, b){\n        return a && b;\n    }\n\n    function orer(a, b){\n        return a || b;\n    }\n\n    function reduceConditions(conditionArgs, operator, initialCondition){\n        var args = j.map(Boolean, j.slice(0, conditionArgs));\n        return Boolean(j.reduce(operator, args, initialCondition));\n    }\n\n    function and(a, b){\n        return reduceConditions(arguments, ander, true);\n    }\n\n    function or(a, b){\n        return reduceConditions(arguments, orer, false);\n    }\n\n    function xor(a, b){\n        var equivalent = Boolean(a) === Boolean(b);\n        return or(a, b) && j.not(equivalent);\n    }\n\n\tj.and = and;\n\tj.or = or;\n\tj.xor = xor;\n\n})(jfp);\n\n(function (j) {\n\t'use strict';\n\t\n\tfunction dereferencer(dataObject, token){\n        var key = j.either('', token).trim();\n        return key === '' ? dataObject : j.pick(token, dataObject);\n    }\n\n    function internalDeref(key, baseData, defaultValue){\n        var sanitizedDefault = defaultValue === undefined ? null : defaultValue,\n            keyTokens = key.split('.'),\n            result = j.reduce(dereferencer, keyTokens, baseData);\n        \n        return j.either(sanitizedDefault, result);\n    }\n    \n    function deref(key, baseData, defaultValue){\n        // Satisifes backwards-compatibility case where key an data are reversed\n        var sanitizedKey = typeof key === 'string' ? key : baseData,\n            sanitizedData = typeof baseData === 'object' ? baseData : key;\n        \n        // Fully sanitize data before executing the dereference function\n        sanitizedKey = j.either('', sanitizedKey, 'string');\n        sanitizedData = j.either(null, sanitizedData, 'object');\n        \n        return internalDeref(j.either('', sanitizedKey), sanitizedData, defaultValue);\n    }\n    \n    function plucker (baseObj, finalObj, key){\n        finalObj[key] = baseObj[key];\n        return finalObj;\n    }\n    \n    function pluckKeys (keys, baseObj){\n        var sanitizedObject = j.either({}, baseObj, 'object');\n        return j.reduce(j.partial(plucker, sanitizedObject), keys, {});\n    }\n    \n    function pluck (key, baseObj) {\n        return pluckKeys([key], baseObj);\n    }\n\n\tj.deref = deref;\n    j.pluck = pluck;\n    j.pluckKeys = pluckKeys;\n\n})(jfp);\n\n(function(j){\n    'use strict';\n\n//This is a recursive add fn\n    function adder(recur, current, valueSet){\n        return (valueSet.length === 0) ?\n                current :\n                recur(current + j.first(valueSet), j.rest(valueSet));\n    }\n    \n    function add(a, b){\n        return j.recur(adder, 0, j.slice(0, arguments));\n    }\n    \n    //This is a recursive divide fn\n    function divider(recur, current, valueSet){\n        return (valueSet.length === 0) ?\n                current :\n                recur(current / j.first(valueSet), j.rest(valueSet));\n    }\n    \n    function divide(){\n        var args = j.slice(0, arguments),\n            first = args.length ? j.first(args) : 1;\n        return j.recur(divider, first, j.rest(args));\n    }\n    \n    //This is a recursive multiply fn\n    function multiplier(recur, current, valueSet){\n        return (valueSet.length === 0) ?\n                current :\n                recur(current * j.first(valueSet), j.rest(valueSet));\n    }\n    \n    function multiply(){\n        return j.recur(multiplier, 1, j.slice(0, arguments));\n    }\n    \n    //This is a recursive subtraction fn\n    function subtractor(recur, current, valueSet){\n        return (valueSet.length === 0) ?\n                current :\n                recur(current - j.first(valueSet), j.rest(valueSet));\n    }\n    \n    function subtract(){\n        var args = j.slice(0, arguments),\n            first = args.length ? j.first(args) : 0;\n        return j.recur(subtractor, first, j.rest(args));\n    }\n\n    //This is a recursive constructor function for ranges\n    function rangeRecurCheck(m, n, inc){\n        return inc > 0 ? (m + inc) < n : (m + inc) > n;\n    }\n\n    function rangeBuilder(recur, currentRange, m, n, inc){\n        var finalRange = rangeRecurCheck(m - inc, n, inc) ?\n                            j.conj(m, currentRange) :\n                            currentRange;\n        \n        return rangeRecurCheck(m, n, inc) ?\n                recur(finalRange, m + inc, n, inc) :\n                finalRange;\n    }\n    \n    function range(a, b, inc){\n        var start = j.isUndefined(b) ? 0 : a,\n            end = j.isUndefined(b) ? j.either(0, a) : b,\n            increment = (!inc) ? 1 : inc;\n            \n        return j.recur(rangeBuilder,\n                       [],\n                       j.either(0, start),\n                       j.either(0, end),\n                       increment);\n    }\n\n    function mod(a, b){\n        return j.isUndefined(b) ? j.either(0, a) : a%b;\n    }\n\n    function modulo(a, b){\n        var _a = j.either(0, a),\n            _b = j.either(0, b);\n\n        return (_a > 0) ? mod(_a, _b) : _b * (Math.floor(Math.abs(_a)/_b) + 1) + _a;\n    }\n\n    function truncate(value){\n        return (value > 0) ? Math.floor(value) : Math.floor(value) + 1;\n    }\n    \n    function max(a, b){\n        var maxValue = -Number.MAX_VALUE,\n            _a = j.isUndefined(a) ? maxValue : a,\n            _b = j.isUndefined(b) ? maxValue : b;\n            \n        maxValue = (_a > maxValue) ? _a : maxValue;\n        maxValue = (_b > maxValue) ? _b : maxValue;\n        \n        return maxValue;\n    }\n    \n    function min(a, b){\n        var minValue = Number.MAX_VALUE,\n            _a = j.isUndefined(a) ? minValue : a,\n            _b = j.isUndefined(b) ? minValue : b;\n        \n        minValue = (_a < minValue) ? _a : minValue;\n        minValue = (_b < minValue) ? _b : minValue;\n        \n        return minValue;\n    }\n\n    function fac(value){\n        var factorial = j.compose(j.partial(j.reduce, multiply),\n                                  j.partial(range, 1),\n                                  j.partial(add, 1));\n\n        return j.either(1, j.when(j.greater(value, 0), factorial, value));\n    }\n\n    j.add = add;\n    j.divide = divide;\n    j.fac = fac;\n    j.inc = j.partial(j.add, 1);\n    j.max = max;\n    j.min = min;\n    j.mod = mod;\n    j.modulo = modulo;\n    j.multiply = multiply;\n    j.range = range;\n    j.subtract = subtract;\n    j.truncate = truncate;\n\n})(jfp);\n\n\n(function(j){\n\n    function throwWhenNotComparable(a, b){\n        j.when(j.isUndefined(a) || j.isUndefined(b), function(){\n            throw new TypeError('Inequality comparisons require two values');\n        });\n    }\n\n    function greater(a, b){\n        throwWhenNotComparable(a, b);\n        return a > b;\n    }\n\n    function less(a, b){\n        throwWhenNotComparable(a, b);\n        return a < b;\n    }\n\n    function isInt(value){\n        return j.equal(j.truncate(value), value);\n    }\n\n    var isNegative = j.partial(greater, 0),\n        isPositive = j.partial(less, 0),\n        isZero = j.partial(j.equal, 0),\n        isEven = j.compose(isZero, j.rpartial(j.mod, 2));\n\n    j.isEven = isEven;\n    j.isInt = isInt;\n    j.isNegative = isNegative;\n    j.isNonNegative = j.compose(j.not, isNegative);\n    j.isNonPositive = j.compose(j.not, isPositive);\n    j.isNonZero = j.compose(j.not, isZero);\n    j.isOdd = j.compose(j.not, isEven);\n    j.isPositive = isPositive;\n    j.isZero = isZero;\n\n    //Special case predicate naming is intended for these functions\n    //There is a general expectation that these not be named with 'is'\n    j.geq = j.compose(j.not, less);\n    j.greater = greater;\n    j.leq = j.compose(j.not, greater);\n    j.less = less;\n\n})(jfp);\n\nvar j = jfp;\n\nif(typeof module !== 'undefined' && !!module.exports){\n    module.exports = j;\n}\n\n\n"]}