{"version":3,"sources":["jfp.js"],"names":["jfp","j","signet","require","checkNil","value","length","Object","keys","checkMaybe","typeObj","isTypeOf","valueType","checkSignet","isFunction","subtype","extend","checkArguments","prototype","toString","call","checkNull","checkDefined","checkIndex","setJfpTypes","_signet","numberPattern","alias","defineProperty","get","enforce","isUndefined","identity","always","bind","either","typeStr","checkType","defaultValue","maybe","nil","concat","valuesa","valuesb","result","slice","i","push","cons","values","conj","start","end","valueSet","Array","apply","fn","args","RecurObj","id","this","recursor","arguments","recur","Math","floor","random","signedRecursor","compose","fns","reverse","shift","isNil","execCompose","reverseArgs","maybeArray","eitherInt","attachCurryData","curriable","count","writeable","directionalCurry","directionalConcat","curry","done","fnLength","rcurry","equal","a","b","not","invert","pred","and","Boolean","or","xor","operationCurry","c","currySignature","nth","index","lastIndexOf","take","dropNth","splice","reverser","first","rest","folder","fold","direction","initial","noInitial","list","foldApplicator","behavior","filterer","mapper","find","finder","some","check","match","none","all","filter","map","foldl","foldr","operation","operator","Error","compare","range","min","increment","offset","max","buildRange","output","between","add","divide","mod","multiply","subtract","addBy","divideBy","modBy","multiplyBy","subtractBy","inc","dec","gt","geq","lt","leq","maybeDefined","pick","key","obj","deref","keyTokens","split","derefStep","setValue","merge","objA","objB","newObj","toArray","convertKeys","second","addRecord","record","toObject","tupleArray","convertTuples","objTuples","next","updateObj","cond","when","then","_default","action","condArray","prop","isResult","throwOnNil","condFn","callBehavior","module","exports","define","amd"],"mappings":";;AAAA,GAAIA,KAAM,WACN,YAiCA,OAAO,kBAIX,SAAWC,GACP,YAEA,IAAIC,cAAgBA,UAAW,YAAcA,OAASC,QAAQ,WAE9D,SAASC,UAASC,OACd,MAAOA,OAAMC,SAAW,GAAKC,OAAOC,KAAKH,OAAOC,SAAW,EAG/D,QAASG,YAAWJ,MAAOK,SACvB,MAAOR,QAAOS,SAASD,QAAQE,UAAU,IAAIP,QAAUD,SAASC,OAGpE,QAASQ,aAAYR,OACjB,GAAIS,YAAaZ,OAAOS,SAAS,WAEjC,OAAOG,YAAWT,MAAMU,UACpBD,WAAWT,MAAMW,SACjBF,WAAWZ,OAAOS,UAG1B,QAASM,gBAAeZ,OACpB,MAAOE,QAAOW,UAAUC,SAASC,KAAKf,SAAW,qBAGrD,QAASgB,WAAUhB,OACf,MAAOA,SAAU,KAGrB,QAASiB,cAAcjB,OACnB,OAAQH,OAAOS,SAAS,aAAaN,OAGzC,QAASkB,YAAYlB,OACjB,MAAOA,QAAS,EAGpB,QAASmB,aAAYC,SACjB,GAAIC,eAAgB,sCACpBD,SAAQV,QAAQ,SAAS,MAAOX,SAChCqB,SAAQV,QAAQ,OAAO,QAASQ,WAChCE,SAAQV,QAAQ,UAAU,YAAaE,eACvCQ,SAAQV,QAAQ,UAAU,SAAUF,YAEpCY,SAAQT,OAAO,QAASP,WACxBgB,SAAQT,OAAO,OAAQK,UACvBI,SAAQT,OAAO,UAAWM,aAE1BG,SAAQE,MAAM,UAAW,sCAAwCD,cAAgB,KACjFD,SAAQE,MAAM,aAAc,qCAC5BF,SAAQE,MAAM,YAAa,6BAE3B,OAAOF,SAGXD,YAAYtB,OAEZK,QAAOqB,eAAe3B,EAAG,OACrB4B,IAAK,WACD,WAKR5B,GAAE6B,QAAU5B,OAAO4B,OACnB7B,GAAEU,SAAWT,OAAOS,QACpBV,GAAEuB,YAActB,OAAO4B,QAAQ,mBAAoBN,eAGpDxB,MAEH,SAAWC,GACP,YAEA,IAAI8B,aAAc9B,EAAEU,SAAS,YAE7B,SAASqB,UAAS3B,OACd,MAAOA,OAGX,QAAS4B,QAAO5B,OACZ,MAAO2B,UAASE,KAAK,KAAM7B,OAG/B,QAAS8B,QAAOC,SACZ,GAAIC,WAAYpC,EAAEU,SAASyB,QAE3B,OAAO,UAAUE,cACb,MAAO,UAAUjC,OACb,MAAOgC,WAAUhC,OAASA,MAAQiC,eAK9C,QAASC,OAAMH,SACX,MAAOD,QAAOC,SAASnC,EAAEuC,KAG7B,QAASC,QAAOC,QAASC,SACrB,GAAIC,QAASF,QAAQG,MAAM,EAE3B,KAAK,GAAIC,GAAI,EAAGA,EAAIH,QAAQrC,OAAQwC,IAAK,CACrCF,OAAOG,KAAKJ,QAAQG,IAGxB,MAAOF,QAGX,QAASI,MAAK3C,MAAO4C,QACjB,MAAOlB,aAAY1B,OAAS4C,OAASR,QAAQpC,OAAQ4C,QAGzD,QAASC,MAAK7C,MAAO4C,QACjB,MAAOlB,aAAY1B,OAAS4C,OAASR,OAAOQ,QAAS5C,QAGzD,QAASwC,OAAMM,MAAOC,KAClB,MAAO,UAAUC,UACb,MAAOC,OAAMpC,UAAU2B,MAAMU,MAAMF,SAAUL,KAAKG,MAAOH,KAAKI,IAAKnD,EAAEuC,QAI7E,QAASe,OAAMC,GAAIC,MACf,MAAOD,IAAGD,MAAM,KAAME,MAG1B,QAASC,UAASC,GAAIF,MAClBG,KAAKD,GAAKA,EACVC,MAAKH,KAAOA,KAGhB,QAASI,UAAUF,IACf,MAAO,YACH,MAAO,IAAID,UAASC,GAAId,MAAM,GAAGiB,aAIzC,QAASC,OAAMP,IAEX,GAAIG,IAAKK,KAAKC,MAAMD,KAAKE,SAAW,IACpC,IAAIC,gBAAiBN,SAASF,GAE9B,OAAO,YACH,GAAIf,QAASW,MAAMY,eAAgBtB,MAAM,GAAGiB,WAE5C,OAAOlB,iBAAkBc,WAAYd,OAAOe,KAAOA,GAAI,CACnDf,OAASW,MAAMC,GAAIR,KAAKmB,eAAgBvB,OAAOa,OAGnD,MAAOb,SAIf,QAASwB,WACL,GAAIC,KAAMxB,MAAM,GAAGiB,WAAWQ,SAC9B,IAAId,IAAKa,IAAIE,OACb,IAAIC,OAAQvE,EAAEU,SAAS,MAEvB,OAAO,YACH,MAAOoD,OAAMU,aAAalB,MAAMC,GAAIX,MAAM,GAAGiB,YAAaO,IAE1D,SAASI,aAAYV,MAAOnB,OAAQyB,KAChC,MAAOG,OAAMH,KAAOzB,OAASmB,MAAMM,IAAI,GAAGzB,QAASC,MAAM,GAAGwB,QAKxE,QAASK,aAAYlB,IACjB,MAAO,YACH,MAAOD,OAAMC,GAAIX,MAAM,GAAGiB,WAAWQ,YAI7C,GAAIK,YAAapC,MAAM,QACvB,IAAIqC,WAAYzC,OAAO,MAEvB,SAAS0C,iBAAiBC,UAAWtB,GAAIuB,MAAOtB,MAC5ClD,OAAOqB,eAAekD,UAAW,YAC7BzE,MAAOuE,UAAUpB,GAAGlD,QAAQyE,OAC5BC,UAAW,OAGfF,WAAUtB,GAAKA,EACfsB,WAAUrB,KAAOkB,WAAWlB,KAE5B,OAAOqB,WAGX,QAASG,kBAAkBC,mBACvB,GAAIC,OAAQ,SAAU3B,GAAIuB,MAAOtB,MAE7B,GAAIqB,WAAY,WACZ,GAAIrB,MAAOyB,kBAAkBJ,UAAUrB,KAAMZ,MAAM,GAAGiB,WACtD,IAAIsB,MAAON,UAAUO,UAAY5B,KAAKnD,MAEtC,OAAO8E,MAAO7B,MAAMuB,UAAUtB,GAAIC,MAAQ0B,MAAM3B,GAAIsB,UAAUO,SAAU5B,MAG5E,OAAOoB,iBAAgBC,UAAWtB,GAAIuB,MAAOtB,MAGjD,OAAO0B,OAIXlF,EAAEgC,OAAShC,EAAE6B,QAAQ,gBAAiBG,OACtChC,GAAEsD,MAAQtD,EAAE6B,QAAQ,0BAA2ByB,MAC/CtD,GAAEmE,QAAUnE,EAAE6B,QAAQ,yBAA0BsC,QAChDnE,GAAEwC,OAASxC,EAAE6B,QAAQ,iCAAkCW,OACvDxC,GAAEiD,KAAOjD,EAAE6B,QAAQ,0BAA2BoB,KAC9CjD,GAAE+C,KAAO/C,EAAE6B,QAAQ,0BAA2BkB,KAC9C/C,GAAEkF,MAAQlF,EAAE6B,QAAQ,0CAA2CmD,iBAAiBxC,QAChFxC,GAAEqF,OAASrF,EAAE6B,QAAQ,0CAA2CmD,iBAAiBP,YAAYjC,SAC7FxC,GAAEkC,OAASlC,EAAE6B,QAAQ,wBAAyBK,OAC9ClC,GAAE+B,SAAW/B,EAAE6B,QAAQ,SAAUE,SACjC/B,GAAEsC,MAAQtC,EAAE6B,QAAQ,gCAAiCS,MACrDtC,GAAE8D,MAAQ9D,EAAE6B,QAAQ,uBAAwBiC,MAC5C9D,GAAEyE,YAAczE,EAAE6B,QAAQ,uBAAwB4C,YAClDzE,GAAE4C,MAAQ5C,EAAE6B,QAAQ,4DAA6De,SAElF7C,MAEH,SAAWC,GACP,YAEA,SAASsF,OAAMC,EAAGC,GACd,MAAOD,KAAMC,EAGjB,QAASC,KAAIF,GACT,OAAQA,EAGZ,QAASG,QAAOC,MACZ,MAAO3F,GAAEmE,QAAQnE,EAAEyF,IAAKE,MAG5B,QAASC,KAAKL,EAAGC,GACb,MAAOK,SAAQN,GAAKC,GAGxB,QAASM,IAAIP,EAAGC,GACZ,MAAOK,SAAQN,GAAKC,GAGxB,QAASO,KAAKR,EAAGC,GACb,MAAOK,SAAQN,GAAKC,EAAIA,GAG5B,GAAI1D,aAAc9B,EAAEU,SAAS,YAE7B,SAASsF,gBAAgBzC,IACrB,MAAO,UAAUgC,EAAGC,GAChB,MAAO1D,aAAY0D,GAAK,SAAUS,GAAK,MAAO1C,IAAGgC,EAAGU,IAAQ1C,GAAGgC,EAAGC,IAI1E,GAAIU,gBAAiB,uEAErBlG,GAAE0F,OAAS1F,EAAE6B,QAAQ,uBAAwB6D,OAC7C1F,GAAEsF,MAAQtF,EAAE6B,QAAQqE,eAAgBF,eAAeV,OACnDtF,GAAE4F,IAAM5F,EAAE6B,QAAQqE,eAAgBF,eAAeJ,KACjD5F,GAAE8F,GAAK9F,EAAE6B,QAAQqE,eAAgBF,eAAeF,IAChD9F,GAAE+F,IAAM/F,EAAE6B,QAAQqE,eAAgBF,eAAeD,KACjD/F,GAAEyF,IAAMzF,EAAE6B,QAAQ,wBAAyB4D,IAE3CzF,GAAEuE,MAAQvE,EAAEU,SAAS,MACrBV,GAAE8B,YAAc9B,EAAEU,SAAS,eAE5BX,MAEH,SAAWC,GACP,YAEA,IAAIuE,OAAQvE,EAAEU,SAAS,MAEvB,SAASyF,KAAIC,OACT,MAAO,UAAUpD,QACb,MAAOhD,GAAEsC,MAAM,WAAWU,OAAOoD,SAIzC,QAASC,aAAYrD,QACjB,GAAI3C,QAAS2C,OAAO3C,MACpB,OAAOA,UAAW,EAAIA,OAASA,OAAS,EAG5C,QAASiG,MAAKxB,OACV,MAAO,UAAU9B,QACb,MAAOhD,GAAE4C,MAAM,EAAGkC,OAAO9B,SAIjC,QAASuD,SAAQH,OACb,MAAO,UAAUpD,QACb,GAAIL,QAAS3C,EAAE4C,MAAM,GAAGI,OACxBL,QAAO6D,OAAOJ,MAAO,EACrB,OAAOzD,SAIf,QAAS0B,SAAQrB,QACb,MAAOhD,GAAE8D,MAAM2C,aAAczD,OAE7B,SAASyD,UAAS3C,MAAOnB,OAAQS,UAC7B,OAAQmB,MAAMnB,UACVU,MAAM9D,EAAE+C,KAAK/C,EAAE0G,MAAMtD,UAAWT,QAAS3C,EAAE2G,KAAKvD,WAChDT,QAIZ,QAASiE,QAAOrD,IACZ,MAAOvD,GAAE8D,MAAM,SAAUA,MAAOnB,OAAQK,QACpC,MAAOuB,OAAMvB,QAAUL,OAASmB,MAAMP,GAAGZ,OAAQ3C,EAAE0G,MAAM1D,SAAUhD,EAAE2G,KAAK3D,WAIlF,QAAS6D,MAAKC,WACV,MAAO,UAAUvD,GAAIwD,SACjB,MAAO,UAAU/D,QACb,GAAIgE,WAAYhH,EAAEU,SAAS,aAAaqG,QACxC,IAAI3D,UAAW0D,YAAc,OAAS9D,OAASqB,QAAQrB,OAEvD,IAAI5C,OAAQ4G,UAAYhH,EAAE0G,MAAMtD,UAAY2D,OAC5C,IAAIE,MAAOD,UAAYhH,EAAE2G,KAAKvD,UAAYA,QAE1C,OAAOwD,QAAOrD,IAAInD,MAAO6G,QAKrC,QAASC,gBAAeC,UACpB,MAAO,UAAU5D,IACb,MAAO,UAAUP,QACb,MAAO6D,MAAK,QAAQM,SAAS5D,QAASP,UAKlD,QAASoE,UAASzB,MACd,MAAO,UAAUhD,OAAQvC,OACrB,MAAOuF,MAAKvF,OAASJ,EAAEiD,KAAK7C,MAAOuC,QAAUA,QAIrD,QAAS0E,QAAO9D,IACZ,MAAO,UAAUZ,OAAQvC,OACrB,MAAOJ,GAAEiD,KAAKM,GAAGnD,OAAQuC,SAIjC,QAAS2E,MAAM3B,MACX,MAAO,UAAU3C,QACb,MAAOhD,GAAE8D,MAAMyD,QAAQvE,OAEvB,SAASuE,QAAQzD,MAAOd,QACpB,GAAI5C,OAAQJ,EAAE0G,MAAM1D,OACpB,OAAOuB,OAAMvB,SAAW2C,KAAKvF,OAASA,MAAQ0D,MAAM9D,EAAE2G,KAAK3D,WAKvE,QAASwE,MAAK7B,MACV,MAAO3F,GAAE8D,MAAM2D,MAEf,SAASA,OAAM3D,MAAOd,QAClB,GAAI0E,OAAQ/B,KAAK3F,EAAE0G,MAAM1D,QACzB,IAAImC,MAAOZ,MAAMvB,OAEjB,OAAO0E,QAASvC,KAAOuC,QAAUvC,KAAOrB,MAAM9D,EAAE2G,KAAK3D,UAI7D,GAAI2E,MAAO,SAAUhC,MAAQ,MAAO3F,GAAEmE,QAAQnE,EAAE0F,OAAQ8B,MAAM7B,MAC9D,IAAIiC,KAAM,SAAUjC,MAAQ,MAAO3F,GAAEmE,QAAQwD,KAAM3H,EAAE0F,QAAQC,MAE7D,IAAIkC,QAASX,eAAeE,SAC5B,IAAIU,KAAMZ,eAAeG,OAEzBrH,GAAE4H,IAAM5H,EAAE6B,QAAQ,kCAAmC+F,IACrD5H,GAAEuG,QAAUvG,EAAE6B,QAAQ,gCAAiC0E,QACvDvG,GAAE6H,OAAS7H,EAAE6B,QAAQ,mCAAoCgG,OACzD7H,GAAE0G,MAAQ1G,EAAE6B,QAAQ,6BAA8BsE,IAAI,GACtDnG,GAAEsH,KAAOtH,EAAE6B,QAAQ,4CAA6CyF,KAChEtH,GAAE+H,MAAQ/H,EAAE6B,QAAQ,iCAAkCgF,KAAK,QAC3D7G,GAAEgI,MAAQhI,EAAE6B,QAAQ,iCAAkCgF,KAAK,SAC3D7G,GAAEqG,YAAcrG,EAAE6B,QAAQ,oBAAqBwE,YAC/CrG,GAAE8H,IAAM9H,EAAE6B,QAAQ,mCAAoCiG,IACtD9H,GAAE2H,KAAO3H,EAAE6B,QAAQ,kCAAmC8F,KACtD3H,GAAEmG,IAAMnG,EAAE6B,QAAQ,sCAAuCsE,IACzDnG,GAAE2G,KAAO3G,EAAE4C,MAAM,EACjB5C,GAAEqE,QAAUrE,EAAE6B,QAAQ,uBAAwBwC,QAC9CrE,GAAEwH,KAAOxH,EAAE6B,QAAQ,kCAAmC2F,KACtDxH,GAAEsG,KAAOtG,EAAE6B,QAAQ,gCAAiCyE,QAErDvG,MAEH,SAAWC,GACP,YAEA,IAAI8B,aAAc9B,EAAEU,SAAS,YAE7B,SAASuH,WAAWC,UAChB,MAAO,UAAU3C,EAAGC,GAChB,OAAQ0C,UACJ,IAAK,IACD,MAAO3C,GAAIC,CACf,KAAK,IACD,MAAOD,GAAIC,CACf,KAAK,IACD,MAAOD,GAAIC,CACf,KAAK,IACD,MAAOD,GAAIC,CACf,KAAK,IACD,MAAOD,GAAIC,CACf,SACI,MAAO,IAAI2C,OAAM,kBAKjC,QAASC,SAASF,UACd,MAAO,UAAU3C,GACb,MAAO,UAAUC,GACb,OAAO0C,UACH,IAAK,IACD,MAAO3C,GAAIC,CACf,KAAK,IACD,MAAOD,GAAIC,CACf,KAAK,KACD,MAAOD,IAAKC,CAChB,KAAK,KACD,MAAOD,IAAKC,KAMhC,QAASQ,gBAAeiC,WACpB,MAAO,UAAU1C,GACb,GAAIC,GAAI3B,UAAU,EAClB,OAAO/B,aAAY0D,GAAK,SAAUA,GAAK,MAAOyC,WAAU1C,EAAGC,IAAQyC,UAAU1C,EAAGC,IAIxF,QAAS6C,OAAMC,IAAKC,WAChB,GAAIC,QAAS1G,YAAYyG,WAAa,EAAIA,SAE1C,OAAO,UAAUE,KACb,MAAOzI,GAAE8D,MAAM4E,YAAYJ,OAE3B,SAASI,YAAW5E,MAAO1D,MAAOuI,QAC9B,MAAOvI,OAAQqI,IAAME,OAAS7E,MAAM1D,MAAQoI,OAAQxI,EAAEiD,KAAK7C,MAAOuI,WAK9E,QAASF,KAAKlD,EAAGC,GACb,MAAOD,GAAIC,EAAID,EAAIC,EAGvB,QAAS8C,KAAK/C,EAAGC,GACb,MAAOD,GAAIC,EAAID,EAAIC,EAGvB,QAASF,OAAMC,EAAGC,GACd,MAAOD,KAAMC,EAGjB,QAASoD,SAASN,IAAKG,KACnB,GAAGH,KAAOG,IAAK,CACX,KAAM,IAAIN,OAAM,kBAAoBG,IAAM,qBAAuBG,KAGrE,MAAO,UAAUrI,OACb,MAAOkI,MAAOlI,OAASA,OAASqI,KAKxCzI,EAAE6I,IAAM7I,EAAE6B,QAAQ,2BAA4BoG,UAAU,KACxDjI,GAAE8I,OAAS9I,EAAE6B,QAAQ,2BAA4BoG,UAAU,KAC3DjI,GAAE+I,IAAM/I,EAAE6B,QAAQ,2BAA4BoG,UAAU,KACxDjI,GAAEgJ,SAAWhJ,EAAE6B,QAAQ,2BAA4BoG,UAAU,KAC7DjI,GAAEiJ,SAAWjJ,EAAE6B,QAAQ,2BAA4BoG,UAAU,KAE7DjI,GAAEkJ,MAAQlJ,EAAE6B,QAAQ,qDAAsDmE,eAAehG,EAAE6I,KAC3F7I,GAAEmJ,SAAWnJ,EAAE6B,QAAQ,qDAAsDmE,eAAehG,EAAEyE,YAAYzE,EAAE8I,SAC5G9I,GAAEoJ,MAAQpJ,EAAE6B,QAAQ,qDAAsDmE,eAAehG,EAAEyE,YAAYzE,EAAE+I,MACzG/I,GAAEqJ,WAAarJ,EAAE6B,QAAQ,qDAAsDmE,eAAehG,EAAEgJ,UAChGhJ,GAAEsJ,WAAatJ,EAAE6B,QAAQ,qDAAsDmE,eAAehG,EAAEyE,YAAYzE,EAAEiJ,WAE9GjJ,GAAEsI,IAAMtI,EAAE6B,QAAQ,qDAAsDmE,eAAesC,KACvFtI,GAAEyI,IAAMzI,EAAE6B,QAAQ,qDAAsDmE,eAAeyC,KAEvFzI,GAAEuJ,IAAMvJ,EAAE6B,QAAQ,eAAgBmE,eAAehG,EAAE6I,KAAK,GACxD7I,GAAEwJ,IAAMxJ,EAAE6B,QAAQ,eAAgBmE,eAAehG,EAAE6I,MAAM,GAEzD7I,GAAEqI,MAAQrI,EAAE6B,QAAQ,kCAAmCwG,MAEvDrI,GAAEyJ,GAAKzJ,EAAE6B,QAAQ,8BAA+BuG,QAAQ,KACxDpI,GAAE0J,IAAM1J,EAAE6B,QAAQ,8BAA+BuG,QAAQ,MACzDpI,GAAE2J,GAAK3J,EAAE6B,QAAQ,8BAA+BuG,QAAQ,KACxDpI,GAAE4J,IAAM5J,EAAE6B,QAAQ,8BAA+BuG,QAAQ,MACzDpI,GAAE4I,QAAU5I,EAAE6B,QAAQ,sCAAuC+G,WAE9D7I,MAEH,SAAWC,GACP,YAEA,IAAI6J,cAAe7J,EAAEsC,MAAM,UAE3B,SAASwH,MAAKC,KACV,MAAO,UAAUC,KACb,MAAOH,cAAaG,IAAID,OAIhC,QAASE,OAAMF,KACX,GAAIG,WAAYH,IAAII,MAAM,IAE1B,OAAO,UAAUH,KACb,MAAOhK,GAAE8D,MAAMsG,WAAWJ,IAAKE,UAE/B,SAASE,WAAUtG,MAAOkG,IAAKE,WAC3B,GAAIH,KAAM/J,EAAE0G,MAAMwD,UAElB,OAAOlK,GAAEuE,MAAM2F,WAAaF,IAAMlG,MAAMgG,KAAKC,KAAKC,KAAMhK,EAAE2G,KAAKuD,cAK3E,QAASG,UAASL,KACd,MAAO,UAAUrH,OAAQoH,KACrBpH,OAAOoH,KAAOC,IAAID,IAClB,OAAOpH,SAIf,QAAS2H,OAAMC,KAAMC,MACjB,GAAIC,QAASzK,EAAE+H,MAAMsC,SAASE,UAAWjK,OAAOC,KAAKgK,MACrD,OAAOvK,GAAE+H,MAAMsC,SAASG,MAAOC,QAAQnK,OAAOC,KAAKiK,OAGvD,QAASE,SAAQV,KACb,MAAOhK,GAAE8D,MAAM6G,gBAAiBrK,OAAOC,KAAKyJ,KAE5C,SAASW,aAAY7G,MAAOnB,OAAQpC,MAChC,GAAIwJ,KAAM/J,EAAE0G,MAAMnG,KAClB,OAAOP,GAAEuE,MAAMhE,MAAQoC,OAASmB,MAAM9D,EAAEiD,MAAM8G,IAAKC,IAAID,MAAOpH,QAAS3C,EAAE2G,KAAKpG,QAItF,GAAIqK,QAAS5K,EAAEmG,IAAI,EAEnB,SAAS0E,WAAUb,IAAKc,QACpBd,IAAIhK,EAAE0G,MAAMoE,SAAWF,OAAOE,OAE9B,OAAOd,KAGX,QAASe,UAASC,YACd,MAAOhL,GAAE8D,MAAMmH,kBAAmBD,WAElC,SAASC,eAAcnH,MAAOnB,OAAQuI,WAClC,GAAIC,MAAOnL,EAAEqF,OAAOvB,MAAO,GAAG9D,EAAE2G,KAAKuE,WACrC,IAAIE,WAAYpL,EAAEmE,QAAQnE,EAAEkF,MAAM2F,WAAWlI,QAAS3C,EAAE0G,MAExD,OAAO1G,GAAEqL,KAAK,SAAUC,KAAMC,KAAMC,UAChCF,KAAKtL,EAAEuE,MAAM2G,WAAYK,KAAK5I,QAC9B2I,MAAKE,SAAUD,KAAKvL,EAAEmE,QAAQgH,KAAMC,WAAYF,eAK5DlL,EAAE8J,KAAO9J,EAAE6B,QAAQ,qCAAsCiI,KACzD9J,GAAEiK,MAAQjK,EAAE6B,QAAQ,qCAAsCoI,MAC1DjK,GAAEsK,MAAQtK,EAAE6B,QAAQ,2BAA4ByI,MAChDtK,GAAE0K,QAAU1K,EAAE6B,QAAQ,sCAAuC6I,QAC7D1K,GAAE+K,SAAW/K,EAAE6B,QAAQ,sCAAuCkJ,YAE/DhL,MAEH,SAAWC,GACP,YAEA,IAAIa,YAAab,EAAEU,SAAS,WAE5B,SAAS6K,MAAMhI,IACX,GAAI6C,OAAQvF,WAAW0C,IAAM,EAAI,CACjC,IAAIkI,QAASrF,QAAU,EAAI7C,GAAKvD,EAAE+B,QAElC,QAAQ0J,OAAQzL,EAAE4C,MAAMwD,OAAOvC,YAGnC,QAASyH,MAAMI,WACX,MAAO,UAAUC,KAAMxE,UACnBuE,UAAU5I,MAAM6I,KAAMxE,YAI9B,GAAIyE,UAAW5L,EAAEmE,QAAQ0B,QAAS7F,EAAE0G,MAEpC,SAASmF,YAAYlJ,OAAQmJ,QACzB,GAAG9L,EAAEuE,MAAM5B,QAAS,CAChB,KAAM,IAAIwF,OAAM,mDAAqD2D,OAAO5K,aAIpF,QAAS6K,cAAc5E,UACnB,GAAI5D,IAAK4D,SAAS,EAClB,IAAI3D,MAAO2D,SAAS,EAEpB,OAAOnH,GAAEsD,MAAMC,GAAIC,MAGvB,QAAS6H,MAAMS,QACX,GAAIJ,aAEJI,QAAOR,KAAKI,WAAYH,KAAM,KAE9B,IAAI5I,QAAS3C,EAAEsH,KAAKsE,UAAUF,UAC9B,IAAIvE,UAAWxE,OAAO,EAEtBkJ,YAAWlJ,OAAQmJ,OAEnB,OAAOC,cAAa5E,UAGxBnH,EAAEqL,KAAOrL,EAAE6B,QAAQ,4CAA6CwJ,QAEjEtL,IAEH,IAAIC,GAAID,GAER,UAAUiM,UAAW,aAAenG,QAAQmG,OAAOC,SAAS,CAExDD,OAAOC,QAAUjM,MACd,UAAWkM,UAAW,YAAcrG,QAAQqG,OAAOC,KAAM,CAE5DD,UAAW,WACP,MAAOnM","file":"jfp.min.js","sourcesContent":["var jfp = (function(){\r\n    'use strict';\r\n    \r\n    // function resolveFunction(functionValue){\r\n    //     return typeof functionValue === 'string' ? jfp[functionValue] : functionValue;\r\n    // }\r\n    \r\n    // function curryAlias(){\r\n    //     var args = jfp.slice(0, arguments);\r\n\r\n    //     args[0] = resolveFunction(args[0]);\r\n        \r\n    //     return jfp.apply(jfp.curry, args);\r\n    // }\r\n    \r\n    // function pickAlias(key, value){\r\n    //     var cleanKey = key.slice(1);\r\n        \r\n    //     return Boolean(value) ? jfp.pick(cleanKey, value) : jfp.partial(jfp.pick, cleanKey);\r\n    // }\r\n    \r\n    // function chooseResolver(value){\r\n    //     var resolveToPick = typeof value === 'string' && value.charAt(0) === ':';\r\n        \r\n    //     return resolveToPick ? pickAlias : curryAlias;\r\n    // }\r\n    \r\n    // return function(){\r\n    //     var args = jfp.slice(0, arguments),\r\n    //         resolver = chooseResolver(args[0]);\r\n        \r\n    //     return jfp.apply(resolver, args);\r\n    // };\r\n    \r\n    return function () {};\r\n    \r\n})();\r\n\r\n(function (j) {\r\n    'use strict';\r\n\r\n    var signet = typeof signet !== 'undefined' ? signet : require('signet')();\r\n\r\n    function checkNil(value) {\r\n        return value.length === 0 && Object.keys(value).length === 0;\r\n    }\r\n\r\n    function checkMaybe(value, typeObj) {\r\n        return signet.isTypeOf(typeObj.valueType[0])(value) || checkNil(value);\r\n    }\r\n\r\n    function checkSignet(value) {\r\n        var isFunction = signet.isTypeOf('function');\r\n\r\n        return isFunction(value.subtype) &&\r\n            isFunction(value.extend) &&\r\n            isFunction(signet.isTypeOf);\r\n    }\r\n\r\n    function checkArguments(value) {\r\n        return Object.prototype.toString.call(value) === '[object Arguments]';\r\n    }\r\n\r\n    function checkNull(value) {\r\n        return value === null;\r\n    }\r\n\r\n    function checkDefined (value){\r\n        return !signet.isTypeOf('undefined')(value);\r\n    }\r\n\r\n    function checkIndex (value){\r\n        return value >= 0;\r\n    }\r\n\r\n    function setJfpTypes(_signet) {\r\n        var numberPattern = '^[0-9]+((\\\\.[0-9]+)|(e\\\\-?[0-9]+))?$';\r\n        _signet.subtype('array')('nil', checkNil);\r\n        _signet.subtype('int')('index', checkIndex);\r\n        _signet.subtype('object')('arguments', checkArguments);\r\n        _signet.subtype('object')('signet', checkSignet);\r\n\r\n        _signet.extend('maybe', checkMaybe);\r\n        _signet.extend('null', checkNull);\r\n        _signet.extend('defined', checkDefined);\r\n\r\n        _signet.alias('numeric', 'taggedUnion<number;formattedString<' + numberPattern + '>>');\r\n        _signet.alias('comparable', 'taggedUnion<boolean;number;string>');\r\n        _signet.alias('objectKey', 'taggedUnion<string;symbol>');\r\n\r\n        return _signet;\r\n    }\r\n\r\n    setJfpTypes(signet);\r\n\r\n    Object.defineProperty(j, 'nil', {\r\n        get: function () {\r\n            return [];\r\n        }\r\n    });\r\n\r\n    // Type system behaviors\r\n    j.enforce = signet.enforce;\r\n    j.isTypeOf = signet.isTypeOf;\r\n    j.setJfpTypes = signet.enforce('signet => signet', setJfpTypes);\r\n\r\n\r\n})(jfp);\r\n\r\n(function (j) {\r\n    'use strict';\r\n\r\n    var isUndefined = j.isTypeOf('undefined');\r\n\r\n    function identity(value) {\r\n        return value;\r\n    }\r\n\r\n    function always(value) {\r\n        return identity.bind(null, value);\r\n    }\r\n\r\n    function either(typeStr) {\r\n        var checkType = j.isTypeOf(typeStr);\r\n\r\n        return function (defaultValue) {\r\n            return function (value) {\r\n                return checkType(value) ? value : defaultValue;\r\n            };\r\n        };\r\n    }\r\n\r\n    function maybe(typeStr) {\r\n        return either(typeStr)(j.nil);\r\n    }\r\n\r\n    function concat(valuesa, valuesb) {\r\n        var result = valuesa.slice(0);\r\n\r\n        for (var i = 0; i < valuesb.length; i++) {\r\n            result.push(valuesb[i]);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    function cons(value, values) {\r\n        return isUndefined(value) ? values : concat([value], values);\r\n    }\r\n\r\n    function conj(value, values) {\r\n        return isUndefined(value) ? values : concat(values, [value]);\r\n    }\r\n\r\n    function slice(start, end) {\r\n        return function (valueSet) {\r\n            return Array.prototype.slice.apply(valueSet, cons(start, cons(end, j.nil)));\r\n        };\r\n    }\r\n\r\n    function apply(fn, args) {\r\n        return fn.apply(null, args);\r\n    }\r\n\r\n    function RecurObj(id, args) {\r\n        this.id = id;\r\n        this.args = args;\r\n    }\r\n\r\n    function recursor (id){\r\n        return function () {\r\n            return new RecurObj(id, slice(0)(arguments));\r\n        };\r\n    }\r\n\r\n    function recur(fn) {\r\n        // Each recursion needs to be signed to avoid collisions\r\n        var id = Math.floor(Math.random() * 1000000);\r\n        var signedRecursor = recursor(id);\r\n        \r\n        return function () {\r\n            var result = apply(signedRecursor, slice(0)(arguments));\r\n\r\n            while (result instanceof RecurObj && result.id === id) {\r\n                result = apply(fn, cons(signedRecursor, result.args));\r\n            }\r\n\r\n            return result;\r\n        };\r\n    }\r\n\r\n    function compose() {\r\n        var fns = slice(0)(arguments).reverse();\r\n        var fn = fns.shift();\r\n        var isNil = j.isTypeOf('nil');\r\n\r\n        return function () {\r\n            return recur(execCompose)(apply(fn, slice(0)(arguments)), fns);\r\n\r\n            function execCompose(recur, result, fns) {\r\n                return isNil(fns) ? result : recur(fns[0](result), slice(1)(fns));\r\n            }\r\n        };\r\n    }\r\n\r\n    function reverseArgs(fn) {\r\n        return function () {\r\n            return apply(fn, slice(0)(arguments).reverse());\r\n        };\r\n    }\r\n\r\n    var maybeArray = maybe('array');\r\n    var eitherInt = either('int');\r\n\r\n    function attachCurryData (curriable, fn, count, args){\r\n        Object.defineProperty(curriable, 'fnLength', {\r\n            value: eitherInt(fn.length)(count),\r\n            writeable: false\r\n        });\r\n        \r\n        curriable.fn = fn;\r\n        curriable.args = maybeArray(args);\r\n\r\n        return curriable;\r\n    }\r\n\r\n    function directionalCurry (directionalConcat) {\r\n        var curry = function (fn, count, args) {\r\n            \r\n            var curriable = function () {\r\n                var args = directionalConcat(curriable.args, slice(0)(arguments));\r\n                var done = curriable.fnLength <= args.length;\r\n\r\n                return done ? apply(curriable.fn, args) : curry(fn, curriable.fnLength, args);\r\n            };\r\n\r\n            return attachCurryData(curriable, fn, count, args);\r\n        };\r\n        \r\n        return curry;\r\n    }\r\n\r\n    // JFP core functions\r\n    j.always = j.enforce('* => [*] => *', always);\r\n    j.apply = j.enforce('function, array<*> => *', apply);\r\n    j.compose = j.enforce('[function] => function', compose);\r\n    j.concat = j.enforce('array<*>, array<*> => array<*>', concat);\r\n    j.conj = j.enforce('*, array<*> => array<*>', conj);\r\n    j.cons = j.enforce('*, array<*> => array<*>', cons);\r\n    j.curry = j.enforce('function, [int], [array<*>] => [*] => *', directionalCurry(concat));\r\n    j.rcurry = j.enforce('function, [int], [array<*>] => [*] => *', directionalCurry(reverseArgs(concat)));\r\n    j.either = j.enforce('string => * => * => *', either);\r\n    j.identity = j.enforce('* => *', identity);\r\n    j.maybe = j.enforce('string => * => maybe<defined>', maybe);\r\n    j.recur = j.enforce('function => function', recur);\r\n    j.reverseArgs = j.enforce('function => [*] => *', reverseArgs);\r\n    j.slice = j.enforce('int, [int] => taggedUnion<array<*>;arguments> => array<*>', slice);\r\n\r\n})(jfp);\r\n\r\n(function (j) {\r\n    'use strict';\r\n\r\n    function equal(a, b) {\r\n        return a === b;\r\n    }\r\n\r\n    function not(a) {\r\n        return !a;\r\n    }\r\n\r\n    function invert(pred) {\r\n        return j.compose(j.not, pred);\r\n    }\r\n\r\n    function and (a, b){\r\n        return Boolean(a && b);\r\n    }\r\n    \r\n    function or (a, b){\r\n        return Boolean(a || b);\r\n    }\r\n    \r\n    function xor (a, b) {\r\n        return Boolean(a ? !b : b);\r\n    }\r\n\r\n    var isUndefined = j.isTypeOf('undefined');\r\n\r\n    function operationCurry (fn){\r\n        return function (a, b) {\r\n            return isUndefined(b) ? function (c) { return fn(a, c); } : fn(a, b);\r\n        };\r\n    }\r\n\r\n    var currySignature = 'comparable, [comparable] => taggedUnion<function<comparable>;boolean>';\r\n\r\n    j.invert = j.enforce('function => function', invert);\r\n    j.equal = j.enforce(currySignature, operationCurry(equal));\r\n    j.and = j.enforce(currySignature, operationCurry(and));\r\n    j.or = j.enforce(currySignature, operationCurry(or));\r\n    j.xor = j.enforce(currySignature, operationCurry(xor));\r\n    j.not = j.enforce('comparable => boolean', not);\r\n\r\n    j.isNil = j.isTypeOf('nil');\r\n    j.isUndefined = j.isTypeOf('undefined');\r\n\r\n})(jfp);\r\n\r\n(function (j) {\r\n    'use strict';\r\n\r\n    var isNil = j.isTypeOf('nil');\r\n\r\n    function nth(index) {\r\n        return function (values) {\r\n            return j.maybe('defined')(values[index]);\r\n        };\r\n    }\r\n\r\n    function lastIndexOf(values) {\r\n        var length = values.length;\r\n        return length === 0 ? length : length - 1;\r\n    }\r\n\r\n    function take(count) {\r\n        return function (values) {\r\n            return j.slice(0, count)(values);\r\n        };\r\n    }\r\n\r\n    function dropNth(index) {\r\n        return function (values) {\r\n            var result = j.slice(0)(values);\r\n            result.splice(index, 1);\r\n            return result;\r\n        };\r\n    }\r\n\r\n    function reverse(values) {\r\n        return j.recur(reverser)([], values);\r\n\r\n        function reverser(recur, result, valueSet) {\r\n            return !isNil(valueSet) ?\r\n                recur(j.cons(j.first(valueSet), result), j.rest(valueSet)) :\r\n                result;\r\n        }\r\n    }\r\n\r\n    function folder(fn) {\r\n        return j.recur(function (recur, result, values) {\r\n            return isNil(values) ? result : recur(fn(result, j.first(values)), j.rest(values));\r\n        });\r\n    }\r\n\r\n    function fold(direction) {\r\n        return function (fn, initial) {\r\n            return function (values) {\r\n                var noInitial = j.isTypeOf('undefined')(initial);\r\n                var valueSet = direction === 'left' ? values : reverse(values);\r\n\r\n                var value = noInitial ? j.first(valueSet) : initial;\r\n                var list = noInitial ? j.rest(valueSet) : valueSet;\r\n\r\n                return folder(fn)(value, list);\r\n            };\r\n        };\r\n    }\r\n\r\n    function foldApplicator(behavior) {\r\n        return function (fn) {\r\n            return function (values) {\r\n                return fold('left')(behavior(fn), [])(values);\r\n            };\r\n        };\r\n    }\r\n\r\n    function filterer(pred) {\r\n        return function (result, value) {\r\n            return pred(value) ? j.conj(value, result) : result;\r\n        };\r\n    }\r\n\r\n    function mapper(fn) {\r\n        return function (result, value) {\r\n            return j.conj(fn(value), result);\r\n        };\r\n    }\r\n\r\n    function find (pred){\r\n        return function (values) {\r\n            return j.recur(finder)(values);\r\n            \r\n            function finder (recur, values){\r\n                var value = j.first(values);\r\n                return isNil(values) || pred(value) ? value : recur(j.rest(values));\r\n            }\r\n        };\r\n    }\r\n\r\n    function some(pred) {\r\n        return j.recur(check);\r\n\r\n        function check(recur, values) {\r\n            var match = pred(j.first(values));\r\n            var done = isNil(values);\r\n\r\n            return match || done ? match && !done : recur(j.rest(values));\r\n        }\r\n    }\r\n\r\n    var none = function (pred) { return j.compose(j.invert, some)(pred); };\r\n    var all = function (pred) { return j.compose(none, j.invert)(pred); };\r\n\r\n    var filter = foldApplicator(filterer);\r\n    var map = foldApplicator(mapper);\r\n\r\n    j.all = j.enforce('function => array<*> => boolean', all);\r\n    j.dropNth = j.enforce('index => array<*> => array<*>', dropNth);\r\n    j.filter = j.enforce('function => array<*> => array<*>', filter);\r\n    j.first = j.enforce('array<*> => maybe<defined>', nth(0));\r\n    j.find = j.enforce('function<*> => array<*> => maybe<defined>', find);\r\n    j.foldl = j.enforce('function, [*] => array<*> => *', fold('left'));\r\n    j.foldr = j.enforce('function, [*] => array<*> => *', fold('right'));\r\n    j.lastIndexOf = j.enforce('array<*> => index', lastIndexOf);\r\n    j.map = j.enforce('function => array<*> => array<*>', map);\r\n    j.none = j.enforce('function => array<*> => boolean', none);\r\n    j.nth = j.enforce('index => array<*> => maybe<defined>', nth);\r\n    j.rest = j.slice(1);\r\n    j.reverse = j.enforce('array<*> => array<*>', reverse);\r\n    j.some = j.enforce('function => array<*> => boolean', some);\r\n    j.take = j.enforce('index => array<*> => array<*>', take);\r\n\r\n})(jfp);\r\n\r\n(function (j) {\r\n    'use strict';\r\n\r\n    var isUndefined = j.isTypeOf('undefined');\r\n\r\n    function operation (operator){\r\n        return function (a, b) {\r\n            switch (operator) {\r\n                case '+':\r\n                    return a + b;\r\n                case '-':\r\n                    return a - b;\r\n                case '*':\r\n                    return a * b;\r\n                case '/':\r\n                    return a / b;\r\n                case '%':\r\n                    return a % b;\r\n                default:\r\n                    return new Error('Bad operator');\r\n            }\r\n        };\r\n    }\r\n\r\n    function compare (operator){\r\n        return function (a) {\r\n            return function (b) {\r\n                switch(operator) {\r\n                    case '>':\r\n                        return a > b;\r\n                    case '<':\r\n                        return a < b;\r\n                    case '>=':\r\n                        return a >= b;\r\n                    case '<=':\r\n                        return a <= b;\r\n                }\r\n            };\r\n        };\r\n    }\r\n\r\n    function operationCurry(operation) {\r\n        return function (a) {\r\n            var b = arguments[1];\r\n            return isUndefined(b) ? function (b) { return operation(a, b); } : operation(a, b);\r\n        };\r\n    }\r\n\r\n    function range(min, increment) {\r\n        var offset = isUndefined(increment) ? 1 : increment;\r\n        \r\n        return function (max) {\r\n            return j.recur(buildRange)(min, []);\r\n\r\n            function buildRange(recur, value, output) {\r\n                return value > max ? output : recur(value + offset, j.conj(value, output));\r\n            }\r\n        };\r\n    }\r\n\r\n    function max (a, b){\r\n        return a > b ? a : b;\r\n    }\r\n    \r\n    function min (a, b){\r\n        return a < b ? a : b;\r\n    }\r\n\r\n    function equal(a, b) {\r\n        return a === b;\r\n    }\r\n\r\n    function between (min, max){\r\n        if(min >= max) {\r\n            throw new Error('Invalid range, ' + min + ' is not less than ' + max);\r\n        }\r\n        \r\n        return function (value) {\r\n            return min <= value && value <= max;\r\n        };\r\n    }\r\n\r\n    // Arithmetic\r\n    j.add = j.enforce('number, number => number', operation('+'));\r\n    j.divide = j.enforce('number, number => number', operation('/'));\r\n    j.mod = j.enforce('number, number => number', operation('%'));\r\n    j.multiply = j.enforce('number, number => number', operation('*'));\r\n    j.subtract = j.enforce('number, number => number', operation('-'));\r\n\r\n    j.addBy = j.enforce('[number], [number] => taggedUnion<function;number>', operationCurry(j.add));\r\n    j.divideBy = j.enforce('[number], [number] => taggedUnion<function;number>', operationCurry(j.reverseArgs(j.divide)));\r\n    j.modBy = j.enforce('[number], [number] => taggedUnion<function;number>', operationCurry(j.reverseArgs(j.mod)));\r\n    j.multiplyBy = j.enforce('[number], [number] => taggedUnion<function;number>', operationCurry(j.multiply));\r\n    j.subtractBy = j.enforce('[number], [number] => taggedUnion<function;number>', operationCurry(j.reverseArgs(j.subtract)));\r\n\r\n    j.min = j.enforce('[number], [number] => taggedUnion<function;number>', operationCurry(min));\r\n    j.max = j.enforce('[number], [number] => taggedUnion<function;number>', operationCurry(max));\r\n\r\n    j.inc = j.enforce('[int] => int', operationCurry(j.add)(1));\r\n    j.dec = j.enforce('[int] => int', operationCurry(j.add)(-1));\r\n\r\n    j.range = j.enforce('int, [int] => int => array<int>', range);\r\n    \r\n    j.gt = j.enforce('number => number => boolean', compare('>'));\r\n    j.geq = j.enforce('number => number => boolean', compare('>='));\r\n    j.lt = j.enforce('number => number => boolean', compare('<'));\r\n    j.leq = j.enforce('number => number => boolean', compare('<='));\r\n    j.between = j.enforce('number, number => number => boolean', between);\r\n\r\n})(jfp);\r\n\r\n(function (j) {\r\n    'use strict';\r\n\r\n    var maybeDefined = j.maybe('defined');\r\n\r\n    function pick(key) {\r\n        return function (obj) {\r\n            return maybeDefined(obj[key]);\r\n        };\r\n    }\r\n\r\n    function deref(key) {\r\n        var keyTokens = key.split('.');\r\n\r\n        return function (obj) {\r\n            return j.recur(derefStep)(obj, keyTokens);\r\n\r\n            function derefStep(recur, obj, keyTokens) {\r\n                var key = j.first(keyTokens);\r\n\r\n                return j.isNil(keyTokens) ? obj : recur(pick(key)(obj), j.rest(keyTokens));\r\n            }\r\n        };\r\n    }\r\n\r\n    function setValue(obj) {\r\n        return function (result, key) {\r\n            result[key] = obj[key];\r\n            return result;\r\n        };\r\n    }\r\n\r\n    function merge(objA, objB) {\r\n        var newObj = j.foldl(setValue(objA), {})(Object.keys(objA));\r\n        return j.foldl(setValue(objB), newObj)(Object.keys(objB));\r\n    }\r\n\r\n    function toArray(obj) {\r\n        return j.recur(convertKeys)([], Object.keys(obj));\r\n\r\n        function convertKeys(recur, result, keys) {\r\n            var key = j.first(keys);\r\n            return j.isNil(keys) ? result : recur(j.conj([key, obj[key]], result), j.rest(keys));\r\n        }\r\n    }\r\n\r\n    var second = j.nth(1);\r\n\r\n    function addRecord(obj, record) {\r\n        obj[j.first(record)] = second(record);\r\n\r\n        return obj;\r\n    }\r\n\r\n    function toObject(tupleArray) {\r\n        return j.recur(convertTuples)({}, tupleArray);\r\n\r\n        function convertTuples(recur, result, objTuples) {\r\n            var next = j.rcurry(recur, 2)(j.rest(objTuples));\r\n            var updateObj = j.compose(j.curry(addRecord)(result), j.first);\r\n            \r\n            return j.cond(function (when, then, _default) {\r\n                when(j.isNil(objTuples), then(result));\r\n                when(_default, then(j.compose(next, updateObj), objTuples));\r\n            });\r\n        }\r\n    }\r\n\r\n    j.pick = j.enforce('string => object => maybe<defined>', pick);\r\n    j.deref = j.enforce('string => object => maybe<defined>', deref);\r\n    j.merge = j.enforce('object, object => object', merge);\r\n    j.toArray = j.enforce('object => array<tuple<objectKey;*>>', toArray);\r\n    j.toObject = j.enforce('array<tuple<objectKey;*>> => object', toObject);\r\n\r\n})(jfp);\r\n\r\n(function (j) {\r\n    'use strict';\r\n    \r\n    var isFunction = j.isTypeOf('function');\r\n    \r\n    function then (fn){\r\n        var index = isFunction(fn) ? 1 : 0;\r\n        var action = index === 1 ? fn : j.identity;\r\n        \r\n        return [action, j.slice(index)(arguments)];\r\n    }\r\n    \r\n    function when (condArray){\r\n        return function (prop, behavior) {\r\n            condArray.push([prop, behavior]);\r\n        };\r\n    }\r\n    \r\n    var isResult = j.compose(Boolean, j.first);\r\n    \r\n    function throwOnNil (result, condFn){\r\n        if(j.isNil(result)) {\r\n            throw new Error('All possible conditions were not represented in ' + condFn.toString());\r\n        }\r\n    }\r\n\r\n    function callBehavior (behavior){\r\n        var fn = behavior[0];\r\n        var args = behavior[1];\r\n        \r\n        return j.apply(fn, args);\r\n    }\r\n    \r\n    function cond (condFn){\r\n        var condArray = [];\r\n        \r\n        condFn(when(condArray), then, true);\r\n                \r\n        var result = j.find(isResult)(condArray);\r\n        var behavior = result[1];\r\n        \r\n        throwOnNil(result, condFn);\r\n        \r\n        return callBehavior(behavior);\r\n    }\r\n    \r\n    j.cond = j.enforce('function<function;function;function> => *', cond);\r\n    \r\n})(jfp);\r\n\r\nvar j = jfp;\r\n\r\nif(typeof module !== 'undefined' && Boolean(module.exports)){\r\n    // Node and CommonJS export\r\n    module.exports = j;\r\n} else if (typeof define === 'function' && Boolean(define.amd)) {\r\n    // AMD and Require.js module definition\r\n    define([], function () {\r\n        return jfp;\r\n    });\r\n}\r\n\r\n\r\n"]}