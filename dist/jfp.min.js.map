{"version":3,"file":"jfp.min.js","sources":["jfp.js"],"names":["jfp","resolveFunction","functionValue","curryAlias","args","slice","arguments","apply","curry","pickAlias","key","value","cleanKey","Boolean","pick","partial","chooseResolver","resolveToPick","charAt","resolver","j","isBoolean","isFunction","testFn","isObject","isArray","Object","prototype","toString","call","isString","isEmptyString","isNull","isNumber","isNumeric","pattern","match","isTruthy","isUndefined","undefined","not","identity","begin","valueSet","end","values","Array","shortCircuit","defaultValue","userFn","testValue","maybe","type","typeOkay","either","when","checkValue","eitherIf","predicateValue","safePredicate","eitherWhen","sanitizedFn","concat","original","extension","result","sanitizedExtension","i","length","push","basePartial","direction","appliedFunction","applicationArgs","reverseArgs","reverse","countArguments","execute","rpartial","toDec","parseInt","copyArray","makeValueArray","conj","dest","cons","source","first","lastIndex","last","drop","index","finalIndex","sanitizedIndex","firstArray","secondArray","dropLast","nth","rest","take","count","naturalComparator","a","b","comparison","sort","optionValue","comparator","finalSet","each","userArray","sanitizedArray","dropFirst","init","valueMap","pickResult","merge","defaultObj","mergeData","finalObj","argumentCount","appliedFn","recursor","recurFn","recursorFn","localRecursor","verifyRecurValue","recurValue","recur","recursingFn","reducer","reduction","collection","reduce","initialState","appliedReducer","hasInitialState","initialValue","remainder","compositor","f","g","$f","$g","compositeFn","compose","pipeline","partialReverse","mapper","finalArray","map","mapperFn","filterer","userPredicate","filter","predicate","filterFn","compact","valueList","predicateAccumulator","total","sanitizedTotal","numberOf","accumulator","captureUnique","finalList","unique","union","set1","set2","addToHash","finalObject","buildValueHash","captureIntersection","valueHash","intersect","setHash","captureDifference","difference","symmetricDifference","setUnion","setIntersection","everyReducer","every","finder","done","find","someRecur","some","contains","equal","partitioner","partitions","partition","list","sanitizedPredicate","multiPartitioner","partitionPredicate","computedPartitions","multiPartition","predicateArgs","sanitizedArgs","sanitizedList","ander","orer","reduceConditions","conditionArgs","operator","initialCondition","and","or","xor","equivalent","keyReduction","baseObj","toValues","keys","dereferencer","dataObject","token","trim","internalDeref","baseData","sanitizedDefault","keyTokens","split","deref","sanitizedKey","sanitizedData","plucker","pluckKeys","sanitizedObject","pluck","adder","current","add","divider","divide","multiplier","multiply","subtractor","subtract","rangeRecurCheck","m","n","inc","rangeBuilder","currentRange","finalRange","range","start","increment","mod","modulo","_a","_b","Math","floor","abs","truncate","max","maxValue","Number","MAX_VALUE","min","minValue","fac","factorial","greater","throwWhenNotComparable","TypeError","isNotUndefined","less","isEven","isPositive","isZero","isNegative","isInt","isNonNegative","isNonPositive","isNonZero","isOdd","geq","leq","module","exports"],"mappings":";;AAAA,GAAIA,KAAM,WACN,YAEA,SAASC,iBAAgBC,eACrB,aAAcA,iBAAkB,SAAWF,IAAIE,eAAiBA,cAGpE,QAASC,cACL,GAAIC,MAAOJ,IAAIK,MAAM,EAAGC,UAExBF,MAAK,GAAKH,gBAAgBG,KAAK,GAE/B,OAAOJ,KAAIO,MAAMP,IAAIQ,MAAOJ,MAGhC,QAASK,WAAUC,IAAKC,OACpB,GAAIC,UAAWF,IAAIL,MAAM,EAEzB,OAAOQ,SAAQF,OAASX,IAAIc,KAAKF,SAAUD,OAASX,IAAIe,QAAQf,IAAIc,KAAMF,UAG9E,QAASI,gBAAeL,OACpB,GAAIM,qBAAuBN,SAAU,UAAYA,MAAMO,OAAO,KAAO,GAErE,OAAOD,eAAgBR,UAAYN,WAGvC,MAAO,YACH,GAAIC,MAAOJ,IAAIK,MAAM,EAAGC,WACpBa,SAAWH,eAAeZ,KAAK,GAEnC,OAAOJ,KAAIO,MAAMY,SAAUf,WAKnC,SAAUgB,GACN,YAEA,SAASC,WAAUV,OACf,aAAcA,SAAU,UAG5B,QAASW,YAAWC,QAChB,aAAcA,UAAW,WAG7B,QAASC,UAASb,OACd,aAAeA,QAAS,SAG5B,QAASc,SAAQd,OACb,MAAQa,UAASb,QAAUe,OAAOC,UAAUC,SAASC,KAAKlB,SAAW,iBAGzE,QAASmB,UAASnB,OACd,aAAcA,SAAU,SAG5B,QAASoB,eAAcpB,OACnB,MAAOmB,UAASnB,QAAUA,QAAU,GAGxC,QAASqB,QAAOrB,OACZ,MAAOA,SAAU,KAGrB,QAASsB,UAAStB,OACd,aAAcA,SAAU,SAG5B,QAASuB,WAAUvB,OACf,GAAIwB,SAAU,yCACd,OAAOF,UAAStB,QAAWmB,SAASnB,UAAYA,MAAMyB,MAAMD,SAGhE,QAASE,UAAS1B,OACd,QAASA,MAGb,QAAS2B,aAAY3B,OACjB,MAAOA,SAAU4B,UAGrB,QAASC,KAAI7B,OACT,OAAQA,MAGZS,EAAEK,QAAUA,OACZL,GAAEC,UAAYA,SACdD,GAAEW,cAAgBA,aAClBX,GAAEE,WAAaA,UACfF,GAAEY,OAASA,MACXZ,GAAEa,SAAWA,QACbb,GAAEc,UAAYA,SACdd,GAAEI,SAAWA,QACbJ,GAAEU,SAAWA,QACbV,GAAEiB,SAAWA,QACbjB,GAAEkB,YAAcA,WAChBlB,GAAEoB,IAAMA,MAETxC,MAGH,SAAUoB,GACN,YAEA,SAASqB,UAAS9B,OACd,MAAOA,OAGX,QAASN,OAAMqC,MAAOC,SAAUC,KAC5B,GAAIC,QAASzB,EAAEoB,IAAIpB,EAAEiB,SAASM,cAAkBA,QAEhD,OAAOvB,GAAEoB,IAAIpB,EAAEiB,SAASO,MACZE,MAAMnB,UAAUtB,MAAMwB,KAAKgB,OAAQH,OACnCI,MAAMnB,UAAUtB,MAAMwB,KAAKgB,OAAQH,MAAOE,KAG1D,QAASG,cAAaC,aAAcC,OAAQC,WACxC,MAAQ9B,GAAEiB,SAASa,YAAcA,YAAc,EAC3CD,OAAOC,WACPF,aAGR,QAASG,OAAMxC,OACX,GAAIyC,MAAO9C,UAAU,GACjB+C,eAAkB1C,SAAUyC,IAEhC,OAAOC,YAAcD,QAAUzC,MAASA,MAAQ,KAGpD,QAAS2C,QAAON,aAAcE,WAC1B,GAAIE,MAAO9C,UAAU,EACrB,OAAO6C,OAAMD,UAAWE,QAAU,KAAOJ,aAAeE,UAG5D,QAAS3C,OAAM0C,OAAQ7C,MACnB,MAAO6C,QAAO1C,MAAM,KAAMH,MAG9B,QAASmD,MAAKC,WAAYP,QACtB,GAAI7C,MAAOC,MAAM,EAAGC,UACpB,OAAOc,GAAEiB,SAASmB,YAAcjD,MAAM0C,OAAQ7C,MAAQ,KAG1D,QAASqD,UAAST,aAAcE,UAAWQ,gBACvC,GAAIC,eAAgBvC,EAAEkB,YAAYoB,gBAAkB,KAAOA,cAE3D,OAAOtC,GAAEkC,OAAON,aAAc5B,EAAEmC,KAAKI,cAAevC,EAAEL,QAAQK,EAAEqB,SAAUS,aAG9E,QAASU,YAAWZ,aAAcU,eAAgBT,QAC9C,GAAIY,aAAcJ,SAASrC,EAAEqB,SAAUQ,OAAQ7B,EAAEE,WAAW2B,QAE5D,OAAO7B,GAAEkC,OAAON,aAAc5B,EAAEmC,KAAKG,eAAgBG,cAGzD,QAASC,QAAOC,SAAUC,WACtB,GAAIC,QAAS5D,MAAM,EAAGiD,UAAWS,WAC7BG,mBAAqBZ,UAAWU,WAChCG,CAGJ,KAAIA,EAAI,EAAGA,EAAID,mBAAmBE,OAAQD,IAAI,CAC1CF,OAAOI,KAAKH,mBAAmBC,IAGnC,MAAOF,QAGX,QAASK,aAAYC,UAAWtB,QAC5B,GAAI7C,MAAOC,MAAM,EAAGC,UAEpB,OAAO,SAASkE,mBACZ,GAAIC,iBAAmBF,YAAc,OACbT,OAAO1D,KAAMC,MAAM,EAAGC,YACtBwD,OAAOzD,MAAM,EAAGC,WAAYF,KAEpD,OAAOG,OAAM0C,OAAQwB,kBAI7B,QAASC,aAAYzB,QACjB,MAAO,YACH,GAAI7C,MAAOgB,EAAEf,MAAM,EAAGC,WAAWqE,SACjC,OAAOvD,GAAEb,MAAM0C,OAAQ7C,OAI/B,QAASwE,gBAAe3B,QACpB,MAAOK,QAAO,aAAcL,QAAQmB,OAGxC,QAASS,SAAQ5B,QACb,MAAO7B,GAAEb,MAAM0C,OAAQ7B,EAAEf,MAAM,EAAGC,YAGtCc,EAAEb,MAAQA,KACVa,GAAE0C,OAASA,MACX1C,GAAEwD,eAAiBA,cACnBxD,GAAEkC,OAASA,MACXlC,GAAEqC,SAAWA,QACbrC,GAAEwC,WAAaA,UACfxC,GAAEyD,QAAUA,OACZzD,GAAEqB,SAAWA,QACbrB,GAAE+B,MAAQA,KACV/B,GAAEL,QAAUuD,YAAY,OAAQA,YAAa,OAC7ClD,GAAEsD,YAAcA,WAChBtD,GAAE0D,SAAWR,YAAY,OAAQA,YAAa,QAC9ClD,GAAE2B,aAAeA,YACjB3B,GAAEf,MAAQA,KACVe,GAAEmC,KAAOA,OAEVvD,MAGH,SAAUoB,GACN,YAEA,SAAS2D,OAAMpE,OACX,MAAQS,GAAEc,UAAUvB,OAAUqE,SAASrE,MAAO,IAAM,KAGxDS,EAAE2D,MAAQA,QAEX/E,MAEH,SAAUoB,GACN,YAEA,SAAS6D,WAAUtC,UACf,MAAOvB,GAAEf,MAAM,EAAGsC,UAGtB,QAASuC,gBAAevE,OACpB,MAAOS,GAAEoB,IAAIpB,EAAEkB,YAAY3B,SAAWA,UAG1C,QAASwE,MAAKxE,MAAOyE,MACjB,MAAOhE,GAAE0C,OAAOmB,UAAUG,MAAOF,eAAevE,QAGpD,QAAS0E,MAAK1E,MAAO2E,QACjB,MAAOlE,GAAE0C,OAAOoB,eAAevE,OAAQ2E,QAG3C,QAASC,OAAM1C,QACX,MAAOzB,GAAEK,QAAQoB,QAAUzB,EAAEkC,OAAO,KAAMT,OAAO,IAAM,KAG3D,QAAS2C,WAAU3C,QACf,MAAOzB,GAAEK,QAAQoB,QAAUA,OAAOuB,OAAS,EAAI,KAGnD,QAASqB,MAAK5C,QACV,MAAOzB,GAAEK,QAAQoB,QAAUA,OAAO2C,UAAU3C,SAAW,KAG3D,QAAS6C,MAAKC,MAAOhD,UACjB,GAAIiD,YAAaJ,UAAU7C,UAEvBkD,eAAkBF,QAAU,GAAKA,QAAUC,WACvCD,MAAQvE,EAAEkC,OAAO,EAAGqC,OAAS,EAEjCG,WAAcD,iBAAmB,KACxBzE,EAAEf,MAAM,EAAGsC,SAAUkD,gBAE9BE,YAAeF,iBAAmBD,cACzBxE,EAAEf,MAAMwF,eAAiB,EAAGlD,SAEzC,OAAOvB,GAAE0C,OAAOgC,WAAYC,aAGhC,QAASC,UAASrD,UACd,MAAO+C,MAAKF,UAAU7C,UAAWA,UAGrC,QAASsD,KAAIN,MAAOhD,UAChB,MAAOvB,GAAEkC,OAAO,KAAMlC,EAAEkC,UAAWX,UAAUgD,QAGjD,QAASO,MAAKrD,QACV,MAAOzB,GAAEf,MAAM,EAAGwC,QAGtB,QAASsD,MAAKC,MAAOvD,QACjB,MAAOzB,GAAEK,QAAQoB,QAAUzB,EAAEf,MAAM,EAAGwC,OAAQuD,OAAS,KAG3D,QAASC,mBAAkBC,EAAGC,GAC1B,GAAIC,YAAaF,EAAIC,GAAK,EAAI,CAC9B,OAAOD,KAAMC,EAAI,EAAIC,WAGzB,QAASC,MAAKC,YAAa/D,UACvB,GAAIgE,YAAavF,EAAEE,WAAWoF,aAAeA,YAAcL,kBACvDO,SAAWxF,EAAEK,QAAQiF,aAAetF,EAAEf,MAAM,EAAGqG,aAAetF,EAAEf,MAAM,EAAGsC,SAE7E,OAAOiE,UAASH,KAAKE,YAGzB,QAASE,MAAK5D,OAAQ6D,WAClB,GAAIC,gBAAiB3F,EAAEkC,UAAWwD,WAC9BjD,YAAczC,EAAEkC,OAAOlC,EAAEqB,SAAUQ,QACnCkB,CAEJ,KAAIA,EAAI,EAAGA,EAAI4C,eAAe3C,OAAQD,IAAI,CACtC,GAAGN,YAAYkD,eAAe5C,GAAIA,KAAO,MAAM,CAC3C,OAIR,MAAO4C,gBAGX3F,EAAE+D,KAAOA,IACT/D,GAAEiE,KAAOA,IACTjE,GAAE6D,UAAYA,SACd7D,GAAEsE,KAAOA,IACTtE,GAAE4F,UAAY5F,EAAEL,QAAQ2E,KAAM,EAC9BtE,GAAE4E,SAAWA,QACb5E,GAAEyF,KAAOA,IACTzF,GAAEmE,MAAQA,KACVnE,GAAE6F,KAAO7F,EAAE4E,QACX5E,GAAEqE,KAAOA,IACTrE,GAAEoE,UAAYA,SACdpE,GAAE6E,IAAMA,GACR7E,GAAE8E,KAAOA,IACT9E,GAAEqF,KAAOA,IACTrF,GAAE+E,KAAOA,OAEVnG,MAGH,SAAUoB,GACN,YAEA,SAASN,MAAKJ,IAAKwG,UACf,GAAIC,YAAa/F,EAAEkC,UAAW4D,UAAUxG,IACxC,OAAOU,GAAEkB,YAAY6E,YAAc,KAAOA,WAG9C,QAASC,OAAMC,WAAYC,WACvB,GAAIC,aACA7G,GAEJ,KAAIA,MAAOU,GAAEkC,UAAW+D,YAAY,CAChCE,SAAS7G,KAAO2G,WAAW3G,KAG/B,IAAIA,MAAOU,GAAEkC,UAAWgE,WAAW,CAC/BC,SAAS7G,KAAO4G,UAAU5G,KAG9B,MAAOU,GAAEqC,SAAS,KAAM8D,SAAUnG,EAAEiB,SAASgF,aAGjDjG,EAAEgG,MAAQA,KACVhG,GAAEN,KAAOA,OAEVd,MAGH,SAAUoB,GACN,YAGA,SAASZ,OAAMyC,QACX,GAAI7C,MAAOgB,EAAEf,MAAM,EAAGC,WAClBkH,cAAgBpG,EAAEwD,eAAe3B,QACjCwE,UAAarH,KAAKgE,OAASoD,cAAiBpG,EAAEb,MAAMa,EAAEL,QAASK,EAAE0C,QAAQtD,MAAOyC,QAAS7C,OAAS,KAClG6D,SAAYhB,QAAU7C,KAAKgE,QAAUoD,cAAiBpG,EAAEb,MAAM0C,OAAQ7C,MAAQ,IAElF,OAAOgB,GAAEkC,OAAOmE,UAAWxD,QAI/B,QAASyD,UAASC,SACd,GAAIvH,MAAOgB,EAAEf,MAAM,EAAGC,UAGtB,OAAO,SAASsH,YAAWC,eACvB,MAAOzG,GAAEb,MAAMoH,QAASvG,EAAE0C,QAAQ+D,eAAgBzH,QAI1D,QAAS0H,kBAAiBC,YACtB,aAAcA,cAAe,YACzBA,WAAWnG,WAAWQ,MAAM,cAKpC,QAAS4F,OAAM/E,QACX,GAAIgF,aAAc7G,EAAEkC,OAAOlC,EAAEqB,SAAUQ,OAAQ,YAC3C4E,cAAgBzG,EAAEL,QAAQ2G,SAAUO,aACpCF,WAAa3G,EAAEb,MAAMsH,cAAezG,EAAEf,MAAM,EAAGC,WAEnD,OAAMwH,iBAAiBC,WAAaA,WAAWF,iBAAmBI,cAAgB7G,EAAEqB,UAEpF,MAAOsF,YAQX,QAASG,SAAQjF,OAAQ+E,MAAOG,UAAWC,YACvC,MAAOA,YAAWhE,SAAW,EACjB+D,UACAH,MAAM/E,OAAOkF,UAAW/G,EAAEmE,MAAM6C,aAC1BhH,EAAE8E,KAAKkC,aAG7B,QAASC,QAAOpF,OAAQJ,OAAQyF,cAC5B,GAAIC,gBAAiBnH,EAAEL,QAAQmH,QAASjF,QACpCuF,sBAAyBF,gBAAiB,YAE1CG,cAAgBD,gBAAkBpH,EAAEmE,MAAM1C,QAAUyF,aACpDI,WAAaF,gBAAkBpH,EAAE8E,KAAKrD,QAAUA,MAEpD,SAAUA,QAAUA,OAAOuB,OAAS,EAAKhD,EAAE4G,MAAMO,eAAgBE,aAAcC,WAAaD,aAIhG,QAASE,YAAWC,EAAGC,GACnB,GAAIC,UAAYF,KAAM,WAAaxH,EAAEqB,SAAWmG,EAC5CG,SAAYF,KAAM,WAAazH,EAAEqB,SAAWoG,CAEhD,SAASG,eACL,MAAOF,IAAG1H,EAAEb,MAAMwI,GAAI3H,EAAEf,MAAM,EAAGC,aAGrC,MAAO0I,aAGX,QAASC,WACL,MAAOZ,QAAOM,WAAYvH,EAAEf,MAAM,EAAGC,WAAYc,EAAEqB,UAGvD,QAASyG,UAASvI,OACd,MAAOS,GAAEb,MAAM0I,QAAS7H,EAAEf,MAAM,EAAGC,WAAWqE,WAAWhE,OAG7D,QAASwI,kBACL,MAAO/H,GAAEb,MAAMa,EAAE6H,QAAQ7H,EAAEsD,YAAatD,EAAEL,SAC3BK,EAAEf,MAAM,EAAGC,YAG9Bc,EAAE6H,QAAUA,OACZ7H,GAAEZ,MAAQA,KACVY,GAAE+H,eAAiBA,cACnB/H,GAAE8H,SAAWA,QACb9H,GAAE4G,MAAQA,KACV5G,GAAEiH,OAASA,SAEZrI,MAGH,SAAUoB,GAMN,QAASgI,QAAOnG,OAAQoG,WAAY1I,OAChC0I,WAAWhF,KAAKpB,OAAOtC,OACvB,OAAO0I,YAGX,QAASC,KAAKrG,OAAQJ,QAClB,GAAI0G,UAAWnI,EAAEL,QAAQqI,OAAQnG,OACjC,OAAO7B,GAAEiH,OAAOkB,SAAU1G,WAO9B,QAAS2G,UAASC,cAAeJ,WAAY1I,OACzC,MAAO8I,eAAc9I,OAASS,EAAE+D,KAAKxE,MAAO0I,YAAcA,WAG9D,QAASK,QAAQC,UAAW9G,QACxB,GAAI+G,UAAWxI,EAAEL,QAAQyI,SAAUG,UACnC,OAAOvI,GAAEiH,OAAOuB,SAAU/G,WAG9B,QAASgH,SAAQC,WACb,MAAOJ,QAAOtI,EAAEiB,SAAUyH,WAG9B,QAASC,sBAAqBJ,UAAWK,MAAOrJ,OAC5C,GAAIsJ,gBAAiB7I,EAAEkC,OAAO,EAAG0G,MAAO,SACxC,OAAOL,WAAUhJ,OAASsJ,eAAiB,EAAIA,eAGnD,QAASC,UAASP,UAAWhH,UACzB,GAAIwH,aAAc/I,EAAEL,QAAQgJ,qBAAsBJ,UAClD,OAAOvI,GAAEiH,OAAO8B,YAAa/I,EAAEkC,UAAWX,UAAW,GAGzD,QAASyH,eAAcC,UAAW1J,OAC9B,MAAOS,GAAEqE,KAAK4E,aAAe1J,MAAQ0J,UAAYjJ,EAAE+D,KAAKxE,MAAO0J,WAGnE,QAASC,QAAO3H,UACZ,MAAOvB,GAAEiH,OAAO+B,cAAehJ,EAAEqF,KAAKrF,EAAEf,MAAM,EAAGsC,eAGrD,QAAS4H,OAAMC,KAAMC,MACjB,MAAOrJ,GAAE6H,QAAQ7H,EAAEkJ,OAAQlJ,EAAE0C,QAAQ0G,KAAMC,MAG/C,QAASC,WAAUC,YAAahK,OAC5BgK,YAAYhK,OAAS,IACrB,OAAOgK,aAGX,QAASC,gBAAed,WACpB,MAAO1I,GAAEkC,UAAWlC,EAAEiH,OAAOqC,UAAWZ,eAG5C,QAASe,qBAAoBC,UAAWT,UAAW1J,OAC/C,MAAOmK,WAAUnK,OAASS,EAAE+D,KAAKxE,MAAO0J,WAAaA,UAGzD,QAASU,WAAUP,KAAMC,MACrB,GAAIO,SAAUJ,eAAexJ,EAAEkC,UAAWmH,MAC1C,OAAOrJ,GAAEiH,OAAOjH,EAAEL,QAAQ8J,oBAAqBG,SAAUR,SAG7D,QAASS,mBAAkBH,UAAWT,UAAW1J,OAC7C,OAAQmK,UAAUnK,OAASS,EAAE+D,KAAKxE,MAAO0J,WAAaA,UAG1D,QAASa,YAAWV,KAAMC,MACtB,GAAIO,SAAUJ,eAAexJ,EAAEkC,UAAWmH,MAC1C,OAAOrJ,GAAEiH,OAAOjH,EAAEL,QAAQkK,kBAAmBD,SAAUR,SAG3D,QAASW,qBAAoBX,KAAMC,MAC/B,GAAIW,UAAWb,MAAMC,KAAMC,MACvBY,gBAAkBN,UAAUP,KAAMC,KAEtC,OAAOS,YAAWE,SAAUC,iBAGhC,QAASC,cAAc3B,UAAW1F,OAAQ6F,WACtC,MAAO7F,SAAU0F,UAAUG,WAG/B,QAASyB,OAAO5B,UAAWG,WACvB,GAAI5B,SAAU9G,EAAEL,QAAQuK,aAAc3B,UACtC,OAAO9I,SAAQO,EAAEiH,OAAOH,QAAS4B,UAAW,OAGhD,QAAS0B,QAAQxD,MAAO2B,UAAWG,WAC/B,GAAI2B,OAAQ5K,QAAQiJ,YAAcA,UAAU1F,SAAW,EACnDH,OAASwH,KAAO,KAAOrK,EAAEmE,MAAMuE,UAEnC,OAAO2B,OAAQ9B,UAAU1F,QAAUA,OAAS+D,MAAM2B,UAAWvI,EAAE8E,KAAK4D,YAGxE,QAAS4B,MAAM/B,UAAWG,WACtB,MAAO1I,GAAE4G,MAAMwD,OAAQ7B,UAAWG,WAGtC,QAAS6B,WAAU3D,MAAO2B,UAAWG,WACjC,GAAI2B,MAAO3B,UAAU1F,SAAW,EAC5BH,OAASwH,KAAO,MAAQ9B,UAAUvI,EAAEmE,MAAMuE,WAE9C,OAAO7F,SAAUwH,KAAOxH,OAAS+D,MAAM2B,UAAWvI,EAAE8E,KAAK4D,YAG7D,QAAS8B,MAAKjC,UAAWG,WACrB,MAAOjJ,SAAQO,EAAE4G,MAAM2D,UAAWhC,UAAWG,YAGjD,QAAS+B,UAASlL,MAAOmJ,WACrB,MAAO8B,MAAKxK,EAAEL,QAAQK,EAAE0K,MAAOnL,OAAQmJ,WAG3C,QAASiC,aAAYpC,UAAWqC,WAAYrL,OACxC,GAAIgF,OAAQgE,UAAUhJ,OAAS,EAAI,CAEnCqL,YAAWrG,OAAOtB,KAAK1D,MAEvB,OAAOqL,YAGX,QAASC,WAAUtC,UAAWuC,MAC1B,GAAIC,oBAAqB/K,EAAEkC,OAAOlC,EAAEqB,SAAUkH,UAAW,WAEzD,OAAOvI,GAAEiH,OAAOjH,EAAEL,QAAQgL,YAAaI,oBACvB/K,EAAEkC,UAAW4I,eAIjC,QAASE,kBAAiBzC,UAAWqC,WAAYrL,OAC7C,GAAI0L,oBAAqBjL,EAAE0D,SAAS6E,UAAWhJ,OAC3C2L,mBAAqBlL,EAAE4E,SAASgG,WAEpC,OAAO5K,GAAE0C,OAAOwI,mBAAoBL,UAAUI,mBAAoBjL,EAAEqE,KAAKuG,cAG7E,QAASO,gBAAe5C,UAAW6C,cAAeN,MAC9C,GAAIO,eAAgBrL,EAAEkC,UAAWkJ,eAC7BL,mBAAqB/K,EAAEkC,OAAOlC,EAAEqB,SAAUkH,WAC1C+C,cAAgBtL,EAAEkC,UAAW4I,KAEjC,QAAQrL,QAAQqL,cAER9K,EAAEiH,OAAOjH,EAAEL,QAAQqL,iBAAkBD,oBAC5BM,eACCC,gBAGtBtL,EAAEyK,SAAWA,QACbzK,GAAEyI,QAAUA,OACZzI,GAAE8J,WAAaA,UACf9J,GAAEmK,MAAQA,KACbnK,GAAEsI,OAASA,MACRtI,GAAEsK,KAAOA,IACTtK,GAAE2J,UAAYA,SACjB3J,GAAEkI,IAAMA,GACRlI,GAAEmL,eAAiBA,cACnBnL,GAAE8I,SAAWA,QACV9I,GAAE6K,UAAYA,SACd7K,GAAEwK,KAAOA,IACTxK,GAAE+J,oBAAsBA,mBACxB/J,GAAEmJ,MAAQA,KACVnJ,GAAEkJ,OAASA,SAEZtK,MAEH,SAAWoB,GACV,YAGG,SAASuL,OAAMrG,EAAGC,GACd,MAAOD,IAAKC,EAGhB,QAASqG,MAAKtG,EAAGC,GACb,MAAOD,IAAKC,EAGhB,QAASsG,kBAAiBC,cAAeC,SAAUC,kBAC/C,GAAI5M,MAAOgB,EAAEkI,IAAIzI,QAASO,EAAEf,MAAM,EAAGyM,eACrC,OAAOjM,SAAQO,EAAEiH,OAAO0E,SAAU3M,KAAM4M,mBAG5C,QAASC,KAAI3G,EAAGC,GACZ,MAAOsG,kBAAiBvM,UAAWqM,MAAO,MAG9C,QAASO,IAAG5G,EAAGC,GACX,MAAOsG,kBAAiBvM,UAAWsM,KAAM,OAG7C,QAASO,KAAI7G,EAAGC,GACZ,GAAI6G,YAAavM,QAAQyF,KAAOzF,QAAQ0F,EACxC,OAAO2G,IAAG5G,EAAGC,IAAMnF,EAAEoB,IAAI4K,YAGhChM,EAAE6L,IAAMA,GACR7L,GAAE8L,GAAKA,EACP9L,GAAE+L,IAAMA,MAENnN,MAEH,SAAWoB,GACV,YAOA,SAASiM,cAAcC,QAASjD,UAAW3J,KAC1C,MAAOU,GAAE+D,KAAKmI,QAAQ5M,KAAM2J,WAG7B,QAASkD,UAAUD,SAClB,GAAIpF,SAAU9G,EAAEL,QAAQsM,aAAcC,QACtC,OAAOlM,GAAEY,OAAOZ,EAAE+B,MAAMmK,QAAS,WAAa,KAAOlM,EAAEiH,OAAOH,QAASxG,OAAO8L,KAAKF,aAGpF,QAASG,cAAaC,WAAYC,OAC3B,GAAIjN,KAAMU,EAAEkC,OAAO,GAAIqK,OAAOC,MAC9B,OAAOlN,OAAQ,GAAKgN,WAAatM,EAAEN,KAAK6M,MAAOD,YAGnD,QAASG,eAAcnN,IAAKoN,SAAU9K,cAClC,GAAI+K,kBAAmB/K,eAAiBT,UAAY,KAAOS,aACvDgL,UAAYtN,IAAIuN,MAAM,KACtBhK,OAAS7C,EAAEiH,OAAOoF,aAAcO,UAAWF,SAE/C,OAAO1M,GAAEkC,OAAOyK,iBAAkB9J,QAGtC,QAASiK,OAAMxN,IAAKoN,SAAU9K,cAE1B,GAAImL,oBAAsBzN,OAAQ,SAAWA,IAAMoN,SAC/CM,oBAAuBN,YAAa,SAAWA,SAAWpN,GAG9DyN,cAAe/M,EAAEkC,OAAO,GAAI6K,aAAc,SAC1CC,eAAgBhN,EAAEkC,OAAO,KAAM8K,cAAe,SAE9C,OAAOP,eAAczM,EAAEkC,OAAO,GAAI6K,cAAeC,cAAepL,cAGpE,QAASqL,SAASf,QAAS/F,SAAU7G,KACjC6G,SAAS7G,KAAO4M,QAAQ5M,IACxB,OAAO6G,UAGX,QAAS+G,WAAWd,KAAMF,SACtB,GAAIiB,iBAAkBnN,EAAEkC,UAAWgK,QAAS,SAC5C,OAAOlM,GAAEiH,OAAOjH,EAAEL,QAAQsN,QAASE,iBAAkBf,SAGzD,QAASgB,OAAO9N,IAAK4M,SACjB,MAAOgB,YAAW5N,KAAM4M,SAG/BlM,EAAE8M,MAAQA,KACP9M,GAAEoN,MAAQA,KACVpN,GAAEkN,UAAYA,SACdlN,GAAEmM,SAAWA,WAEdvN,MAEH,SAAUoB,GACN,YAGA,SAASqN,OAAMzG,MAAO0G,QAAS/L,UAC3B,MAAQA,UAASyB,SAAW,EACpBsK,QACA1G,MAAM0G,QAAUtN,EAAEmE,MAAM5C,UAAWvB,EAAE8E,KAAKvD,WAGtD,QAASgM,KAAIrI,EAAGC,GACZ,MAAOnF,GAAE4G,MAAMyG,MAAO,EAAGrN,EAAEf,MAAM,EAAGC,YAIxC,QAASsO,SAAQ5G,MAAO0G,QAAS/L,UAC7B,MAAQA,UAASyB,SAAW,EACpBsK,QACA1G,MAAM0G,QAAUtN,EAAEmE,MAAM5C,UAAWvB,EAAE8E,KAAKvD,WAGtD,QAASkM,UACL,GAAIzO,MAAOgB,EAAEf,MAAM,EAAGC,WAClBiF,MAAQnF,KAAKgE,OAAShD,EAAEmE,MAAMnF,MAAQ,CAC1C,OAAOgB,GAAE4G,MAAM4G,QAASrJ,MAAOnE,EAAE8E,KAAK9F,OAI1C,QAAS0O,YAAW9G,MAAO0G,QAAS/L,UAChC,MAAQA,UAASyB,SAAW,EACpBsK,QACA1G,MAAM0G,QAAUtN,EAAEmE,MAAM5C,UAAWvB,EAAE8E,KAAKvD,WAGtD,QAASoM,YACL,MAAO3N,GAAE4G,MAAM8G,WAAY,EAAG1N,EAAEf,MAAM,EAAGC,YAI7C,QAAS0O,YAAWhH,MAAO0G,QAAS/L,UAChC,MAAQA,UAASyB,SAAW,EACpBsK,QACA1G,MAAM0G,QAAUtN,EAAEmE,MAAM5C,UAAWvB,EAAE8E,KAAKvD,WAGtD,QAASsM,YACL,GAAI7O,MAAOgB,EAAEf,MAAM,EAAGC,WAClBiF,MAAQnF,KAAKgE,OAAShD,EAAEmE,MAAMnF,MAAQ,CAC1C,OAAOgB,GAAE4G,MAAMgH,WAAYzJ,MAAOnE,EAAE8E,KAAK9F,OAI7C,QAAS8O,iBAAgBC,EAAGC,EAAGC,KAC3B,MAAOA,KAAM,EAAKF,EAAIE,IAAOD,EAAKD,EAAIE,IAAOD,EAGjD,QAASE,cAAatH,MAAOuH,aAAcJ,EAAGC,EAAGC,KAC7C,GAAIG,YAAaN,gBAAgBC,EAAIE,IAAKD,EAAGC,KACzBjO,EAAE+D,KAAKgK,EAAGI,cACVA,YAEpB,OAAOL,iBAAgBC,EAAGC,EAAGC,KACrBrH,MAAMwH,WAAYL,EAAIE,IAAKD,EAAGC,KAC9BG,WAGZ,QAASC,OAAMnJ,EAAGC,EAAG8I,KACjB,GAAIK,OAAQtO,EAAEkB,YAAYiE,GAAK,EAAID,EAC/B1D,IAAMxB,EAAEkB,YAAYiE,GAAKnF,EAAEkC,OAAO,EAAGgD,GAAKC,EAC1CoJ,WAAcN,IAAO,EAAIA,GAE7B,OAAOjO,GAAE4G,MAAMsH,gBAEAlO,EAAEkC,OAAO,EAAGoM,OACZtO,EAAEkC,OAAO,EAAGV,KACZ+M,WAGnB,QAASC,KAAItJ,EAAGC,GACZ,MAAOnF,GAAEkB,YAAYiE,GAAKnF,EAAEkC,OAAO,EAAGgD,GAAKA,EAAEC,EAGjD,QAASsJ,QAAOvJ,EAAGC,GACf,GAAIuJ,IAAK1O,EAAEkC,OAAO,EAAGgD,GACjByJ,GAAK3O,EAAEkC,OAAO,EAAGiD,EAErB,OAAQuJ,IAAK,EAAKF,IAAIE,GAAIC,IAAMA,IAAMC,KAAKC,MAAMD,KAAKE,IAAIJ,IAAIC,IAAM,GAAKD,GAG7E,QAASK,UAASxP,OACd,MAAQA,OAAQ,EAAKqP,KAAKC,MAAMtP,OAASqP,KAAKC,MAAMtP,OAAS,EAGjE,QAASyP,KAAI9J,EAAGC,GACZ,GAAI8J,WAAYC,OAAOC,UACnBT,GAAK1O,EAAEkB,YAAYgE,GAAK+J,SAAW/J,EACnCyJ,GAAK3O,EAAEkB,YAAYiE,GAAK8J,SAAW9J,CAEvC8J,UAAYP,GAAKO,SAAYP,GAAKO,QAClCA,UAAYN,GAAKM,SAAYN,GAAKM,QAElC,OAAOA,UAGX,QAASG,KAAIlK,EAAGC,GACZ,GAAIkK,UAAWH,OAAOC,UAClBT,GAAK1O,EAAEkB,YAAYgE,GAAKmK,SAAWnK,EACnCyJ,GAAK3O,EAAEkB,YAAYiE,GAAKkK,SAAWlK,CAEvCkK,UAAYX,GAAKW,SAAYX,GAAKW,QAClCA,UAAYV,GAAKU,SAAYV,GAAKU,QAElC,OAAOA,UAGX,QAASC,KAAI/P,OACT,GAAIgQ,WAAYvP,EAAE6H,QAAQ7H,EAAEL,QAAQK,EAAEiH,OAAQ0G,UACpB3N,EAAEL,QAAQ0O,MAAO,GACjBrO,EAAEL,QAAQ4N,IAAK,GAEzC,OAAOvN,GAAEkC,OAAO,EAAGlC,EAAEmC,KAAKnC,EAAEwP,QAAQjQ,MAAO,GAAIgQ,UAAWhQ,QAG9DS,EAAEuN,IAAMA,GACRvN,GAAEyN,OAASA,MACXzN,GAAEsP,IAAMA,GACRtP,GAAEiO,IAAMjO,EAAEL,QAAQK,EAAEuN,IAAK,EACzBvN,GAAEgP,IAAMA,GACRhP,GAAEoP,IAAMA,GACRpP,GAAEwO,IAAMA,GACRxO,GAAEyO,OAASA,MACXzO,GAAE2N,SAAWA,QACb3N,GAAEqO,MAAQA,KACVrO,GAAE6N,SAAWA,QACb7N,GAAE+O,SAAWA,WAEdnQ,MAGH,SAAUoB,GAEN,QAASyP,wBAAuBvK,EAAGC,GAC/BnF,EAAEmC,KAAKnC,EAAEkB,YAAYgE,IAAMlF,EAAEkB,YAAYiE,GAAI,WACzC,KAAM,IAAIuK,WAAU,+CAI5B,QAAShF,OAAMxF,EAAGC,GACd,GAAIwK,gBAAiB3P,EAAE6H,QAAQ7H,EAAEoB,IAAKpB,EAAEkB,YACxC,OAAQyO,gBAAezK,IAAMyK,eAAexK,GAAMD,IAAMC,EAAI,MAGhE,QAASqK,SAAQtK,EAAGC,GAChBsK,uBAAuBvK,EAAGC,EAC1B,OAAOD,GAAIC,EAGf,QAASyK,MAAK1K,EAAGC,GACbsK,uBAAuBvK,EAAGC,EAC1B,OAAOD,GAAIC,EAGf,QAAS0K,QAAOtQ,OACZ,MAAOmL,OAAM,EAAG1K,EAAEwO,IAAIjP,MAAO,IAGjC,QAASuQ,YAAWvQ,OAChB,MAAOiQ,SAAQjQ,MAAO,GAG1B,QAASwQ,QAAOxQ,OACZ,MAAOA,SAAU,EAGrB,QAASyQ,YAAWzQ,OAChB,MAAOS,GAAE6H,QAAQ7H,EAAEoB,IAAKpB,EAAE8L,IAAIgE,WAAWvQ,OAAQwQ,OAAOxQ,QAG5D,QAAS0Q,OAAM1Q,OACX,MAAOmL,OAAM1K,EAAE+O,SAASxP,OAAQA,OAGpCS,EAAE6P,OAASA,MACX7P,GAAEiQ,MAAQA,KACVjQ,GAAEgQ,WAAaA,UACfhQ,GAAEkQ,cAAgBlQ,EAAE6H,QAAQ7H,EAAEoB,IAAK4O,WACnChQ,GAAEmQ,cAAgBnQ,EAAE6H,QAAQ7H,EAAEoB,IAAK0O,WACnC9P,GAAEoQ,UAAYpQ,EAAE6H,QAAQ7H,EAAEoB,IAAK2O,OAC/B/P,GAAEqQ,MAAQrQ,EAAE6H,QAAQ7H,EAAEoB,IAAKyO,OAC3B7P,GAAE8P,WAAaA,UACf9P,GAAE+P,OAASA,MAIX/P,GAAE0K,MAAQA,KACV1K,GAAEsQ,IAAMtQ,EAAE6H,QAAQ7H,EAAEoB,IAAKwO,KACzB5P,GAAEwP,QAAUA,OACZxP,GAAEuQ,IAAMvQ,EAAE6H,QAAQ7H,EAAEoB,IAAKoO,QACzBxP,GAAE4P,KAAOA,OAEVhR,IAEH,IAAIoB,GAAIpB,GAER,UAAU4R,UAAW,eAAiBA,OAAOC,QAAQ,CACjDD,OAAOC,QAAUzQ","sourcesContent":["var jfp = (function(){\n    'use strict';\n    \n    function resolveFunction(functionValue){\n        return typeof functionValue === 'string' ? jfp[functionValue] : functionValue;\n    }\n    \n    function curryAlias(){\n        var args = jfp.slice(0, arguments);\n\n        args[0] = resolveFunction(args[0]);\n        \n        return jfp.apply(jfp.curry, args);\n    }\n    \n    function pickAlias(key, value){\n        var cleanKey = key.slice(1);\n        \n        return Boolean(value) ? jfp.pick(cleanKey, value) : jfp.partial(jfp.pick, cleanKey);\n    }\n    \n    function chooseResolver(value){\n        var resolveToPick = typeof value === 'string' && value.charAt(0) === ':';\n        \n        return resolveToPick ? pickAlias : curryAlias;\n    }\n    \n    return function(){\n        var args = jfp.slice(0, arguments),\n            resolver = chooseResolver(args[0]);\n        \n        return jfp.apply(resolver, args);\n    };\n    \n})();\n\n(function(j){\n    'use strict';\n    \n    function isBoolean(value){\n        return typeof value === 'boolean';\n    }\n\n    function isFunction(testFn){\n        return typeof testFn === 'function';\n    }\n    \n    function isObject(value){\n        return (typeof value == 'object');\n    }\n    \n    function isArray(value){\n        return (isObject(value) && Object.prototype.toString.call(value) === '[object Array]');\n    }\n    \n    function isString(value){\n        return typeof value === 'string';\n    }\n\n    function isEmptyString(value){\n        return isString(value) && value === '';\n    }\n    \n    function isNull(value){\n        return value === null;\n    }\n    \n    function isNumber(value){\n        return typeof value === 'number';\n    }\n    \n    function isNumeric(value){\n        var pattern = /^(0x)?[0-9]+((\\.[0-9]+)|(e\\-?[0-9]+))?$/;\n        return isNumber(value) || (isString(value) && !!value.match(pattern));\n    }\n    \n    function isTruthy(value){\n        return !!value;\n    }\n    \n    function isUndefined(value){\n        return value === undefined;\n    }\n\n    function not(value){\n        return !value;\n    }\n\n    j.isArray = isArray;\n    j.isBoolean = isBoolean;\n    j.isEmptyString = isEmptyString;\n    j.isFunction = isFunction;\n    j.isNull = isNull;\n    j.isNumber = isNumber;\n    j.isNumeric = isNumeric;\n    j.isObject = isObject;\n    j.isString = isString;\n    j.isTruthy = isTruthy;\n    j.isUndefined = isUndefined;\n    j.not = not;\n\n})(jfp);\n\n\n(function(j){\n    'use strict';\n\n    function identity(value){\n        return value;\n    }\n\n    function slice(begin, valueSet, end){\n        var values = j.not(j.isTruthy(valueSet)) ? [] : valueSet;\n\n        return j.not(j.isTruthy(end)) ?\n                    Array.prototype.slice.call(values, begin) :\n                    Array.prototype.slice.call(values, begin, end);\n    }\n\n    function shortCircuit(defaultValue, userFn, testValue){\n        return (j.isTruthy(testValue) || testValue === 0) ?\n            userFn(testValue) :\n            defaultValue;\n    }\n\n    function maybe(value){\n        var type = arguments[1],\n            typeOkay = typeof value === type;\n\n        return typeOkay || (!type && !!value) ? value : null;\n    }\n\n    function either(defaultValue, testValue){\n        var type = arguments[2];\n        return maybe(testValue, type) === null ? defaultValue : testValue;\n    }\n\n    function apply(userFn, args){\n        return userFn.apply(null, args);\n    }\n\n    function when(checkValue, userFn){\n        var args = slice(2, arguments);\n        return j.isTruthy(checkValue) ? apply(userFn, args) : null;\n    }\n\n    function eitherIf(defaultValue, testValue, predicateValue){\n        var safePredicate = j.isUndefined(predicateValue) ? true : predicateValue;\n\n        return j.either(defaultValue, j.when(safePredicate, j.partial(j.identity, testValue)));\n    }\n\n    function eitherWhen(defaultValue, predicateValue, userFn){\n        var sanitizedFn = eitherIf(j.identity, userFn, j.isFunction(userFn));\n\n        return j.either(defaultValue, j.when(predicateValue, sanitizedFn));\n    }\n\n    function concat(original, extension){\n        var result = slice(0, either([], original)),\n            sanitizedExtension = either([], extension),\n            i;\n\n        //This is the most performant way to handle concatenation. Trust me.\n        for(i = 0; i < sanitizedExtension.length; i++){\n            result.push(sanitizedExtension[i]);\n        }\n\n        return result;\n    }\n\n    function basePartial(direction, userFn){\n        var args = slice(2, arguments);\n\n        return function appliedFunction(){\n            var applicationArgs = (direction === 'left') ?\n                                    concat(args, slice(0, arguments)) :\n                                    concat(slice(0, arguments), args);\n\n            return apply(userFn, applicationArgs);\n        };\n    }\n\n    function reverseArgs(userFn){\n        return function(){\n            var args = j.slice(0, arguments).reverse();\n            return j.apply(userFn, args);\n        };\n    }\n\n    function countArguments(userFn){\n        return either(function(){}, userFn).length;\n    }\n\n    function execute(userFn){\n        return j.apply(userFn, j.slice(1, arguments));\n    }\n\n    j.apply = apply;\n    j.concat = concat;\n    j.countArguments = countArguments;\n    j.either = either;\n    j.eitherIf = eitherIf;\n    j.eitherWhen = eitherWhen;\n    j.execute = execute;\n    j.identity = identity;\n    j.maybe = maybe;\n    j.partial = basePartial('left', basePartial, 'left');\n    j.reverseArgs = reverseArgs;\n    j.rpartial = basePartial('left', basePartial, 'right');\n    j.shortCircuit = shortCircuit;\n    j.slice = slice;\n    j.when = when;\n\n})(jfp);\n\n\n(function(j){\n    'use strict';\n\n    function toDec(value){\n        return (j.isNumeric(value)) ? parseInt(value, 10) : null;\n    }\n\n    j.toDec = toDec;\n\n})(jfp);\n\n(function(j){\n    'use strict';\n\n    function copyArray(valueSet){\n        return j.slice(0, valueSet);\n    }\n\n    function makeValueArray(value){\n        return j.not(j.isUndefined(value)) ? [value] : [];\n    }\n\n    function conj(value, dest){\n        return j.concat(copyArray(dest), makeValueArray(value));\n    }\n\n    function cons(value, source){\n        return j.concat(makeValueArray(value), source);\n    }\n\n    function first(values){\n        return j.isArray(values) ? j.either(null, values[0]) : null;\n    }\n\n    function lastIndex(values){\n        return j.isArray(values) ? values.length - 1 : null;\n    }\n\n    function last(values){\n        return j.isArray(values) ? values[lastIndex(values)] : null;\n    }\n\n    function drop(index, valueSet){\n        var finalIndex = lastIndex(valueSet),\n\n            sanitizedIndex = (index === 0 || index === finalIndex) ?\n                index : j.either(1, index) - 1,\n\n            firstArray = (sanitizedIndex === 0) ?\n                [] : j.slice(0, valueSet, sanitizedIndex),\n\n            secondArray = (sanitizedIndex === finalIndex)?\n                [] : j.slice(sanitizedIndex + 1, valueSet);\n\n        return j.concat(firstArray, secondArray);\n    }\n\n    function dropLast(valueSet){\n        return drop(lastIndex(valueSet), valueSet);\n    }\n\n    function nth(index, valueSet){\n        return j.either(null, j.either([], valueSet)[index]);\n    }\n\n    function rest(values){\n        return j.slice(1, values);\n    }\n\n    function take(count, values){\n        return j.isArray(values) ? j.slice(0, values, count) : null;\n    }\n\n    function naturalComparator(a, b){\n        var comparison = a < b ? -1 : 1;\n        return a === b ? 0 : comparison;\n    }\n\n    function sort(optionValue, valueSet){\n        var comparator = j.isFunction(optionValue) ? optionValue : naturalComparator,\n            finalSet = j.isArray(optionValue) ? j.slice(0, optionValue) : j.slice(0, valueSet);\n\n        return finalSet.sort(comparator);\n    }\n\n    function each(userFn, userArray){\n        var sanitizedArray = j.either([], userArray),\n            sanitizedFn = j.either(j.identity, userFn),\n            i;\n\n        for(i = 0; i < sanitizedArray.length; i++){\n            if(sanitizedFn(sanitizedArray[i], i) === false){\n                break;\n            }\n        }\n\n        return sanitizedArray;\n    }\n\n    j.conj = conj;\n    j.cons = cons;\n    j.copyArray = copyArray;\n    j.drop = drop;\n    j.dropFirst = j.partial(drop, 0);\n    j.dropLast = dropLast;\n    j.each = each;\n    j.first = first;\n    j.init = j.dropLast;\n    j.last = last;\n    j.lastIndex = lastIndex;\n    j.nth = nth;\n    j.rest = rest;\n    j.sort = sort;\n    j.take = take;\n\n})(jfp);\n\n\n(function(j){\n    'use strict';\n\n    function pick(key, valueMap){\n        var pickResult = j.either({}, valueMap)[key];\n        return j.isUndefined(pickResult) ? null : pickResult;\n    }\n\n    function merge(defaultObj, mergeData){\n        var finalObj = {},\n            key;\n\n        for(key in j.either({}, defaultObj)){\n            finalObj[key] = defaultObj[key];\n        }\n\n        for(key in j.either({}, mergeData)){\n            finalObj[key] = mergeData[key];\n        }\n\n        return j.eitherIf(null, finalObj, j.isTruthy(defaultObj));\n    }\n\n    j.merge = merge;\n    j.pick = pick;\n\n})(jfp);\n\n\n(function(j){\n    'use strict';\n\n    //This is complicated and I don't expect people to grok it on first read.\n    function curry(userFn){\n        var args = j.slice(1, arguments),\n            argumentCount = j.countArguments(userFn),\n            appliedFn = (args.length < argumentCount) ? j.apply(j.partial, j.concat([curry, userFn], args)) : null,\n            result = (!!userFn && args.length >= argumentCount) ? j.apply(userFn, args) : null;\n\n        return j.either(appliedFn, result);\n    }\n\n    //zOMG! TAIL RECURSION\n    function recursor(recurFn){\n        var args = j.slice(1, arguments);\n\n        //This is to make the returned function distinct and identifiable.\n        return function recursorFn(localRecursor){\n            return j.apply(recurFn, j.concat([localRecursor], args));\n        };\n    }\n\n    function verifyRecurValue(recurValue){\n        return typeof recurValue === 'function' &&\n            recurValue.toString().match('recursorFn');\n    }\n\n    //Tail optimization with managed recursion is really complicated.\n    //Please don't muck with this unless you TRULY understand what is happening.\n    function recur(userFn){\n        var recursingFn = j.either(j.identity, userFn, 'function'),\n            localRecursor = j.partial(recursor, recursingFn),\n            recurValue = j.apply(localRecursor, j.slice(1, arguments));\n\n        while(verifyRecurValue(recurValue = recurValue(localRecursor)) && recursingFn !== j.identity);\n\n        return recurValue;\n    }\n\n\t/*\n     * Reduce uses tail-optimized (while-trampolined, fully returning) recursion to resolve reductions.\n     * Reducer is a pure function for handling a single reduction step.\n     * Reduce manages the setup and recursion execution.\n     */\n    function reducer(userFn, recur, reduction, collection){\n        return collection.length === 0 ?\n                    reduction :\n                    recur(userFn(reduction, j.first(collection)),\n                          j.rest(collection));\n    }\n\n    function reduce(userFn, values, initialState){\n        var appliedReducer = j.partial(reducer, userFn),\n            hasInitialState = typeof initialState !== 'undefined',\n            \n            initialValue = !hasInitialState ? j.first(values) : initialState,\n            remainder = !hasInitialState ? j.rest(values) : values;\n\n        return (!!values && values.length > 0) ? j.recur(appliedReducer, initialValue, remainder) : initialValue;\n    }\n\n    //Produces a function that returns f(g(x))\n    function compositor(f, g){\n        var $f = typeof f !== 'function' ? j.identity : f,\n            $g = typeof g !== 'function' ? j.identity : g;\n            \n        function compositeFn () {\n            return $f(j.apply($g, j.slice(0, arguments)));\n        }\n        \n        return compositeFn;\n    }\n\n    function compose(){\n        return reduce(compositor, j.slice(0, arguments), j.identity);\n    }\n\n    function pipeline(value){\n        return j.apply(compose, j.slice(1, arguments).reverse())(value);\n    }\n\n    function partialReverse(){\n        return j.apply(j.compose(j.reverseArgs, j.partial),\n                       j.slice(0, arguments));\n    }\n\n    j.compose = compose;\n    j.curry = curry;\n    j.partialReverse = partialReverse;\n    j.pipeline = pipeline;\n    j.recur = recur;\n    j.reduce = reduce;\n\n})(jfp);\n\n\n(function(j){\n\t\n    /*\n     * Map uses reduce to produce a new, completely reference-decoupled list of values\n     * Mapper handles a single update step for the final output array\n     */\n    function mapper(userFn, finalArray, value){\n        finalArray.push(userFn(value));\n        return finalArray;\n    }\n\n    function map (userFn, values) {\n        var mapperFn = j.partial(mapper, userFn);\n        return j.reduce(mapperFn, values, []);\n    }\n    \n    /*\n     * Filter uses reduce to produce a new, completely reference-decoupled list of values\n     * Filterer handles a single update step for the final output array\n     */\n    function filterer(userPredicate, finalArray, value){\n        return userPredicate(value) ? j.conj(value, finalArray) : finalArray;\n    }\n\n    function filter (predicate, values) {\n        var filterFn = j.partial(filterer, predicate);\n        return j.reduce(filterFn, values, []);\n    }\n    \n    function compact(valueList){\n        return filter(j.isTruthy, valueList);\n    }\n\n    function predicateAccumulator(predicate, total, value){\n        var sanitizedTotal = j.either(0, total, 'number');\n        return predicate(value) ? sanitizedTotal + 1 : sanitizedTotal;\n    }\n\n    function numberOf(predicate, valueSet){\n        var accumulator = j.partial(predicateAccumulator, predicate);\n        return j.reduce(accumulator, j.either([], valueSet), 0);\n    }\n\n    function captureUnique(finalList, value){\n        return j.last(finalList) === value ? finalList : j.conj(value, finalList);\n    }\n    \n    function unique(valueSet){\n        return j.reduce(captureUnique, j.sort(j.slice(0, valueSet)), []);\n    }\n\n    function union(set1, set2){\n        return j.compose(j.unique, j.concat)(set1, set2);\n    }\n\n    function addToHash(finalObject, value){\n        finalObject[value] = true;\n        return finalObject;\n    }\n\n    function buildValueHash(valueList){\n        return j.either({}, j.reduce(addToHash, valueList, {}));\n    }\n\n    function captureIntersection(valueHash, finalList, value){\n        return valueHash[value] ? j.conj(value, finalList) : finalList;\n    }\n    \n    function intersect(set1, set2){\n        var setHash = buildValueHash(j.either([], set2));\n        return j.reduce(j.partial(captureIntersection, setHash), set1, []); \n    }\n\n    function captureDifference(valueHash, finalList, value){\n        return !valueHash[value] ? j.conj(value, finalList) : finalList;\n    }\n    \n    function difference(set1, set2){\n        var setHash = buildValueHash(j.either([], set2));\n        return j.reduce(j.partial(captureDifference, setHash), set1, []);\n    }\n\n    function symmetricDifference(set1, set2){\n        var setUnion = union(set1, set2),\n            setIntersection = intersect(set1, set2);\n\n        return difference(setUnion, setIntersection);\n    }\n\n    function everyReducer (predicate, result, valueList){\n        return result && predicate(valueList);\n    }\n\n    function every (predicate, valueList){\n        var reducer = j.partial(everyReducer, predicate);\n        return Boolean(j.reduce(reducer, valueList, true));\n    }\n\n    function finder (recur, predicate, valueList) {\n        var done = !Boolean(valueList) || valueList.length === 0,\n            result = done ? null : j.first(valueList);\n        \n        return done || predicate(result) ? result : recur(predicate, j.rest(valueList));\n    }\n\n    function find (predicate, valueList){\n        return j.recur(finder, predicate, valueList);\n    }\n\n    function someRecur(recur, predicate, valueList){\n        var done = valueList.length === 0,\n            result = done ? false : predicate(j.first(valueList));\n            \n        return result || done ? result : recur(predicate, j.rest(valueList));\n    }\n\n    function some(predicate, valueList){\n        return Boolean(j.recur(someRecur, predicate, valueList));\n    }\n    \n    function contains(value, valueList){\n        return some(j.partial(j.equal, value), valueList);\n    }\n\n    function partitioner(predicate, partitions, value){\n        var index = predicate(value) ? 0 : 1;\n\n        partitions[index].push(value);\n\n        return partitions;\n    }\n\n    function partition(predicate, list){\n        var sanitizedPredicate = j.either(j.identity, predicate, 'function');\n        \n        return j.reduce(j.partial(partitioner, sanitizedPredicate),\n                        j.either([], list),\n                        [[], []]);\n    }\n\n    function multiPartitioner(predicate, partitions, value){\n        var partitionPredicate = j.rpartial(predicate, value),\n            computedPartitions = j.dropLast(partitions);\n        \n        return j.concat(computedPartitions, partition(partitionPredicate, j.last(partitions)));\n    }\n    \n    function multiPartition(predicate, predicateArgs, list){\n        var sanitizedArgs = j.either([], predicateArgs),\n            sanitizedPredicate = j.either(j.identity, predicate),\n            sanitizedList = j.either([], list);\n            \n        return !Boolean(list) ?\n                [[], []] :\n                j.reduce(j.partial(multiPartitioner, sanitizedPredicate),\n                         sanitizedArgs,\n                         [sanitizedList]);\n    }\n\n    j.contains = contains;\n    j.compact = compact;\n    j.difference = difference;\n    j.every = every;\n\tj.filter = filter;\n    j.find = find;\n    j.intersect = intersect;\n\tj.map = map;\n\tj.multiPartition = multiPartition;\n\tj.numberOf = numberOf;\n    j.partition = partition;\n    j.some = some;\n    j.symmetricDifference = symmetricDifference;\n    j.union = union;\n    j.unique = unique;\n\n})(jfp);\n\n(function (j) {\n\t'use strict';\n\t\n\t//Performs 'and' operation on valueSet\n    function ander(a, b){\n        return a && b;\n    }\n\n    function orer(a, b){\n        return a || b;\n    }\n\n    function reduceConditions(conditionArgs, operator, initialCondition){\n        var args = j.map(Boolean, j.slice(0, conditionArgs));\n        return Boolean(j.reduce(operator, args, initialCondition));\n    }\n\n    function and(a, b){\n        return reduceConditions(arguments, ander, true);\n    }\n\n    function or(a, b){\n        return reduceConditions(arguments, orer, false);\n    }\n\n    function xor(a, b){\n        var equivalent = Boolean(a) === Boolean(b);\n        return or(a, b) && j.not(equivalent);\n    }\n\n\tj.and = and;\n\tj.or = or;\n\tj.xor = xor;\n\n})(jfp);\n\n(function (j) {\n\t'use strict';\n\t\n    /*\n     * toValues converts an object to an array of values\n     * This is necessary for reduce to convert objects into\n     * processible arrays in an upcoming version.\n     */\n\tfunction keyReduction (baseObj, finalList, key) {\n\t\treturn j.conj(baseObj[key], finalList);\n\t}\n\t\n\tfunction toValues (baseObj) {\n\t\tvar reducer = j.partial(keyReduction, baseObj);\n\t\treturn j.isNull(j.maybe(baseObj, 'object')) ? null : j.reduce(reducer, Object.keys(baseObj), []);\n\t}\n\n\tfunction dereferencer(dataObject, token){\n        var key = j.either('', token).trim();\n        return key === '' ? dataObject : j.pick(token, dataObject);\n    }\n\n    function internalDeref(key, baseData, defaultValue){\n        var sanitizedDefault = defaultValue === undefined ? null : defaultValue,\n            keyTokens = key.split('.'),\n            result = j.reduce(dereferencer, keyTokens, baseData);\n        \n        return j.either(sanitizedDefault, result);\n    }\n    \n    function deref(key, baseData, defaultValue){\n        // Satisifes backwards-compatibility case where key an data are reversed\n        var sanitizedKey = typeof key === 'string' ? key : baseData,\n            sanitizedData = typeof baseData === 'object' ? baseData : key;\n        \n        // Fully sanitize data before executing the dereference function\n        sanitizedKey = j.either('', sanitizedKey, 'string');\n        sanitizedData = j.either(null, sanitizedData, 'object');\n        \n        return internalDeref(j.either('', sanitizedKey), sanitizedData, defaultValue);\n    }\n    \n    function plucker (baseObj, finalObj, key){\n        finalObj[key] = baseObj[key];\n        return finalObj;\n    }\n    \n    function pluckKeys (keys, baseObj){\n        var sanitizedObject = j.either({}, baseObj, 'object');\n        return j.reduce(j.partial(plucker, sanitizedObject), keys, {});\n    }\n    \n    function pluck (key, baseObj) {\n        return pluckKeys([key], baseObj);\n    }\n\n\tj.deref = deref;\n    j.pluck = pluck;\n    j.pluckKeys = pluckKeys;\n    j.toValues = toValues;\n\n})(jfp);\n\n(function(j){\n    'use strict';\n\n//This is a recursive add fn\n    function adder(recur, current, valueSet){\n        return (valueSet.length === 0) ?\n                current :\n                recur(current + j.first(valueSet), j.rest(valueSet));\n    }\n    \n    function add(a, b){\n        return j.recur(adder, 0, j.slice(0, arguments));\n    }\n    \n    //This is a recursive divide fn\n    function divider(recur, current, valueSet){\n        return (valueSet.length === 0) ?\n                current :\n                recur(current / j.first(valueSet), j.rest(valueSet));\n    }\n    \n    function divide(){\n        var args = j.slice(0, arguments),\n            first = args.length ? j.first(args) : 1;\n        return j.recur(divider, first, j.rest(args));\n    }\n    \n    //This is a recursive multiply fn\n    function multiplier(recur, current, valueSet){\n        return (valueSet.length === 0) ?\n                current :\n                recur(current * j.first(valueSet), j.rest(valueSet));\n    }\n    \n    function multiply(){\n        return j.recur(multiplier, 1, j.slice(0, arguments));\n    }\n    \n    //This is a recursive subtraction fn\n    function subtractor(recur, current, valueSet){\n        return (valueSet.length === 0) ?\n                current :\n                recur(current - j.first(valueSet), j.rest(valueSet));\n    }\n    \n    function subtract(){\n        var args = j.slice(0, arguments),\n            first = args.length ? j.first(args) : 0;\n        return j.recur(subtractor, first, j.rest(args));\n    }\n\n    //This is a recursive constructor function for ranges\n    function rangeRecurCheck(m, n, inc){\n        return inc > 0 ? (m + inc) < n : (m + inc) > n;\n    }\n\n    function rangeBuilder(recur, currentRange, m, n, inc){\n        var finalRange = rangeRecurCheck(m - inc, n, inc) ?\n                            j.conj(m, currentRange) :\n                            currentRange;\n        \n        return rangeRecurCheck(m, n, inc) ?\n                recur(finalRange, m + inc, n, inc) :\n                finalRange;\n    }\n    \n    function range(a, b, inc){\n        var start = j.isUndefined(b) ? 0 : a,\n            end = j.isUndefined(b) ? j.either(0, a) : b,\n            increment = (!inc) ? 1 : inc;\n            \n        return j.recur(rangeBuilder,\n                       [],\n                       j.either(0, start),\n                       j.either(0, end),\n                       increment);\n    }\n\n    function mod(a, b){\n        return j.isUndefined(b) ? j.either(0, a) : a%b;\n    }\n\n    function modulo(a, b){\n        var _a = j.either(0, a),\n            _b = j.either(0, b);\n\n        return (_a > 0) ? mod(_a, _b) : _b * (Math.floor(Math.abs(_a)/_b) + 1) + _a;\n    }\n\n    function truncate(value){\n        return (value > 0) ? Math.floor(value) : Math.floor(value) + 1;\n    }\n    \n    function max(a, b){\n        var maxValue = -Number.MAX_VALUE,\n            _a = j.isUndefined(a) ? maxValue : a,\n            _b = j.isUndefined(b) ? maxValue : b;\n            \n        maxValue = (_a > maxValue) ? _a : maxValue;\n        maxValue = (_b > maxValue) ? _b : maxValue;\n        \n        return maxValue;\n    }\n    \n    function min(a, b){\n        var minValue = Number.MAX_VALUE,\n            _a = j.isUndefined(a) ? minValue : a,\n            _b = j.isUndefined(b) ? minValue : b;\n        \n        minValue = (_a < minValue) ? _a : minValue;\n        minValue = (_b < minValue) ? _b : minValue;\n        \n        return minValue;\n    }\n\n    function fac(value){\n        var factorial = j.compose(j.partial(j.reduce, multiply),\n                                  j.partial(range, 1),\n                                  j.partial(add, 1));\n\n        return j.either(1, j.when(j.greater(value, 0), factorial, value));\n    }\n\n    j.add = add;\n    j.divide = divide;\n    j.fac = fac;\n    j.inc = j.partial(j.add, 1);\n    j.max = max;\n    j.min = min;\n    j.mod = mod;\n    j.modulo = modulo;\n    j.multiply = multiply;\n    j.range = range;\n    j.subtract = subtract;\n    j.truncate = truncate;\n\n})(jfp);\n\n\n(function(j){\n\n    function throwWhenNotComparable(a, b){\n        j.when(j.isUndefined(a) || j.isUndefined(b), function(){\n            throw new TypeError('Inequality comparisons require two values');\n        });\n    }\n\n    function equal(a, b){\n        var isNotUndefined = j.compose(j.not, j.isUndefined);\n        return (isNotUndefined(a) && isNotUndefined(b)) ? a === b : false;\n    }\n\n    function greater(a, b){\n        throwWhenNotComparable(a, b);\n        return a > b;\n    }\n\n    function less(a, b){\n        throwWhenNotComparable(a, b);\n        return a < b;\n    }\n\n    function isEven(value){\n        return equal(0, j.mod(value, 2));\n    }\n\n    function isPositive(value){\n        return greater(value, 0);\n    }\n\n    function isZero(value){\n        return value === 0;\n    }\n\n    function isNegative(value){\n        return j.compose(j.not, j.or)(isPositive(value), isZero(value));\n    }\n\n    function isInt(value){\n        return equal(j.truncate(value), value);\n    }\n\n    j.isEven = isEven;\n    j.isInt = isInt;\n    j.isNegative = isNegative;\n    j.isNonNegative = j.compose(j.not, isNegative);\n    j.isNonPositive = j.compose(j.not, isPositive);\n    j.isNonZero = j.compose(j.not, isZero);\n    j.isOdd = j.compose(j.not, isEven);\n    j.isPositive = isPositive;\n    j.isZero = isZero;\n\n    //Special case predicate naming is intended for these functions\n    //There is a general expectation that these not be named with 'is'\n    j.equal = equal;\n    j.geq = j.compose(j.not, less);\n    j.greater = greater;\n    j.leq = j.compose(j.not, greater);\n    j.less = less;\n\n})(jfp);\n\nvar j = jfp;\n\nif(typeof module !== 'undefined' && !!module.exports){\n    module.exports = j;\n}\n\n\n"]}