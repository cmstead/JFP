{"version":3,"sources":["jfp.js"],"names":["jfp","resolveFunction","functionValue","curryAlias","args","slice","arguments","apply","curry","pickAlias","key","value","cleanKey","Boolean","pick","partial","chooseResolver","resolveToPick","charAt","resolver","j","isUndefined","undefined","not","equal","a","b","missingValues","isType","typeString","getType","isNumeric","pattern","number","numericString","match","isTruthy","typeCheckReduction","result","isPrimitive","primitiveNames","reduce","bind","isTuple","size","list","length","hasFirst","either","isEmptyString","isNull","isArray","isBoolean","isFunction","isNumber","isObject","isString","isPair","isSingle","isTriple","identity","valueType","Object","prototype","toString","call","empty","array","boolean","null","object","string","begin","valueSet","end","values","Array","maybe","type","typeOkay","defaultValue","testValue","always","output","shortCircuit","fn","optionValue","userFn","when","checkValue","eitherIf","predicateValue","safePredicate","eitherWhen","sanitizedFn","concat","original","extension","sanitizedExtension","i","push","basePartial","direction","appliedFunction","applicationArgs","splitPartial","baseFn","left","right","leftApplied","reverseArgs","reverse","countArguments","execute","rpartial","toDec","parseInt","copyArray","makeValueArray","conj","dest","cons","source","first","lastIndex","last","drop","index","finalIndex","sanitizedIndex","firstArray","secondArray","dropLast","nth","rest","take","count","naturalComparator","comparison","sort","comparator","finalSet","each","userArray","sanitizedArray","dropFirst","init","valueMap","pickResult","getKeys","obj","keys","mergeValue","dataObj","mergedObj","merge","baseObj","mergeData","finalObj","argumentCount","appliedFn","recursor","recurFn","recursorFn","localRecursor","verifyRecurValue","recurValue","recur","recursingFn","reducer","reduction","collection","appliedReducer","initialState","hasInitialState","initialValue","remainder","compositor","f","g","$f","$g","compositeFn","compose","pipeline","partialReverse","clone","originalValue","depth","depthOkay","geq","copyOkay","copy","container","newDepth","err","RangeError","maybeType","eitherType","mapper","finalArray","map","mapperFn","filterer","userPredicate","filter","predicate","filterFn","compact","valueList","predicateAccumulator","total","sanitizedTotal","numberOf","accumulator","captureUnique","finalList","unique","union","set1","set2","addToHash","finalObject","buildValueHash","captureIntersection","valueHash","intersect","setHash","captureDifference","difference","symmetricDifference","setUnion","setIntersection","everyReducer","every","finder","done","find","someRecur","some","contains","partitioner","partitions","partition","sanitizedPredicate","multiPartitioner","partitionPredicate","computedPartitions","multiPartition","predicateArgs","sanitizedArgs","sanitizedList","firstExists","ander","orer","reduceConditions","conditionArgs","operator","initialCondition","and","or","xor","equivalent","keyReduction","toValues","dereferencer","dataObject","token","trim","internalDeref","baseData","sanitizedDefault","keyTokens","split","deref","sanitizedKey","sanitizedData","plucker","pluckKeys","sanitizedObject","pluck","transformer","transformation","transform","adder","current","add","divider","divide","multiplier","multiply","subtractor","subtract","rangeRecurCheck","m","n","inc","rangeBuilder","currentRange","finalRange","range","start","increment","mod","modulo","_a","_b","Math","floor","abs","truncate","max","maxValue","Number","MAX_VALUE","min","minValue","fac","factorial","greater","throwWhenNotComparable","TypeError","less","isInt","isMultipleOf","base","test","isNegative","isPositive","isZero","isEven","isNonNegative","isNonPositive","isNonZero","isOdd","leq","module","exports","define","amd"],"mappings":"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","file":"jfp.min.js","sourcesContent":["var jfp = (function(){\n    'use strict';\n    \n    function resolveFunction(functionValue){\n        return typeof functionValue === 'string' ? jfp[functionValue] : functionValue;\n    }\n    \n    function curryAlias(){\n        var args = jfp.slice(0, arguments);\n\n        args[0] = resolveFunction(args[0]);\n        \n        return jfp.apply(jfp.curry, args);\n    }\n    \n    function pickAlias(key, value){\n        var cleanKey = key.slice(1);\n        \n        return Boolean(value) ? jfp.pick(cleanKey, value) : jfp.partial(jfp.pick, cleanKey);\n    }\n    \n    function chooseResolver(value){\n        var resolveToPick = typeof value === 'string' && value.charAt(0) === ':';\n        \n        return resolveToPick ? pickAlias : curryAlias;\n    }\n    \n    return function(){\n        var args = jfp.slice(0, arguments),\n            resolver = chooseResolver(args[0]);\n        \n        return jfp.apply(resolver, args);\n    };\n    \n})();\n\n(function(j){\n    'use strict';\n\n    function isUndefined(value){\n        return value === undefined;\n    }\n    \n    function not(value){\n        return !Boolean(value);\n    }\n    \n    function equal (a, b) {\n        var missingValues = isUndefined(a) || isUndefined(b);\n        return not(missingValues) && a === b;\n    }\n\n    function isType (typeString, value) {\n        return j.equal(j.getType(value), typeString);\n    }\n    \n    function isNumeric(value){\n        var pattern = /^(0x)?[0-9]+((\\.[0-9]+)|(e\\-?[0-9]+))?$/,\n            number = isType('number', value),\n            numericString = isType('string', value) && Boolean(value.match(pattern));\n            \n        return number || numericString;\n    }\n    \n    function isTruthy(value){\n        return Boolean(value);\n    }\n    \n    function typeCheckReduction (value, result, typeString){\n        return result || isType(typeString, value);\n    }\n    \n    function isPrimitive (value) {\n        var primitiveNames = ['number',\n                              'string',\n                              'boolean',\n                              'undefined'];\n\n        return primitiveNames.reduce(typeCheckReduction.bind(null, value), equal(null, value));\n    }\n\n    function isTuple (size, list) {\n        return isType('array', list) && list.length === size;\n    }\n    \n    function hasFirst (list) {\n        return not(isUndefined(j.either([], list, 'array')[0]));\n    }\n\n    // Equality\n    j.equal = equal;\n    j.isEmptyString = equal.bind(null, '');\n    j.isNull = equal.bind(null, null);\n\n    // Types\n    j.isType = isType;\n    j.isArray = isType.bind(null, 'array');\n    j.isBoolean = isType.bind(null, 'boolean');\n    j.isFunction = isType.bind(null, 'function');\n    j.isNumber = isType.bind(null, 'number');\n    j.isObject = isType.bind(null, 'object');\n    j.isString = isType.bind(null, 'string');\n    j.isUndefined = isType.bind(null, 'undefined');\n\n    // Tuples\n    j.isTuple = isTuple;\n    j.isPair = isTuple.bind(null, 2);\n    j.isSingle = isTuple.bind(null, 1);\n    j.isTriple = isTuple.bind(null, 3);\n\n    //Other predicates\n    j.hasFirst = hasFirst;\n    j.isNumeric = isNumeric;\n    j.isPrimitive = isPrimitive;\n    j.isTruthy = isTruthy;\n    j.not = not;\n\n})(jfp);\n\n\n(function(j){\n    'use strict';\n\n    function identity(value){\n        return value;\n    }\n\n    function getType (value) {\n        var valueType = typeof value,\n            isArray = valueType === 'object' && Object.prototype.toString.call(value) === '[object Array]';\n            \n        return isArray ? 'array' : valueType;\n    }\n\n    function empty (typeString) {\n        return {\n                array: [],\n                boolean: false,\n                'null': null,\n                number: 0,\n                object: {},\n                string: ''\n            }[typeString];\n    }\n\n    function slice(begin, valueSet, end){\n        var values = j.not(j.isTruthy(valueSet)) ? [] : valueSet;\n\n        return j.not(j.isTruthy(end)) ?\n                    Array.prototype.slice.call(values, begin) :\n                    Array.prototype.slice.call(values, begin, end);\n    }\n\n    function maybe(value){\n        var type = arguments[1],\n            valueType = getType(value),\n            typeOkay = valueType === type || valueType === 'array' && type === 'object';\n        \n        return typeOkay || (!type && Boolean(value)) ? value : null;\n    }\n\n    function either(defaultValue, testValue){\n        var type = arguments[2];\n        return maybe(testValue, type) === null ? defaultValue : testValue;\n    }\n    \n    function always (value) {\n        var output = getType(value) === 'undefined' ? null : value;\n        return identity.bind(null, output);\n    }\n\n    function shortCircuit(defaultValue, fn, optionValue){\n        var type = optionValue === 0 ? 'number' : arguments[3];\n        return maybe(optionValue, type) !== null ? fn(optionValue) : defaultValue;\n    }\n\n    function apply(userFn, args){\n        return userFn.apply(null, args);\n    }\n\n    function when(checkValue, userFn){\n        var args = slice(2, arguments);\n        return j.isTruthy(checkValue) ? apply(userFn, args) : null;\n    }\n\n    function eitherIf(defaultValue, testValue, predicateValue){\n        var safePredicate = j.isUndefined(predicateValue) ? true : predicateValue;\n\n        return j.either(defaultValue, j.when(safePredicate, j.partial(j.identity, testValue)));\n    }\n\n    function eitherWhen(defaultValue, predicateValue, userFn){\n        var sanitizedFn = eitherIf(j.identity, userFn, j.isFunction(userFn));\n\n        return j.either(defaultValue, j.when(predicateValue, sanitizedFn));\n    }\n\n    function concat(original, extension){\n        var result = slice(0, either([], original)),\n            sanitizedExtension = either([], extension),\n            i;\n\n        //This is the most performant way to handle concatenation. Trust me.\n        for(i = 0; i < sanitizedExtension.length; i++){\n            result.push(sanitizedExtension[i]);\n        }\n\n        return result;\n    }\n\n    function basePartial(direction, userFn){\n        var args = slice(2, arguments);\n\n        return function appliedFunction(){\n            var applicationArgs = (direction === 'left') ?\n                                    concat(args, slice(0, arguments)) :\n                                    concat(slice(0, arguments), args);\n\n            return apply(userFn, applicationArgs);\n        };\n    }\n\n    function splitPartial (baseFn, left, right) {\n        var leftApplied = apply(basePartial, concat(['left', baseFn], left));\n        return apply(basePartial, concat(['right', leftApplied], right));\n    }\n\n    function reverseArgs(userFn){\n        return function(){\n            var args = j.slice(0, arguments).reverse();\n            return j.apply(userFn, args);\n        };\n    }\n\n    function countArguments(userFn){\n        return either(function(){}, userFn).length;\n    }\n\n    function execute(userFn){\n        return j.apply(userFn, j.slice(1, arguments));\n    }\n    \n    j.always = always;\n    j.apply = apply;\n    j.concat = concat;\n    j.countArguments = countArguments;\n    j.either = either;\n    j.eitherIf = eitherIf;\n    j.eitherWhen = eitherWhen;\n    j.empty = empty;\n    j.execute = execute;\n    j.getType = getType;\n    j.identity = identity;\n    j.maybe = maybe;\n    j.partial = basePartial('left', basePartial, 'left');\n    j.reverseArgs = reverseArgs;\n    j.rpartial = basePartial('left', basePartial, 'right');\n    j.shortCircuit = shortCircuit;\n    j.slice = slice;\n    j.splitPartial = splitPartial;\n    j.when = when;\n\n})(jfp);\n\n\n(function(j){\n    'use strict';\n\n    function toDec(value){\n        return (j.isNumeric(value)) ? parseInt(value, 10) : null;\n    }\n\n    j.toDec = toDec;\n\n})(jfp);\n\n(function(j){\n    'use strict';\n\n    function copyArray(valueSet){\n        return j.slice(0, valueSet);\n    }\n\n    function makeValueArray(value){\n        return j.not(j.isUndefined(value)) ? [value] : [];\n    }\n\n    function conj(value, dest){\n        return j.concat(copyArray(dest), makeValueArray(value));\n    }\n\n    function cons(value, source){\n        return j.concat(makeValueArray(value), source);\n    }\n\n    function first(values){\n        return j.isArray(values) ? j.either(null, values[0]) : null;\n    }\n\n    function lastIndex(values){\n        return j.isArray(values) ? values.length - 1 : null;\n    }\n\n    function last(values){\n        return j.isArray(values) ? values[lastIndex(values)] : null;\n    }\n\n    function drop(index, valueSet){\n        var finalIndex = lastIndex(valueSet),\n\n            sanitizedIndex = (index === 0 || index === finalIndex) ?\n                index : j.either(1, index) - 1,\n\n            firstArray = (sanitizedIndex === 0) ?\n                [] : j.slice(0, valueSet, sanitizedIndex),\n\n            secondArray = (sanitizedIndex === finalIndex)?\n                [] : j.slice(sanitizedIndex + 1, valueSet);\n\n        return j.concat(firstArray, secondArray);\n    }\n\n    function dropLast(valueSet){\n        return drop(lastIndex(valueSet), valueSet);\n    }\n\n    function nth(index, valueSet){\n        return j.either(null, j.either([], valueSet)[index]);\n    }\n\n    function rest(values){\n        return j.slice(1, values);\n    }\n\n    function take(count, values){\n        return j.isArray(values) ? j.slice(0, values, count) : null;\n    }\n\n    function naturalComparator(a, b){\n        var comparison = a < b ? -1 : 1;\n        return a === b ? 0 : comparison;\n    }\n\n    function sort(optionValue, valueSet){\n        var comparator = j.isFunction(optionValue) ? optionValue : naturalComparator,\n            finalSet = j.isArray(optionValue) ? j.slice(0, optionValue) : j.slice(0, valueSet);\n\n        return finalSet.sort(comparator);\n    }\n\n    function each(userFn, userArray){\n        var sanitizedArray = j.either([], userArray),\n            sanitizedFn = j.either(j.identity, userFn),\n            i;\n\n        for(i = 0; i < sanitizedArray.length; i++){\n            if(sanitizedFn(sanitizedArray[i], i) === false){\n                break;\n            }\n        }\n\n        return sanitizedArray;\n    }\n\n    j.conj = conj;\n    j.cons = cons;\n    j.copyArray = copyArray;\n    j.drop = drop;\n    j.dropFirst = j.partial(drop, 0);\n    j.dropLast = dropLast;\n    j.each = each;\n    j.first = first;\n    j.init = j.dropLast;\n    j.last = last;\n    j.lastIndex = lastIndex;\n    j.nth = nth;\n    j.rest = rest;\n    j.sort = sort;\n    j.take = take;\n\n})(jfp);\n\n\n(function(j){\n    'use strict';\n\n    function pick(key, valueMap){\n        var pickResult = j.either({}, valueMap)[key];\n        return j.isUndefined(pickResult) ? null : pickResult;\n    }\n\n    function getKeys (obj) {\n        return Object.keys(j.either({}, obj, 'object'));\n    }\n\n    function mergeValue (dataObj, mergedObj, key) {\n        mergedObj[key] = dataObj[key];\n        return mergedObj;\n    }\n\n    function merge(baseObj, mergeData){\n        var finalObj = null;\n        \n        if (j.maybe(baseObj) !== null) {\n            finalObj = getKeys(baseObj).reduce(j.partial(mergeValue, baseObj), {});\n            finalObj = getKeys(mergeData).reduce(j.partial(mergeValue, mergeData), finalObj);\n        }\n\n        return finalObj;\n    }\n\n    j.getKeys = getKeys;\n    j.merge = merge;\n    j.pick = pick;\n\n})(jfp);\n\n\n(function(j){\n    'use strict';\n\n    //This is complicated and I don't expect people to grok it on first read.\n    function curry(userFn){\n        var args = j.slice(1, arguments),\n            argumentCount = j.countArguments(userFn),\n            appliedFn = (args.length < argumentCount) ? j.apply(j.partial, j.concat([curry, userFn], args)) : null,\n            result = (Boolean(userFn) && args.length >= argumentCount) ? j.apply(userFn, args) : null;\n\n        return j.either(appliedFn, result);\n    }\n\n    //zOMG! TAIL OPTIMIZED RECURSION\n    function recursor(recurFn){\n        var args = j.slice(1, arguments);\n\n        //This is to make the returned function distinct and identifiable.\n        return function recursorFn(localRecursor){\n            return j.apply(recurFn, j.concat([localRecursor], args));\n        };\n    }\n\n    function verifyRecurValue(recurValue){\n        return typeof recurValue === 'function' &&\n            recurValue.toString().match('recursorFn');\n    }\n\n    //Tail optimization with managed recursion is really complicated.\n    //Please don't muck with this unless you TRULY understand what is happening.\n    function recur(userFn){\n        var recursingFn = j.either(j.identity, userFn, 'function'),\n            localRecursor = j.partial(recursor, recursingFn),\n            recurValue = j.apply(localRecursor, j.slice(1, arguments));\n\n        while(verifyRecurValue(recurValue = recurValue(localRecursor)) && recursingFn !== j.identity);\n\n        return recurValue;\n    }\n\n\t/*\n     * Reduce uses tail-optimized (while-trampolined, fully returning) recursion to resolve reductions.\n     * Reducer is a pure function for handling a single reduction step.\n     * Reduce manages the setup and recursion execution.\n     */\n    function reducer(userFn, recur, reduction, collection){\n        return collection.length === 0 ?\n                    reduction :\n                    recur(userFn(reduction, j.first(collection)),\n                          j.rest(collection));\n    }\n\n    function reduce(userFn, values){\n        var appliedReducer = j.partial(reducer, userFn),\n            initialState = arguments[2],\n            hasInitialState = typeof initialState !== 'undefined',\n            \n            initialValue = !hasInitialState ? j.first(values) : initialState,\n            remainder = !hasInitialState ? j.rest(values) : values;\n\n        return (Boolean(values) && values.length > 0) ? j.recur(appliedReducer, initialValue, remainder) : initialValue;\n    }\n\n    //Produces a function that returns f(g(x))\n    function compositor(f, g){\n        var $f = typeof f !== 'function' ? j.identity : f,\n            $g = typeof g !== 'function' ? j.identity : g;\n            \n        function compositeFn () {\n            return $f(j.apply($g, j.slice(0, arguments)));\n        }\n        \n        return compositeFn;\n    }\n\n    function compose(){\n        return reduce(compositor, j.slice(0, arguments), j.identity);\n    }\n\n    function pipeline(value){\n        return j.apply(compose, j.slice(1, arguments).reverse())(value);\n    }\n\n    function partialReverse(){\n        return j.apply(j.compose(j.reverseArgs, j.partial),\n                       j.slice(0, arguments));\n    }\n\n    function clone (originalValue, depth) {\n        var depthOkay = j.isUndefined(depth) || j.geq(depth, 0),\n            copyOkay = j.isType('object', originalValue) || j.isType('array', originalValue);\n        \n        function copy () {\n            var keys = Object.keys(originalValue),\n                container = j.isArray(originalValue) ? [] : {};\n            \n            j.each(function (key) {\n                var newDepth = j.isNumber(depth) ? depth - 1 : undefined;\n                \n                try {\n                    container[key] = clone(originalValue[key], newDepth);\n                } catch (err) {\n                    throw new RangeError('Object contains circular reference or is too deep to clone.');\n                }\n                \n            }, keys);\n            \n            return container;\n        }\n        \n        return copyOkay && depthOkay ? copy() : originalValue;\n    }\n\n    function maybeType (typeString) {\n        return j.curry(function (value) {\n            return j.maybe(value, typeString);\n        }).apply(j, j.slice(1, arguments));\n    }\n    \n    function eitherType (typeString) {\n        return j.curry(function (defaultValue, optionValue) {\n            return j.either(defaultValue, optionValue, typeString);\n        }).apply(j, j.slice(1, arguments));\n    }\n    \n    j.clone = clone;\n    j.compose = compose;\n    j.curry = curry;\n    j.eitherType = eitherType;\n    j.maybeType = maybeType;\n    j.partialReverse = partialReverse;\n    j.pipeline = pipeline;\n    j.recur = recur;\n    j.reduce = reduce;\n\n})(jfp);\n\n\n(function(j){\n\t\n    /*\n     * Map uses reduce to produce a new, completely reference-decoupled list of values\n     * Mapper handles a single update step for the final output array\n     */\n    function mapper(userFn, finalArray, value){\n        finalArray.push(userFn(value));\n        return finalArray;\n    }\n\n    function map (userFn, values) {\n        var mapperFn = j.partial(mapper, userFn);\n        return j.reduce(mapperFn, values, []);\n    }\n    \n    /*\n     * Filter uses reduce to produce a new, completely reference-decoupled list of values\n     * Filterer handles a single update step for the final output array\n     */\n    function filterer(userPredicate, finalArray, value){\n        return userPredicate(value) ? j.conj(value, finalArray) : finalArray;\n    }\n\n    function filter (predicate, values) {\n        var filterFn = j.partial(filterer, predicate);\n        return j.reduce(filterFn, values, []);\n    }\n    \n    function compact(valueList){\n        return filter(j.isTruthy, valueList);\n    }\n\n    function predicateAccumulator(predicate, total, value){\n        var sanitizedTotal = j.either(0, total, 'number');\n        return predicate(value) ? sanitizedTotal + 1 : sanitizedTotal;\n    }\n\n    function numberOf(predicate, valueSet){\n        var accumulator = j.partial(predicateAccumulator, predicate);\n        return j.reduce(accumulator, j.either([], valueSet), 0);\n    }\n\n    function captureUnique(finalList, value){\n        return j.last(finalList) === value ? finalList : j.conj(value, finalList);\n    }\n    \n    function unique(valueSet){\n        return j.reduce(captureUnique, j.sort(j.slice(0, valueSet)), []);\n    }\n\n    function union(set1, set2){\n        return j.compose(j.unique, j.concat)(set1, set2);\n    }\n\n    function addToHash(finalObject, value){\n        finalObject[value] = true;\n        return finalObject;\n    }\n\n    function buildValueHash(valueList){\n        return j.either({}, j.reduce(addToHash, valueList, {}));\n    }\n\n    function captureIntersection(valueHash, finalList, value){\n        return valueHash[value] ? j.conj(value, finalList) : finalList;\n    }\n    \n    function intersect(set1, set2){\n        var setHash = buildValueHash(j.either([], set2));\n        return j.reduce(j.partial(captureIntersection, setHash), set1, []); \n    }\n\n    function captureDifference(valueHash, finalList, value){\n        return !valueHash[value] ? j.conj(value, finalList) : finalList;\n    }\n    \n    function difference(set1, set2){\n        var setHash = buildValueHash(j.either([], set2));\n        return j.reduce(j.partial(captureDifference, setHash), set1, []);\n    }\n\n    function symmetricDifference(set1, set2){\n        var setUnion = union(set1, set2),\n            setIntersection = intersect(set1, set2);\n\n        return difference(setUnion, setIntersection);\n    }\n\n    function everyReducer (predicate, result, valueList){\n        return result && predicate(valueList);\n    }\n\n    function every (predicate, valueList){\n        var reducer = j.partial(everyReducer, predicate);\n        return Boolean(j.reduce(reducer, valueList, true));\n    }\n\n    function finder (recur, predicate, valueList) {\n        var done = !Boolean(valueList) || valueList.length === 0,\n            result = done ? null : j.first(valueList);\n        \n        return done || predicate(result) ? result : recur(predicate, j.rest(valueList));\n    }\n\n    function find (predicate, valueList){\n        return j.recur(finder, predicate, valueList);\n    }\n\n    function someRecur(recur, predicate, valueList){\n        var done = valueList.length === 0,\n            result = done ? false : predicate(j.first(valueList));\n            \n        return result || done ? result : recur(predicate, j.rest(valueList));\n    }\n\n    function some(predicate, valueList){\n        return Boolean(j.recur(someRecur, predicate, valueList));\n    }\n    \n    function contains(value, valueList){\n        return some(j.partial(j.equal, value), valueList);\n    }\n\n    function partitioner(predicate, partitions, value){\n        var index = predicate(value) ? 0 : 1;\n\n        partitions[index].push(value);\n\n        return partitions;\n    }\n\n    function partition(predicate, list){\n        var sanitizedPredicate = j.either(j.identity, predicate, 'function');\n        \n        return j.reduce(j.partial(partitioner, sanitizedPredicate),\n                        j.either([], list),\n                        [[], []]);\n    }\n\n    function multiPartitioner(predicate, partitions, value){\n        var partitionPredicate = j.rpartial(predicate, value),\n            computedPartitions = j.dropLast(partitions);\n        \n        return j.concat(computedPartitions, partition(partitionPredicate, j.last(partitions)));\n    }\n    \n    function multiPartition(predicate, predicateArgs, list){\n        var sanitizedArgs = j.either([], predicateArgs),\n            sanitizedPredicate = j.either(j.identity, predicate),\n            sanitizedList = j.either([], list);\n            \n        return !Boolean(list) ?\n                [[], []] :\n                j.reduce(j.partial(multiPartitioner, sanitizedPredicate),\n                         sanitizedArgs,\n                         [sanitizedList]);\n    }\n\n    function firstExists (list) {\n        return j.not(j.isNull(j.first(list)));\n    }\n\n    j.contains = contains;\n    j.compact = compact;\n    j.difference = difference;\n    j.every = every;\n\tj.filter = filter;\n    j.find = find;\n    j.firstExists = firstExists;\n    j.intersect = intersect;\n\tj.map = map;\n\tj.multiPartition = multiPartition;\n\tj.numberOf = numberOf;\n    j.partition = partition;\n    j.some = some;\n    j.symmetricDifference = symmetricDifference;\n    j.union = union;\n    j.unique = unique;\n\n})(jfp);\n\n(function (j) {\n\t'use strict';\n\t\n\t//Performs 'and' operation on valueSet\n    function ander(a, b){\n        return a && b;\n    }\n\n    function orer(a, b){\n        return a || b;\n    }\n\n    function reduceConditions(conditionArgs, operator, initialCondition){\n        var args = j.map(Boolean, j.slice(0, conditionArgs));\n        return Boolean(j.reduce(operator, args, initialCondition));\n    }\n\n    function and(a, b){\n        return reduceConditions(arguments, ander, true);\n    }\n\n    function or(a, b){\n        return reduceConditions(arguments, orer, false);\n    }\n\n    function xor(a, b){\n        var equivalent = Boolean(a) === Boolean(b);\n        return or(a, b) && j.not(equivalent);\n    }\n\n\tj.and = and;\n\tj.or = or;\n\tj.xor = xor;\n\n})(jfp);\n\n(function (j) {\n\t'use strict';\n\t\n    /*\n     * toValues converts an object to an array of values\n     * This is necessary for reduce to convert objects into\n     * processible arrays in an upcoming version.\n     */\n\tfunction keyReduction (baseObj, finalList, key) {\n\t\treturn j.conj(baseObj[key], finalList);\n\t}\n\t\n\tfunction toValues (baseObj) {\n\t\tvar reducer = j.partial(keyReduction, baseObj);\n\t\treturn j.isNull(j.maybe(baseObj, 'object')) ? null : j.reduce(reducer, Object.keys(baseObj), []);\n\t}\n\n\tfunction dereferencer(dataObject, token){\n        var key = j.either('', token).trim();\n        return key === '' ? dataObject : j.pick(token, dataObject);\n    }\n\n    function internalDeref(key, baseData, defaultValue){\n        var sanitizedDefault = defaultValue === undefined ? null : defaultValue,\n            keyTokens = key.split('.'),\n            result = j.reduce(dereferencer, keyTokens, baseData);\n        \n        return j.either(sanitizedDefault, result);\n    }\n    \n    function deref(key, baseData, defaultValue){\n        // Satisifes backwards-compatibility case where key an data are reversed\n        var sanitizedKey = typeof key === 'string' ? key : baseData,\n            sanitizedData = typeof baseData === 'object' ? baseData : key;\n        \n        // Fully sanitize data before executing the dereference function\n        sanitizedKey = j.either('', sanitizedKey, 'string');\n        sanitizedData = j.either(null, sanitizedData, 'object');\n        \n        return internalDeref(j.either('', sanitizedKey), sanitizedData, defaultValue);\n    }\n    \n    function plucker (baseObj, finalObj, key){\n        finalObj[key] = baseObj[key];\n        return finalObj;\n    }\n    \n    function pluckKeys (keys, baseObj){\n        var sanitizedObject = j.either({}, baseObj, 'object');\n        return j.reduce(j.partial(plucker, sanitizedObject), keys, {});\n    }\n    \n    function pluck (key, baseObj) {\n        return pluckKeys([key], baseObj);\n    }\n\n    function transformer (obj, result, transformation) {\n        result[transformation[1]] = deref(transformation[0], obj);\n        return result;\n    }\n\n    function transform (transformation, obj) {\n        return j.pipeline(transformation,\n                          j.partial(j.filter, j.isPair),\n                          j.splitPartial(j.reduce, [j.partial(transformer, obj)], [{}]));\n    }\n\n\tj.deref = deref;\n    j.pluck = pluck;\n    j.pluckKeys = pluckKeys;\n    j.toValues = toValues;\n    j.transform = transform;\n\n})(jfp);\n\n(function(j){\n    'use strict';\n\n//This is a recursive add fn\n    function adder(recur, current, valueSet){\n        return (valueSet.length === 0) ?\n                current :\n                recur(current + j.first(valueSet), j.rest(valueSet));\n    }\n    \n    function add(a, b){\n        return j.recur(adder, 0, j.slice(0, arguments));\n    }\n    \n    //This is a recursive divide fn\n    function divider(recur, current, valueSet){\n        return (valueSet.length === 0) ?\n                current :\n                recur(current / j.first(valueSet), j.rest(valueSet));\n    }\n    \n    function divide(){\n        var args = j.slice(0, arguments),\n            first = args.length ? j.first(args) : 1;\n        return j.recur(divider, first, j.rest(args));\n    }\n    \n    //This is a recursive multiply fn\n    function multiplier(recur, current, valueSet){\n        return (valueSet.length === 0) ?\n                current :\n                recur(current * j.first(valueSet), j.rest(valueSet));\n    }\n    \n    function multiply(){\n        return j.recur(multiplier, 1, j.slice(0, arguments));\n    }\n    \n    //This is a recursive subtraction fn\n    function subtractor(recur, current, valueSet){\n        return (valueSet.length === 0) ?\n                current :\n                recur(current - j.first(valueSet), j.rest(valueSet));\n    }\n    \n    function subtract(){\n        var args = j.slice(0, arguments),\n            first = args.length ? j.first(args) : 0;\n        return j.recur(subtractor, first, j.rest(args));\n    }\n\n    //This is a recursive constructor function for ranges\n    function rangeRecurCheck(m, n, inc){\n        return inc > 0 ? (m + inc) < n : (m + inc) > n;\n    }\n\n    function rangeBuilder(recur, currentRange, m, n, inc){\n        var finalRange = rangeRecurCheck(m - inc, n, inc) ?\n                            j.conj(m, currentRange) :\n                            currentRange;\n        \n        return rangeRecurCheck(m, n, inc) ?\n                recur(finalRange, m + inc, n, inc) :\n                finalRange;\n    }\n    \n    function range(a, b, inc){\n        var start = j.isUndefined(b) ? 0 : a,\n            end = j.isUndefined(b) ? j.either(0, a) : b,\n            increment = (!inc) ? 1 : inc;\n            \n        return j.recur(rangeBuilder,\n                       [],\n                       j.either(0, start),\n                       j.either(0, end),\n                       increment);\n    }\n\n    function mod(a, b){\n        return j.isUndefined(b) ? j.either(0, a) : a%b;\n    }\n\n    function modulo(a, b){\n        var _a = j.either(0, a),\n            _b = j.either(0, b);\n\n        return (_a > 0) ? mod(_a, _b) : _b * (Math.floor(Math.abs(_a)/_b) + 1) + _a;\n    }\n\n    function truncate(value){\n        return (value > 0) ? Math.floor(value) : Math.floor(value) + 1;\n    }\n    \n    function max(a, b){\n        var maxValue = -Number.MAX_VALUE,\n            _a = j.isUndefined(a) ? maxValue : a,\n            _b = j.isUndefined(b) ? maxValue : b;\n            \n        maxValue = (_a > maxValue) ? _a : maxValue;\n        maxValue = (_b > maxValue) ? _b : maxValue;\n        \n        return maxValue;\n    }\n    \n    function min(a, b){\n        var minValue = Number.MAX_VALUE,\n            _a = j.isUndefined(a) ? minValue : a,\n            _b = j.isUndefined(b) ? minValue : b;\n        \n        minValue = (_a < minValue) ? _a : minValue;\n        minValue = (_b < minValue) ? _b : minValue;\n        \n        return minValue;\n    }\n\n    function fac(value){\n        var factorial = j.compose(j.partial(j.reduce, multiply),\n                                  j.partial(range, 1),\n                                  j.partial(add, 1));\n\n        return j.either(1, j.when(j.greater(value, 0), factorial, value));\n    }\n\n    j.add = add;\n    j.divide = divide;\n    j.fac = fac;\n    j.inc = j.partial(j.add, 1);\n    j.max = max;\n    j.min = min;\n    j.mod = mod;\n    j.modulo = modulo;\n    j.multiply = multiply;\n    j.range = range;\n    j.subtract = subtract;\n    j.truncate = truncate;\n\n})(jfp);\n\n\n(function(j){\n\n    function throwWhenNotComparable(a, b){\n        j.when(j.isUndefined(a) || j.isUndefined(b), function(){\n            throw new TypeError('Inequality comparisons require two values');\n        });\n    }\n\n    function greater(a, b){\n        throwWhenNotComparable(a, b);\n        return a > b;\n    }\n\n    function less(a, b){\n        throwWhenNotComparable(a, b);\n        return a < b;\n    }\n\n    function isInt(value){\n        return j.equal(j.truncate(value), value);\n    }\n\n    function isMultipleOf (base, test) {\n        return j.equal(0, j.mod(test, base));\n    }\n\n    var isNegative = j.partial(greater, 0),\n        isPositive = j.partial(less, 0),\n        isZero = j.partial(j.equal, 0),\n        isEven = j.compose(isZero, j.rpartial(j.mod, 2));\n\n    j.isEven = isEven;\n    j.isInt = isInt;\n    j.isMultipleOf = isMultipleOf;\n    j.isNegative = isNegative;\n    j.isNonNegative = j.compose(j.not, isNegative);\n    j.isNonPositive = j.compose(j.not, isPositive);\n    j.isNonZero = j.compose(j.not, isZero);\n    j.isOdd = j.compose(j.not, isEven);\n    j.isPositive = isPositive;\n    j.isZero = isZero;\n\n    //Special case predicate naming is intended for these functions\n    //There is a general expectation that these not be named with 'is'\n    j.geq = j.compose(j.not, less);\n    j.greater = greater;\n    j.leq = j.compose(j.not, greater);\n    j.less = less;\n\n})(jfp);\n\nvar j = jfp;\n\nif(typeof module !== 'undefined' && Boolean(module.exports)){\n    // Node and CommonJS export\n    module.exports = j;\n} else if (typeof define === 'function' && Boolean(define.amd)) {\n    // AMD and Require.js module definition\n    define([], function () {\n        return jfp;\n    });\n}\n\n\n"]}