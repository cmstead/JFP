{"version":3,"sources":["jfp.js"],"names":["jfp","resolveFunction","functionValue","curryAlias","args","slice","arguments","apply","curry","pickAlias","key","value","cleanKey","Boolean","pick","partial","chooseResolver","resolveToPick","charAt","resolver","j","isUndefined","undefined","not","equal","a","b","missingValues","isType","typeString","getType","isNumeric","pattern","number","numericString","match","isTruthy","typeCheckReduction","result","isPrimitive","primitiveNames","reduce","bind","isTuple","size","list","length","hasFirst","either","isEmptyString","isNull","isArray","isBoolean","isFunction","isNumber","isObject","isString","isPair","isSingle","isTriple","identity","valueType","Object","prototype","toString","call","begin","valueSet","end","values","Array","maybe","type","typeOkay","defaultValue","testValue","shortCircuit","fn","optionValue","userFn","when","checkValue","eitherIf","predicateValue","safePredicate","eitherWhen","sanitizedFn","concat","original","extension","sanitizedExtension","i","push","basePartial","direction","appliedFunction","applicationArgs","splitPartial","baseFn","left","right","leftApplied","reverseArgs","reverse","countArguments","execute","rpartial","toDec","parseInt","copyArray","makeValueArray","conj","dest","cons","source","first","lastIndex","last","drop","index","finalIndex","sanitizedIndex","firstArray","secondArray","dropLast","nth","rest","take","count","naturalComparator","comparison","sort","comparator","finalSet","each","userArray","sanitizedArray","dropFirst","init","valueMap","pickResult","getKeys","obj","keys","mergeValue","dataObj","mergedObj","merge","baseObj","mergeData","finalObj","argumentCount","appliedFn","recursor","recurFn","recursorFn","localRecursor","verifyRecurValue","recurValue","recur","recursingFn","reducer","reduction","collection","appliedReducer","initialState","hasInitialState","initialValue","remainder","compositor","f","g","$f","$g","compositeFn","compose","pipeline","partialReverse","clone","originalValue","depth","depthOkay","geq","copyOkay","copy","container","newDepth","err","RangeError","maybeType","eitherType","mapper","finalArray","map","mapperFn","filterer","userPredicate","filter","predicate","filterFn","compact","valueList","predicateAccumulator","total","sanitizedTotal","numberOf","accumulator","captureUnique","finalList","unique","union","set1","set2","addToHash","finalObject","buildValueHash","captureIntersection","valueHash","intersect","setHash","captureDifference","difference","symmetricDifference","setUnion","setIntersection","everyReducer","every","finder","done","find","someRecur","some","contains","partitioner","partitions","partition","sanitizedPredicate","multiPartitioner","partitionPredicate","computedPartitions","multiPartition","predicateArgs","sanitizedArgs","sanitizedList","firstExists","ander","orer","reduceConditions","conditionArgs","operator","initialCondition","and","or","xor","equivalent","keyReduction","toValues","dereferencer","dataObject","token","trim","internalDeref","baseData","sanitizedDefault","keyTokens","split","deref","sanitizedKey","sanitizedData","plucker","pluckKeys","sanitizedObject","pluck","transformer","transformation","transform","adder","current","add","divider","divide","multiplier","multiply","subtractor","subtract","rangeRecurCheck","m","n","inc","rangeBuilder","currentRange","finalRange","range","start","increment","mod","modulo","_a","_b","Math","floor","abs","truncate","max","maxValue","Number","MAX_VALUE","min","minValue","fac","factorial","greater","throwWhenNotComparable","TypeError","less","isInt","isNegative","isPositive","isZero","isEven","isNonNegative","isNonPositive","isNonZero","isOdd","leq","module","exports"],"mappings":"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","file":"jfp.min.js","sourcesContent":["var jfp = (function(){\n    'use strict';\n    \n    function resolveFunction(functionValue){\n        return typeof functionValue === 'string' ? jfp[functionValue] : functionValue;\n    }\n    \n    function curryAlias(){\n        var args = jfp.slice(0, arguments);\n\n        args[0] = resolveFunction(args[0]);\n        \n        return jfp.apply(jfp.curry, args);\n    }\n    \n    function pickAlias(key, value){\n        var cleanKey = key.slice(1);\n        \n        return Boolean(value) ? jfp.pick(cleanKey, value) : jfp.partial(jfp.pick, cleanKey);\n    }\n    \n    function chooseResolver(value){\n        var resolveToPick = typeof value === 'string' && value.charAt(0) === ':';\n        \n        return resolveToPick ? pickAlias : curryAlias;\n    }\n    \n    return function(){\n        var args = jfp.slice(0, arguments),\n            resolver = chooseResolver(args[0]);\n        \n        return jfp.apply(resolver, args);\n    };\n    \n})();\n\n(function(j){\n    'use strict';\n\n    function isUndefined(value){\n        return value === undefined;\n    }\n    \n    function not(value){\n        return !Boolean(value);\n    }\n    \n    function equal (a, b) {\n        var missingValues = isUndefined(a) || isUndefined(b);\n        return not(missingValues) && a === b;\n    }\n\n    function isType (typeString, value) {\n        return j.equal(j.getType(value), typeString);\n    }\n    \n    function isNumeric(value){\n        var pattern = /^(0x)?[0-9]+((\\.[0-9]+)|(e\\-?[0-9]+))?$/,\n            number = isType('number', value),\n            numericString = isType('string', value) && Boolean(value.match(pattern));\n            \n        return number || numericString;\n    }\n    \n    function isTruthy(value){\n        return Boolean(value);\n    }\n    \n    function typeCheckReduction (value, result, typeString){\n        return result || isType(typeString, value);\n    }\n    \n    function isPrimitive (value) {\n        var primitiveNames = ['number',\n                              'string',\n                              'boolean',\n                              'undefined'];\n\n        return primitiveNames.reduce(typeCheckReduction.bind(null, value), equal(null, value));\n    }\n\n    function isTuple (size, list) {\n        return isType('array', list) && list.length === size;\n    }\n    \n    function hasFirst (list) {\n        return not(isUndefined(j.either([], list, 'array')[0]));\n    }\n\n    // Equality\n    j.equal = equal;\n    j.isEmptyString = equal.bind(null, '');\n    j.isNull = equal.bind(null, null);\n\n    // Types\n    j.isType = isType;\n    j.isArray = isType.bind(null, 'array');\n    j.isBoolean = isType.bind(null, 'boolean');\n    j.isFunction = isType.bind(null, 'function');\n    j.isNumber = isType.bind(null, 'number');\n    j.isObject = isType.bind(null, 'object');\n    j.isString = isType.bind(null, 'string');\n    j.isUndefined = isType.bind(null, 'undefined');\n\n    // Tuples\n    j.isTuple = isTuple;\n    j.isPair = isTuple.bind(null, 2);\n    j.isSingle = isTuple.bind(null, 1);\n    j.isTriple = isTuple.bind(null, 3);\n\n    //Other predicates\n    j.hasFirst = hasFirst;\n    j.isNumeric = isNumeric;\n    j.isPrimitive = isPrimitive;\n    j.isTruthy = isTruthy;\n    j.not = not;\n\n})(jfp);\n\n\n(function(j){\n    'use strict';\n\n    function identity(value){\n        return value;\n    }\n\n    function getType (value) {\n        var valueType = typeof value,\n            isArray = valueType === 'object' && Object.prototype.toString.call(value) === '[object Array]';\n            \n        return isArray ? 'array' : valueType;\n    }\n\n    function slice(begin, valueSet, end){\n        var values = j.not(j.isTruthy(valueSet)) ? [] : valueSet;\n\n        return j.not(j.isTruthy(end)) ?\n                    Array.prototype.slice.call(values, begin) :\n                    Array.prototype.slice.call(values, begin, end);\n    }\n\n    function maybe(value){\n        var type = arguments[1],\n            valueType = getType(value),\n            typeOkay = valueType === type || valueType === 'array' && type === 'object';\n        \n        return typeOkay || (!type && Boolean(value)) ? value : null;\n    }\n\n    function either(defaultValue, testValue){\n        var type = arguments[2];\n        return maybe(testValue, type) === null ? defaultValue : testValue;\n    }\n    \n    function shortCircuit(defaultValue, fn, optionValue){\n        var type = optionValue === 0 ? 'number' : arguments[3];\n        return maybe(optionValue, type) !== null ? fn(optionValue) : defaultValue;\n    }\n\n    function apply(userFn, args){\n        return userFn.apply(null, args);\n    }\n\n    function when(checkValue, userFn){\n        var args = slice(2, arguments);\n        return j.isTruthy(checkValue) ? apply(userFn, args) : null;\n    }\n\n    function eitherIf(defaultValue, testValue, predicateValue){\n        var safePredicate = j.isUndefined(predicateValue) ? true : predicateValue;\n\n        return j.either(defaultValue, j.when(safePredicate, j.partial(j.identity, testValue)));\n    }\n\n    function eitherWhen(defaultValue, predicateValue, userFn){\n        var sanitizedFn = eitherIf(j.identity, userFn, j.isFunction(userFn));\n\n        return j.either(defaultValue, j.when(predicateValue, sanitizedFn));\n    }\n\n    function concat(original, extension){\n        var result = slice(0, either([], original)),\n            sanitizedExtension = either([], extension),\n            i;\n\n        //This is the most performant way to handle concatenation. Trust me.\n        for(i = 0; i < sanitizedExtension.length; i++){\n            result.push(sanitizedExtension[i]);\n        }\n\n        return result;\n    }\n\n    function basePartial(direction, userFn){\n        var args = slice(2, arguments);\n\n        return function appliedFunction(){\n            var applicationArgs = (direction === 'left') ?\n                                    concat(args, slice(0, arguments)) :\n                                    concat(slice(0, arguments), args);\n\n            return apply(userFn, applicationArgs);\n        };\n    }\n\n    function splitPartial (baseFn, left, right) {\n        var leftApplied = apply(basePartial, concat(['left', baseFn], left));\n        return apply(basePartial, concat(['right', leftApplied], right));\n    }\n\n    function reverseArgs(userFn){\n        return function(){\n            var args = j.slice(0, arguments).reverse();\n            return j.apply(userFn, args);\n        };\n    }\n\n    function countArguments(userFn){\n        return either(function(){}, userFn).length;\n    }\n\n    function execute(userFn){\n        return j.apply(userFn, j.slice(1, arguments));\n    }\n    \n    j.apply = apply;\n    j.concat = concat;\n    j.countArguments = countArguments;\n    j.either = either;\n    j.eitherIf = eitherIf;\n    j.eitherWhen = eitherWhen;\n    j.execute = execute;\n    j.getType = getType;\n    j.identity = identity;\n    j.maybe = maybe;\n    j.partial = basePartial('left', basePartial, 'left');\n    j.reverseArgs = reverseArgs;\n    j.rpartial = basePartial('left', basePartial, 'right');\n    j.shortCircuit = shortCircuit;\n    j.slice = slice;\n    j.splitPartial = splitPartial;\n    j.when = when;\n\n})(jfp);\n\n\n(function(j){\n    'use strict';\n\n    function toDec(value){\n        return (j.isNumeric(value)) ? parseInt(value, 10) : null;\n    }\n\n    j.toDec = toDec;\n\n})(jfp);\n\n(function(j){\n    'use strict';\n\n    function copyArray(valueSet){\n        return j.slice(0, valueSet);\n    }\n\n    function makeValueArray(value){\n        return j.not(j.isUndefined(value)) ? [value] : [];\n    }\n\n    function conj(value, dest){\n        return j.concat(copyArray(dest), makeValueArray(value));\n    }\n\n    function cons(value, source){\n        return j.concat(makeValueArray(value), source);\n    }\n\n    function first(values){\n        return j.isArray(values) ? j.either(null, values[0]) : null;\n    }\n\n    function lastIndex(values){\n        return j.isArray(values) ? values.length - 1 : null;\n    }\n\n    function last(values){\n        return j.isArray(values) ? values[lastIndex(values)] : null;\n    }\n\n    function drop(index, valueSet){\n        var finalIndex = lastIndex(valueSet),\n\n            sanitizedIndex = (index === 0 || index === finalIndex) ?\n                index : j.either(1, index) - 1,\n\n            firstArray = (sanitizedIndex === 0) ?\n                [] : j.slice(0, valueSet, sanitizedIndex),\n\n            secondArray = (sanitizedIndex === finalIndex)?\n                [] : j.slice(sanitizedIndex + 1, valueSet);\n\n        return j.concat(firstArray, secondArray);\n    }\n\n    function dropLast(valueSet){\n        return drop(lastIndex(valueSet), valueSet);\n    }\n\n    function nth(index, valueSet){\n        return j.either(null, j.either([], valueSet)[index]);\n    }\n\n    function rest(values){\n        return j.slice(1, values);\n    }\n\n    function take(count, values){\n        return j.isArray(values) ? j.slice(0, values, count) : null;\n    }\n\n    function naturalComparator(a, b){\n        var comparison = a < b ? -1 : 1;\n        return a === b ? 0 : comparison;\n    }\n\n    function sort(optionValue, valueSet){\n        var comparator = j.isFunction(optionValue) ? optionValue : naturalComparator,\n            finalSet = j.isArray(optionValue) ? j.slice(0, optionValue) : j.slice(0, valueSet);\n\n        return finalSet.sort(comparator);\n    }\n\n    function each(userFn, userArray){\n        var sanitizedArray = j.either([], userArray),\n            sanitizedFn = j.either(j.identity, userFn),\n            i;\n\n        for(i = 0; i < sanitizedArray.length; i++){\n            if(sanitizedFn(sanitizedArray[i], i) === false){\n                break;\n            }\n        }\n\n        return sanitizedArray;\n    }\n\n    j.conj = conj;\n    j.cons = cons;\n    j.copyArray = copyArray;\n    j.drop = drop;\n    j.dropFirst = j.partial(drop, 0);\n    j.dropLast = dropLast;\n    j.each = each;\n    j.first = first;\n    j.init = j.dropLast;\n    j.last = last;\n    j.lastIndex = lastIndex;\n    j.nth = nth;\n    j.rest = rest;\n    j.sort = sort;\n    j.take = take;\n\n})(jfp);\n\n\n(function(j){\n    'use strict';\n\n    function pick(key, valueMap){\n        var pickResult = j.either({}, valueMap)[key];\n        return j.isUndefined(pickResult) ? null : pickResult;\n    }\n\n    function getKeys (obj) {\n        return Object.keys(j.either({}, obj, 'object'));\n    }\n\n    function mergeValue (dataObj, mergedObj, key) {\n        mergedObj[key] = dataObj[key];\n        return mergedObj;\n    }\n\n    function merge(baseObj, mergeData){\n        var finalObj = null;\n        \n        if (j.maybe(baseObj) !== null) {\n            finalObj = getKeys(baseObj).reduce(j.partial(mergeValue, baseObj), {});\n            finalObj = getKeys(mergeData).reduce(j.partial(mergeValue, mergeData), finalObj);\n        }\n\n        return finalObj;\n    }\n\n    j.getKeys = getKeys;\n    j.merge = merge;\n    j.pick = pick;\n\n})(jfp);\n\n\n(function(j){\n    'use strict';\n\n    //This is complicated and I don't expect people to grok it on first read.\n    function curry(userFn){\n        var args = j.slice(1, arguments),\n            argumentCount = j.countArguments(userFn),\n            appliedFn = (args.length < argumentCount) ? j.apply(j.partial, j.concat([curry, userFn], args)) : null,\n            result = (Boolean(userFn) && args.length >= argumentCount) ? j.apply(userFn, args) : null;\n\n        return j.either(appliedFn, result);\n    }\n\n    //zOMG! TAIL OPTIMIZED RECURSION\n    function recursor(recurFn){\n        var args = j.slice(1, arguments);\n\n        //This is to make the returned function distinct and identifiable.\n        return function recursorFn(localRecursor){\n            return j.apply(recurFn, j.concat([localRecursor], args));\n        };\n    }\n\n    function verifyRecurValue(recurValue){\n        return typeof recurValue === 'function' &&\n            recurValue.toString().match('recursorFn');\n    }\n\n    //Tail optimization with managed recursion is really complicated.\n    //Please don't muck with this unless you TRULY understand what is happening.\n    function recur(userFn){\n        var recursingFn = j.either(j.identity, userFn, 'function'),\n            localRecursor = j.partial(recursor, recursingFn),\n            recurValue = j.apply(localRecursor, j.slice(1, arguments));\n\n        while(verifyRecurValue(recurValue = recurValue(localRecursor)) && recursingFn !== j.identity);\n\n        return recurValue;\n    }\n\n\t/*\n     * Reduce uses tail-optimized (while-trampolined, fully returning) recursion to resolve reductions.\n     * Reducer is a pure function for handling a single reduction step.\n     * Reduce manages the setup and recursion execution.\n     */\n    function reducer(userFn, recur, reduction, collection){\n        return collection.length === 0 ?\n                    reduction :\n                    recur(userFn(reduction, j.first(collection)),\n                          j.rest(collection));\n    }\n\n    function reduce(userFn, values){\n        var appliedReducer = j.partial(reducer, userFn),\n            initialState = arguments[2],\n            hasInitialState = typeof initialState !== 'undefined',\n            \n            initialValue = !hasInitialState ? j.first(values) : initialState,\n            remainder = !hasInitialState ? j.rest(values) : values;\n\n        return (Boolean(values) && values.length > 0) ? j.recur(appliedReducer, initialValue, remainder) : initialValue;\n    }\n\n    //Produces a function that returns f(g(x))\n    function compositor(f, g){\n        var $f = typeof f !== 'function' ? j.identity : f,\n            $g = typeof g !== 'function' ? j.identity : g;\n            \n        function compositeFn () {\n            return $f(j.apply($g, j.slice(0, arguments)));\n        }\n        \n        return compositeFn;\n    }\n\n    function compose(){\n        return reduce(compositor, j.slice(0, arguments), j.identity);\n    }\n\n    function pipeline(value){\n        return j.apply(compose, j.slice(1, arguments).reverse())(value);\n    }\n\n    function partialReverse(){\n        return j.apply(j.compose(j.reverseArgs, j.partial),\n                       j.slice(0, arguments));\n    }\n\n    function clone (originalValue, depth) {\n        var depthOkay = j.isUndefined(depth) || j.geq(depth, 0),\n            copyOkay = j.isType('object', originalValue) || j.isType('array', originalValue);\n        \n        function copy () {\n            var keys = Object.keys(originalValue),\n                container = j.isArray(originalValue) ? [] : {};\n            \n            j.each(function (key) {\n                var newDepth = j.isNumber(depth) ? depth - 1 : undefined;\n                \n                try {\n                    container[key] = clone(originalValue[key], newDepth);\n                } catch (err) {\n                    throw new RangeError('Object contains circular reference or is too deep to clone.');\n                }\n                \n            }, keys);\n            \n            return container;\n        }\n        \n        return copyOkay && depthOkay ? copy() : originalValue;\n    }\n\n    function maybeType (typeString) {\n        return j.curry(function (value) {\n            return j.maybe(value, typeString);\n        }).apply(j, j.slice(1, arguments));\n    }\n    \n    function eitherType (typeString) {\n        return j.curry(function (defaultValue, optionValue) {\n            return j.either(defaultValue, optionValue, typeString);\n        }).apply(j, j.slice(1, arguments));\n    }\n    \n    j.clone = clone;\n    j.compose = compose;\n    j.curry = curry;\n    j.eitherType = eitherType;\n    j.maybeType = maybeType;\n    j.partialReverse = partialReverse;\n    j.pipeline = pipeline;\n    j.recur = recur;\n    j.reduce = reduce;\n\n})(jfp);\n\n\n(function(j){\n\t\n    /*\n     * Map uses reduce to produce a new, completely reference-decoupled list of values\n     * Mapper handles a single update step for the final output array\n     */\n    function mapper(userFn, finalArray, value){\n        finalArray.push(userFn(value));\n        return finalArray;\n    }\n\n    function map (userFn, values) {\n        var mapperFn = j.partial(mapper, userFn);\n        return j.reduce(mapperFn, values, []);\n    }\n    \n    /*\n     * Filter uses reduce to produce a new, completely reference-decoupled list of values\n     * Filterer handles a single update step for the final output array\n     */\n    function filterer(userPredicate, finalArray, value){\n        return userPredicate(value) ? j.conj(value, finalArray) : finalArray;\n    }\n\n    function filter (predicate, values) {\n        var filterFn = j.partial(filterer, predicate);\n        return j.reduce(filterFn, values, []);\n    }\n    \n    function compact(valueList){\n        return filter(j.isTruthy, valueList);\n    }\n\n    function predicateAccumulator(predicate, total, value){\n        var sanitizedTotal = j.either(0, total, 'number');\n        return predicate(value) ? sanitizedTotal + 1 : sanitizedTotal;\n    }\n\n    function numberOf(predicate, valueSet){\n        var accumulator = j.partial(predicateAccumulator, predicate);\n        return j.reduce(accumulator, j.either([], valueSet), 0);\n    }\n\n    function captureUnique(finalList, value){\n        return j.last(finalList) === value ? finalList : j.conj(value, finalList);\n    }\n    \n    function unique(valueSet){\n        return j.reduce(captureUnique, j.sort(j.slice(0, valueSet)), []);\n    }\n\n    function union(set1, set2){\n        return j.compose(j.unique, j.concat)(set1, set2);\n    }\n\n    function addToHash(finalObject, value){\n        finalObject[value] = true;\n        return finalObject;\n    }\n\n    function buildValueHash(valueList){\n        return j.either({}, j.reduce(addToHash, valueList, {}));\n    }\n\n    function captureIntersection(valueHash, finalList, value){\n        return valueHash[value] ? j.conj(value, finalList) : finalList;\n    }\n    \n    function intersect(set1, set2){\n        var setHash = buildValueHash(j.either([], set2));\n        return j.reduce(j.partial(captureIntersection, setHash), set1, []); \n    }\n\n    function captureDifference(valueHash, finalList, value){\n        return !valueHash[value] ? j.conj(value, finalList) : finalList;\n    }\n    \n    function difference(set1, set2){\n        var setHash = buildValueHash(j.either([], set2));\n        return j.reduce(j.partial(captureDifference, setHash), set1, []);\n    }\n\n    function symmetricDifference(set1, set2){\n        var setUnion = union(set1, set2),\n            setIntersection = intersect(set1, set2);\n\n        return difference(setUnion, setIntersection);\n    }\n\n    function everyReducer (predicate, result, valueList){\n        return result && predicate(valueList);\n    }\n\n    function every (predicate, valueList){\n        var reducer = j.partial(everyReducer, predicate);\n        return Boolean(j.reduce(reducer, valueList, true));\n    }\n\n    function finder (recur, predicate, valueList) {\n        var done = !Boolean(valueList) || valueList.length === 0,\n            result = done ? null : j.first(valueList);\n        \n        return done || predicate(result) ? result : recur(predicate, j.rest(valueList));\n    }\n\n    function find (predicate, valueList){\n        return j.recur(finder, predicate, valueList);\n    }\n\n    function someRecur(recur, predicate, valueList){\n        var done = valueList.length === 0,\n            result = done ? false : predicate(j.first(valueList));\n            \n        return result || done ? result : recur(predicate, j.rest(valueList));\n    }\n\n    function some(predicate, valueList){\n        return Boolean(j.recur(someRecur, predicate, valueList));\n    }\n    \n    function contains(value, valueList){\n        return some(j.partial(j.equal, value), valueList);\n    }\n\n    function partitioner(predicate, partitions, value){\n        var index = predicate(value) ? 0 : 1;\n\n        partitions[index].push(value);\n\n        return partitions;\n    }\n\n    function partition(predicate, list){\n        var sanitizedPredicate = j.either(j.identity, predicate, 'function');\n        \n        return j.reduce(j.partial(partitioner, sanitizedPredicate),\n                        j.either([], list),\n                        [[], []]);\n    }\n\n    function multiPartitioner(predicate, partitions, value){\n        var partitionPredicate = j.rpartial(predicate, value),\n            computedPartitions = j.dropLast(partitions);\n        \n        return j.concat(computedPartitions, partition(partitionPredicate, j.last(partitions)));\n    }\n    \n    function multiPartition(predicate, predicateArgs, list){\n        var sanitizedArgs = j.either([], predicateArgs),\n            sanitizedPredicate = j.either(j.identity, predicate),\n            sanitizedList = j.either([], list);\n            \n        return !Boolean(list) ?\n                [[], []] :\n                j.reduce(j.partial(multiPartitioner, sanitizedPredicate),\n                         sanitizedArgs,\n                         [sanitizedList]);\n    }\n\n    function firstExists (list) {\n        return j.not(j.isNull(j.first(list)));\n    }\n\n    j.contains = contains;\n    j.compact = compact;\n    j.difference = difference;\n    j.every = every;\n\tj.filter = filter;\n    j.find = find;\n    j.firstExists = firstExists;\n    j.intersect = intersect;\n\tj.map = map;\n\tj.multiPartition = multiPartition;\n\tj.numberOf = numberOf;\n    j.partition = partition;\n    j.some = some;\n    j.symmetricDifference = symmetricDifference;\n    j.union = union;\n    j.unique = unique;\n\n})(jfp);\n\n(function (j) {\n\t'use strict';\n\t\n\t//Performs 'and' operation on valueSet\n    function ander(a, b){\n        return a && b;\n    }\n\n    function orer(a, b){\n        return a || b;\n    }\n\n    function reduceConditions(conditionArgs, operator, initialCondition){\n        var args = j.map(Boolean, j.slice(0, conditionArgs));\n        return Boolean(j.reduce(operator, args, initialCondition));\n    }\n\n    function and(a, b){\n        return reduceConditions(arguments, ander, true);\n    }\n\n    function or(a, b){\n        return reduceConditions(arguments, orer, false);\n    }\n\n    function xor(a, b){\n        var equivalent = Boolean(a) === Boolean(b);\n        return or(a, b) && j.not(equivalent);\n    }\n\n\tj.and = and;\n\tj.or = or;\n\tj.xor = xor;\n\n})(jfp);\n\n(function (j) {\n\t'use strict';\n\t\n    /*\n     * toValues converts an object to an array of values\n     * This is necessary for reduce to convert objects into\n     * processible arrays in an upcoming version.\n     */\n\tfunction keyReduction (baseObj, finalList, key) {\n\t\treturn j.conj(baseObj[key], finalList);\n\t}\n\t\n\tfunction toValues (baseObj) {\n\t\tvar reducer = j.partial(keyReduction, baseObj);\n\t\treturn j.isNull(j.maybe(baseObj, 'object')) ? null : j.reduce(reducer, Object.keys(baseObj), []);\n\t}\n\n\tfunction dereferencer(dataObject, token){\n        var key = j.either('', token).trim();\n        return key === '' ? dataObject : j.pick(token, dataObject);\n    }\n\n    function internalDeref(key, baseData, defaultValue){\n        var sanitizedDefault = defaultValue === undefined ? null : defaultValue,\n            keyTokens = key.split('.'),\n            result = j.reduce(dereferencer, keyTokens, baseData);\n        \n        return j.either(sanitizedDefault, result);\n    }\n    \n    function deref(key, baseData, defaultValue){\n        // Satisifes backwards-compatibility case where key an data are reversed\n        var sanitizedKey = typeof key === 'string' ? key : baseData,\n            sanitizedData = typeof baseData === 'object' ? baseData : key;\n        \n        // Fully sanitize data before executing the dereference function\n        sanitizedKey = j.either('', sanitizedKey, 'string');\n        sanitizedData = j.either(null, sanitizedData, 'object');\n        \n        return internalDeref(j.either('', sanitizedKey), sanitizedData, defaultValue);\n    }\n    \n    function plucker (baseObj, finalObj, key){\n        finalObj[key] = baseObj[key];\n        return finalObj;\n    }\n    \n    function pluckKeys (keys, baseObj){\n        var sanitizedObject = j.either({}, baseObj, 'object');\n        return j.reduce(j.partial(plucker, sanitizedObject), keys, {});\n    }\n    \n    function pluck (key, baseObj) {\n        return pluckKeys([key], baseObj);\n    }\n\n    function transformer (obj, result, transformation) {\n        result[transformation[1]] = deref(transformation[0], obj);\n        return result;\n    }\n\n    function transform (transformation, obj) {\n        return j.pipeline(transformation,\n                          j.partial(j.filter, j.isPair),\n                          j.splitPartial(j.reduce, [j.partial(transformer, obj)], [{}]));\n    }\n\n\tj.deref = deref;\n    j.pluck = pluck;\n    j.pluckKeys = pluckKeys;\n    j.toValues = toValues;\n    j.transform = transform;\n\n})(jfp);\n\n(function(j){\n    'use strict';\n\n//This is a recursive add fn\n    function adder(recur, current, valueSet){\n        return (valueSet.length === 0) ?\n                current :\n                recur(current + j.first(valueSet), j.rest(valueSet));\n    }\n    \n    function add(a, b){\n        return j.recur(adder, 0, j.slice(0, arguments));\n    }\n    \n    //This is a recursive divide fn\n    function divider(recur, current, valueSet){\n        return (valueSet.length === 0) ?\n                current :\n                recur(current / j.first(valueSet), j.rest(valueSet));\n    }\n    \n    function divide(){\n        var args = j.slice(0, arguments),\n            first = args.length ? j.first(args) : 1;\n        return j.recur(divider, first, j.rest(args));\n    }\n    \n    //This is a recursive multiply fn\n    function multiplier(recur, current, valueSet){\n        return (valueSet.length === 0) ?\n                current :\n                recur(current * j.first(valueSet), j.rest(valueSet));\n    }\n    \n    function multiply(){\n        return j.recur(multiplier, 1, j.slice(0, arguments));\n    }\n    \n    //This is a recursive subtraction fn\n    function subtractor(recur, current, valueSet){\n        return (valueSet.length === 0) ?\n                current :\n                recur(current - j.first(valueSet), j.rest(valueSet));\n    }\n    \n    function subtract(){\n        var args = j.slice(0, arguments),\n            first = args.length ? j.first(args) : 0;\n        return j.recur(subtractor, first, j.rest(args));\n    }\n\n    //This is a recursive constructor function for ranges\n    function rangeRecurCheck(m, n, inc){\n        return inc > 0 ? (m + inc) < n : (m + inc) > n;\n    }\n\n    function rangeBuilder(recur, currentRange, m, n, inc){\n        var finalRange = rangeRecurCheck(m - inc, n, inc) ?\n                            j.conj(m, currentRange) :\n                            currentRange;\n        \n        return rangeRecurCheck(m, n, inc) ?\n                recur(finalRange, m + inc, n, inc) :\n                finalRange;\n    }\n    \n    function range(a, b, inc){\n        var start = j.isUndefined(b) ? 0 : a,\n            end = j.isUndefined(b) ? j.either(0, a) : b,\n            increment = (!inc) ? 1 : inc;\n            \n        return j.recur(rangeBuilder,\n                       [],\n                       j.either(0, start),\n                       j.either(0, end),\n                       increment);\n    }\n\n    function mod(a, b){\n        return j.isUndefined(b) ? j.either(0, a) : a%b;\n    }\n\n    function modulo(a, b){\n        var _a = j.either(0, a),\n            _b = j.either(0, b);\n\n        return (_a > 0) ? mod(_a, _b) : _b * (Math.floor(Math.abs(_a)/_b) + 1) + _a;\n    }\n\n    function truncate(value){\n        return (value > 0) ? Math.floor(value) : Math.floor(value) + 1;\n    }\n    \n    function max(a, b){\n        var maxValue = -Number.MAX_VALUE,\n            _a = j.isUndefined(a) ? maxValue : a,\n            _b = j.isUndefined(b) ? maxValue : b;\n            \n        maxValue = (_a > maxValue) ? _a : maxValue;\n        maxValue = (_b > maxValue) ? _b : maxValue;\n        \n        return maxValue;\n    }\n    \n    function min(a, b){\n        var minValue = Number.MAX_VALUE,\n            _a = j.isUndefined(a) ? minValue : a,\n            _b = j.isUndefined(b) ? minValue : b;\n        \n        minValue = (_a < minValue) ? _a : minValue;\n        minValue = (_b < minValue) ? _b : minValue;\n        \n        return minValue;\n    }\n\n    function fac(value){\n        var factorial = j.compose(j.partial(j.reduce, multiply),\n                                  j.partial(range, 1),\n                                  j.partial(add, 1));\n\n        return j.either(1, j.when(j.greater(value, 0), factorial, value));\n    }\n\n    j.add = add;\n    j.divide = divide;\n    j.fac = fac;\n    j.inc = j.partial(j.add, 1);\n    j.max = max;\n    j.min = min;\n    j.mod = mod;\n    j.modulo = modulo;\n    j.multiply = multiply;\n    j.range = range;\n    j.subtract = subtract;\n    j.truncate = truncate;\n\n})(jfp);\n\n\n(function(j){\n\n    function throwWhenNotComparable(a, b){\n        j.when(j.isUndefined(a) || j.isUndefined(b), function(){\n            throw new TypeError('Inequality comparisons require two values');\n        });\n    }\n\n    function greater(a, b){\n        throwWhenNotComparable(a, b);\n        return a > b;\n    }\n\n    function less(a, b){\n        throwWhenNotComparable(a, b);\n        return a < b;\n    }\n\n    function isInt(value){\n        return j.equal(j.truncate(value), value);\n    }\n\n    var isNegative = j.partial(greater, 0),\n        isPositive = j.partial(less, 0),\n        isZero = j.partial(j.equal, 0),\n        isEven = j.compose(isZero, j.rpartial(j.mod, 2));\n\n    j.isEven = isEven;\n    j.isInt = isInt;\n    j.isNegative = isNegative;\n    j.isNonNegative = j.compose(j.not, isNegative);\n    j.isNonPositive = j.compose(j.not, isPositive);\n    j.isNonZero = j.compose(j.not, isZero);\n    j.isOdd = j.compose(j.not, isEven);\n    j.isPositive = isPositive;\n    j.isZero = isZero;\n\n    //Special case predicate naming is intended for these functions\n    //There is a general expectation that these not be named with 'is'\n    j.geq = j.compose(j.not, less);\n    j.greater = greater;\n    j.leq = j.compose(j.not, greater);\n    j.less = less;\n\n})(jfp);\n\nvar j = jfp;\n\nif(typeof module !== 'undefined' && Boolean(module.exports)){\n    module.exports = j;\n}\n\n\n"]}