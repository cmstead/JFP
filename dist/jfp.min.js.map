{"version":3,"file":"jfp.min.js","sources":["jfp.js"],"names":["jfp","resolveFunction","functionValue","curryAlias","args","slice","arguments","apply","curry","pickAlias","key","value","cleanKey","Boolean","pick","partial","chooseResolver","resolveToPick","charAt","resolver","j","isBoolean","isFunction","testFn","isObject","isArray","Object","prototype","toString","call","isString","isEmptyString","isNull","isNumber","isNumeric","pattern","match","isTruthy","isUndefined","undefined","not","identity","begin","valueSet","end","values","Array","shortCircuit","defaultValue","userFn","testValue","maybe","type","typeOkay","either","when","checkValue","eitherIf","predicateValue","safePredicate","eitherWhen","sanitizedFn","concat","original","extension","result","sanitizedExtension","i","length","push","basePartial","direction","appliedFunction","applicationArgs","reverseArgs","reverse","countArguments","execute","rpartial","toDec","parseInt","copyArray","makeValueArray","conj","dest","cons","source","first","lastIndex","last","drop","index","finalIndex","sanitizedIndex","firstArray","secondArray","dropLast","nth","rest","take","count","naturalComparator","a","b","comparison","sort","optionValue","comparator","finalSet","each","userArray","sanitizedArray","dropFirst","init","valueMap","pickResult","merge","defaultObj","mergeData","finalObj","argumentCount","appliedFn","recursor","recurFn","recursorFn","localRecursor","verifyRecurValue","recurValue","recur","recursingFn","valueReducer","baseObj","finalList","keyList","toValues","baseIsValid","keys","reducer","reduction","collection","finished","newReduction","reduce","initialState","appliedReducer","initialValue","remainder","compositor","f","g","compose","pipeline","partialReverse","map","filter","arrayReduceAdapter","reducerFn","valueList","mapper","finalArray","filterer","userPredicate","compact","predicateAccumulator","predicate","total","sanitizedTotal","numberOf","accumulator","captureUnique","unique","union","set1","set2","addToHash","finalObject","buildValueHash","captureIntersection","valueHash","intersect","setHash","captureDifference","difference","symmetricDifference","setUnion","setIntersection","everyReducer","every","finder","done","find","someRecur","some","contains","equal","partitioner","partitions","partition","list","sanitizedPredicate","multiPartitioner","partitionPredicate","computedPartitions","multiPartition","predicateArgs","sanitizedArgs","sanitizedList","ander","orer","reduceConditions","conditionArgs","operator","initialCondition","and","or","xor","equivalent","dereferencer","dataObject","token","trim","deref","baseData","sanitizedDefault","keyTokens","split","plucker","pluckKeys","sanitizedObject","pluck","adder","current","add","divider","divide","multiplier","multiply","subtractor","subtract","rangeRecurCheck","m","n","inc","rangeBuilder","currentRange","finalRange","range","start","increment","mod","modulo","_a","_b","Math","floor","abs","truncate","max","maxValue","Number","MAX_VALUE","min","minValue","fac","factorial","greater","throwWhenNotComparable","TypeError","isNotUndefined","less","isEven","isPositive","isZero","isNegative","isInt","isNonNegative","isNonPositive","isNonZero","isOdd","geq","leq","module","exports"],"mappings":"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","sourcesContent":["var jfp = (function(){\n    'use strict';\n    \n    function resolveFunction(functionValue){\n        return typeof functionValue === 'string' ? jfp[functionValue] : functionValue;\n    }\n    \n    function curryAlias(){\n        var args = jfp.slice(0, arguments);\n\n        args[0] = resolveFunction(args[0]);\n        \n        return jfp.apply(jfp.curry, args);\n    }\n    \n    function pickAlias(key, value){\n        var cleanKey = key.slice(1);\n        \n        return Boolean(value) ? jfp.pick(cleanKey, value) : jfp.partial(jfp.pick, cleanKey);\n    }\n    \n    function chooseResolver(value){\n        var resolveToPick = typeof value === 'string' && value.charAt(0) === ':';\n        \n        return resolveToPick ? pickAlias : curryAlias;\n    }\n    \n    return function(){\n        var args = jfp.slice(0, arguments),\n            resolver = chooseResolver(args[0]);\n        \n        return jfp.apply(resolver, args);\n    };\n    \n})();\n\n(function(j){\n    'use strict';\n    \n    function isBoolean(value){\n        return typeof value === 'boolean';\n    }\n\n    function isFunction(testFn){\n        return typeof testFn === 'function';\n    }\n    \n    function isObject(value){\n        return (typeof value == 'object');\n    }\n    \n    function isArray(value){\n        return (isObject(value) && Object.prototype.toString.call(value) === '[object Array]');\n    }\n    \n    function isString(value){\n        return typeof value === 'string';\n    }\n\n    function isEmptyString(value){\n        return isString(value) && value === '';\n    }\n    \n    function isNull(value){\n        return value === null;\n    }\n    \n    function isNumber(value){\n        return typeof value === 'number';\n    }\n    \n    function isNumeric(value){\n        var pattern = /^(0x)?[0-9]+((\\.[0-9]+)|(e\\-?[0-9]+))?$/;\n        return isNumber(value) || (isString(value) && !!value.match(pattern));\n    }\n    \n    function isTruthy(value){\n        return !!value;\n    }\n    \n    function isUndefined(value){\n        return value === undefined;\n    }\n\n    function not(value){\n        return !value;\n    }\n\n    j.isArray = isArray;\n    j.isBoolean = isBoolean;\n    j.isEmptyString = isEmptyString;\n    j.isFunction = isFunction;\n    j.isNull = isNull;\n    j.isNumber = isNumber;\n    j.isNumeric = isNumeric;\n    j.isObject = isObject;\n    j.isString = isString;\n    j.isTruthy = isTruthy;\n    j.isUndefined = isUndefined;\n    j.not = not;\n\n})(jfp);\n\n\n(function(j){\n    'use strict';\n\n    function identity(value){\n        return value;\n    }\n\n    function slice(begin, valueSet, end){\n        var values = j.not(j.isTruthy(valueSet)) ? [] : valueSet;\n\n        return j.not(j.isTruthy(end)) ?\n                    Array.prototype.slice.call(values, begin) :\n                    Array.prototype.slice.call(values, begin, end);\n    }\n\n    function shortCircuit(defaultValue, userFn, testValue){\n        return (j.isTruthy(testValue) || testValue === 0) ?\n            userFn(testValue) :\n            defaultValue;\n    }\n\n    function maybe(value){\n        var type = arguments[1],\n            typeOkay = typeof value === type;\n\n        return typeOkay || (!type && !!value) ? value : null;\n    }\n\n    function either(defaultValue, testValue){\n        var type = arguments[2];\n        return maybe(testValue, type) === null ? defaultValue : testValue;\n    }\n\n    function apply(userFn, args){\n        return userFn.apply(null, args);\n    }\n\n    function when(checkValue, userFn){\n        var args = slice(2, arguments);\n        return j.isTruthy(checkValue) ? apply(userFn, args) : null;\n    }\n\n    function eitherIf(defaultValue, testValue, predicateValue){\n        var safePredicate = j.isUndefined(predicateValue) ? true : predicateValue;\n\n        return j.either(defaultValue, j.when(safePredicate, j.partial(j.identity, testValue)));\n    }\n\n    function eitherWhen(defaultValue, predicateValue, userFn){\n        var sanitizedFn = eitherIf(j.identity, userFn, j.isFunction(userFn));\n\n        return j.either(defaultValue, j.when(predicateValue, sanitizedFn));\n    }\n\n    function concat(original, extension){\n        var result = slice(0, either([], original)),\n            sanitizedExtension = either([], extension),\n            i;\n\n        //This is the most performant way to handle concatenation. Trust me.\n        for(i = 0; i < sanitizedExtension.length; i++){\n            result.push(sanitizedExtension[i]);\n        }\n\n        return result;\n    }\n\n    function basePartial(direction, userFn){\n        var args = slice(2, arguments);\n\n        return function appliedFunction(){\n            var applicationArgs = (direction === 'left') ?\n                                    concat(args, slice(0, arguments)) :\n                                    concat(slice(0, arguments), args);\n\n            return apply(userFn, applicationArgs);\n        };\n    }\n\n    function reverseArgs(userFn){\n        return function(){\n            var args = j.slice(0, arguments).reverse();\n            return j.apply(userFn, args);\n        };\n    }\n\n    function countArguments(userFn){\n        return either(function(){}, userFn).length;\n    }\n\n    function execute(userFn){\n        return j.apply(userFn, j.slice(1, arguments));\n    }\n\n    j.apply = apply;\n    j.concat = concat;\n    j.countArguments = countArguments;\n    j.either = either;\n    j.eitherIf = eitherIf;\n    j.eitherWhen = eitherWhen;\n    j.execute = execute;\n    j.identity = identity;\n    j.maybe = maybe;\n    j.partial = basePartial('left', basePartial, 'left');\n    j.reverseArgs = reverseArgs;\n    j.rpartial = basePartial('left', basePartial, 'right');\n    j.shortCircuit = shortCircuit;\n    j.slice = slice;\n    j.when = when;\n\n})(jfp);\n\n\n(function(j){\n    'use strict';\n\n    function toDec(value){\n        return (j.isNumeric(value)) ? parseInt(value, 10) : null;\n    }\n\n    j.toDec = toDec;\n\n})(jfp);\n\n(function(j){\n    'use strict';\n\n    function copyArray(valueSet){\n        return j.slice(0, valueSet);\n    }\n\n    function makeValueArray(value){\n        return j.not(j.isUndefined(value)) ? [value] : [];\n    }\n\n    function conj(value, dest){\n        return j.concat(copyArray(dest), makeValueArray(value));\n    }\n\n    function cons(value, source){\n        return j.concat(makeValueArray(value), source);\n    }\n\n    function first(values){\n        return j.isArray(values) ? j.either(null, values[0]) : null;\n    }\n\n    function lastIndex(values){\n        return j.isArray(values) ? values.length - 1 : null;\n    }\n\n    function last(values){\n        return j.isArray(values) ? values[lastIndex(values)] : null;\n    }\n\n    function drop(index, valueSet){\n        var finalIndex = lastIndex(valueSet),\n\n            sanitizedIndex = (index === 0 || index === finalIndex) ?\n                index : j.either(1, index) - 1,\n\n            firstArray = (sanitizedIndex === 0) ?\n                [] : j.slice(0, valueSet, sanitizedIndex),\n\n            secondArray = (sanitizedIndex === finalIndex)?\n                [] : j.slice(sanitizedIndex + 1, valueSet);\n\n        return j.concat(firstArray, secondArray);\n    }\n\n    function dropLast(valueSet){\n        return drop(lastIndex(valueSet), valueSet);\n    }\n\n    function nth(index, valueSet){\n        return j.either(null, j.either([], valueSet)[index]);\n    }\n\n    function rest(values){\n        return j.slice(1, values);\n    }\n\n    function take(count, values){\n        return j.isArray(values) ? j.slice(0, values, count) : null;\n    }\n\n    function naturalComparator(a, b){\n        var comparison = a < b ? -1 : 1;\n        return a === b ? 0 : comparison;\n    }\n\n    function sort(optionValue, valueSet){\n        var comparator = j.isFunction(optionValue) ? optionValue : naturalComparator,\n            finalSet = j.isArray(optionValue) ? j.slice(0, optionValue) : j.slice(0, valueSet);\n\n        return finalSet.sort(comparator);\n    }\n\n    function each(userFn, userArray){\n        var sanitizedArray = j.either([], userArray),\n            sanitizedFn = j.either(j.identity, userFn),\n            i;\n\n        for(i = 0; i < sanitizedArray.length; i++){\n            if(sanitizedFn(sanitizedArray[i], i) === false){\n                break;\n            }\n        }\n\n        return sanitizedArray;\n    }\n\n    j.conj = conj;\n    j.cons = cons;\n    j.copyArray = copyArray;\n    j.drop = drop;\n    j.dropFirst = j.partial(drop, 0);\n    j.dropLast = dropLast;\n    j.each = each;\n    j.first = first;\n    j.init = j.dropLast;\n    j.last = last;\n    j.lastIndex = lastIndex;\n    j.nth = nth;\n    j.rest = rest;\n    j.sort = sort;\n    j.take = take;\n\n})(jfp);\n\n\n(function(j){\n    'use strict';\n\n    function pick(key, valueMap){\n        var pickResult = j.either({}, valueMap)[key];\n        return j.isUndefined(pickResult) ? null : pickResult;\n    }\n\n    function merge(defaultObj, mergeData){\n        var finalObj = {},\n            key;\n\n        for(key in j.either({}, defaultObj)){\n            finalObj[key] = defaultObj[key];\n        }\n\n        for(key in j.either({}, mergeData)){\n            finalObj[key] = mergeData[key];\n        }\n\n        return j.eitherIf(null, finalObj, j.isTruthy(defaultObj));\n    }\n\n    j.merge = merge;\n    j.pick = pick;\n\n})(jfp);\n\n\n(function(j){\n    'use strict';\n\n    //This is complicated and I don't expect people to grok it on first read.\n    function curry(userFn){\n        var args = j.slice(1, arguments),\n            argumentCount = j.countArguments(userFn),\n            appliedFn = (args.length < argumentCount) ? j.apply(j.partial, j.concat([curry, userFn], args)) : null,\n            result = (!!userFn && args.length >= argumentCount) ? j.apply(userFn, args) : null;\n\n        return j.either(appliedFn, result);\n    }\n\n    //zOMG! TAIL RECURSION\n    function recursor(recurFn){\n        var args = j.slice(1, arguments);\n\n        //This is to make the returned function distinct and identifiable.\n        return function recursorFn(localRecursor){\n            return j.apply(recurFn, j.concat([localRecursor], args));\n        };\n    }\n\n    function verifyRecurValue(recurValue){\n        return typeof recurValue === 'function' &&\n            recurValue.toString().match('recursorFn');\n    }\n\n    //Tail optimization with managed recursion is really complicated.\n    //Please don't muck with this unless you TRULY understand what is happening.\n    function recur(userFn){\n        var recursingFn = j.either(j.identity, userFn),\n            localRecursor = j.partial(recursor, recursingFn),\n            recurValue = j.apply(localRecursor, j.slice(1, arguments));\n\n        while(verifyRecurValue(recurValue = recurValue(localRecursor)) && recursingFn !== j.identity);\n\n        return recurValue;\n    }\n\n    /*\n     * toValues converts an object to an array of values\n     * This is necessary for reduce to convert objects into\n     * processible arrays in an upcoming version.\n     */\n    function valueReducer (recur, baseObj, finalList, keyList) {\n        finalList.push(baseObj[j.first(keyList)]);\n        return keyList.length === 1 ? finalList : recur(baseObj, finalList, j.rest(keyList));\n    }\n    \n    function toValues (baseObj) {\n        var baseIsValid = typeof baseObj === 'object';\n        return !baseIsValid ? null : j.recur(valueReducer, baseObj, [], Object.keys(baseObj));\n    }\n    \n\t/*\n     * Reduce uses tail-optimized (while-trampolined, fully returning) recursion to resolve reductions.\n     * Reducer is a pure function for handling a single reduction step.\n     * Reduce manages the setup and recursion execution.\n     */\n    function reducer(userFn, recur, reduction, collection){\n        var finished = collection.length === 0,\n            newReduction = finished ? reduction : userFn(reduction, j.first(collection));\n            \n        return finished ? reduction : recur(newReduction, j.rest(collection));\n    }\n\n    function reduce(userFn, values, initialState){\n        var appliedReducer = j.partial(reducer, userFn),\n            initialValue = j.isUndefined(initialState) ? j.first(values) : initialState,\n            remainder = j.isUndefined(initialState) ? j.rest(values) : values;\n            \n        return (!!values && values.length > 0) ? j.recur(appliedReducer, initialValue, remainder) : initialValue;\n    }\n\n    //Produces a function that returns f(g(x))\n    function compositor(f, g){\n        return function(){\n            return f(j.apply(g, j.slice(0, arguments)));\n        };\n    }\n\n    function compose(){\n        return reduce(compositor, j.slice(0, arguments), j.identity);\n    }\n\n    function pipeline(value){\n        return j.apply(compose, j.slice(1, arguments).reverse())(value);\n    }\n\n    function partialReverse(){\n        return j.apply(j.compose(j.reverseArgs, j.partial),\n                       j.slice(0, arguments));\n    }\n\n    j.compose = compose;\n    j.curry = curry;\n    j.partialReverse = partialReverse;\n    j.pipeline = pipeline;\n    j.recur = recur;\n    j.reduce = reduce;\n    j.toValues = toValues;\n\n})(jfp);\n\n\n(function(j){\n\t\n    var map, filter;\n    \n    // Adapter function for reduce to allow for simplification of\n    // array construction behaviors like map and filter\n    function arrayReduceAdapter(reducerFn, userFn, valueList){\n        var appliedReducer = j.partial(reducerFn, userFn),\n            result = j.reduce(appliedReducer, valueList, []);\n        \n        return j.either([], result);\n    }\n\n    /*\n     * Map uses reduce to produce a new, completely reference-decoupled list of values\n     * Mapper handles a single update step for the final output array\n     */\n    function mapper(userFn, finalArray, value){\n        finalArray.push(userFn(value));\n        return finalArray;\n    }\n\n    map = j.partial(arrayReduceAdapter, mapper);\n\n    /*\n     * Filter uses reduce to produce a new, completely reference-decoupled list of values\n     * Filterer handles a single update step for the final output array\n     */\n    function filterer(userPredicate, finalArray, value){\n        return userPredicate(value) ? j.conj(value, finalArray) : finalArray;\n    }\n\n    filter = j.partial(arrayReduceAdapter, filterer);\n    \n    function compact(valueList){\n        return filter(j.isTruthy, valueList);\n    }\n\n    function predicateAccumulator(predicate, total, value){\n        var sanitizedTotal = j.either(0, total, 'number');\n        return predicate(value) ? sanitizedTotal + 1 : sanitizedTotal;\n    }\n\n    function numberOf(predicate, valueSet){\n        var accumulator = j.partial(predicateAccumulator, predicate);\n        return j.reduce(accumulator, j.either([], valueSet), 0);\n    }\n\n    function captureUnique(finalList, value){\n        return j.last(finalList) === value ? finalList : j.conj(value, finalList);\n    }\n    \n    function unique(valueSet){\n        return j.reduce(captureUnique, j.sort(j.slice(0, valueSet)), []);\n    }\n\n    function union(set1, set2){\n        return j.compose(j.unique, j.concat)(set1, set2);\n    }\n\n    function addToHash(finalObject, value){\n        finalObject[value] = true;\n        return finalObject;\n    }\n\n    function buildValueHash(valueList){\n        return j.either({}, j.reduce(addToHash, valueList, {}));\n    }\n\n    function captureIntersection(valueHash, finalList, value){\n        return valueHash[value] ? j.conj(value, finalList) : finalList;\n    }\n    \n    function intersect(set1, set2){\n        var setHash = buildValueHash(j.either([], set2));\n        return j.reduce(j.partial(captureIntersection, setHash), set1, []); \n    }\n\n    function captureDifference(valueHash, finalList, value){\n        return !valueHash[value] ? j.conj(value, finalList) : finalList;\n    }\n    \n    function difference(set1, set2){\n        var setHash = buildValueHash(j.either([], set2));\n        return j.reduce(j.partial(captureDifference, setHash), set1, []);\n    }\n\n    function symmetricDifference(set1, set2){\n        var setUnion = union(set1, set2),\n            setIntersection = intersect(set1, set2);\n\n        return difference(setUnion, setIntersection);\n    }\n\n    function everyReducer (predicate, result, valueList){\n        return result && predicate(valueList);\n    }\n\n    function every (predicate, valueList){\n        var reducer = j.partial(everyReducer, predicate);\n        return Boolean(j.reduce(reducer, valueList, true));\n    }\n\n    function finder (recur, predicate, valueList) {\n        var done = !Boolean(valueList) || valueList.length === 0,\n            result = done ? null : j.first(valueList);\n        \n        return done || predicate(result) ? result : recur(predicate, j.rest(valueList));\n    }\n\n    function find (predicate, valueList){\n        return j.recur(finder, predicate, valueList);\n    }\n\n    function someRecur(recur, predicate, valueList){\n        var done = valueList.length === 0,\n            result = done ? false : predicate(j.first(valueList));\n            \n        return result || done ? result : recur(predicate, j.rest(valueList));\n    }\n\n    function some(predicate, valueList){\n        return Boolean(j.recur(someRecur, predicate, valueList));\n    }\n    \n    function contains(value, valueList){\n        return some(j.partial(j.equal, value), valueList);\n    }\n\n    function partitioner(predicate, partitions, value){\n        var index = predicate(value) ? 0 : 1;\n\n        partitions[index].push(value);\n\n        return partitions;\n    }\n\n    function partition(predicate, list){\n        var sanitizedPredicate = j.either(j.identity, predicate, 'function');\n        \n        return j.reduce(j.partial(partitioner, sanitizedPredicate),\n                        j.either([], list),\n                        [[], []]);\n    }\n\n    function multiPartitioner(predicate, partitions, value){\n        var partitionPredicate = j.rpartial(predicate, value),\n            computedPartitions = j.dropLast(partitions);\n        \n        return j.concat(computedPartitions, partition(partitionPredicate, j.last(partitions)));\n    }\n    \n    function multiPartition(predicate, predicateArgs, list){\n        var sanitizedArgs = j.either([], predicateArgs),\n            sanitizedPredicate = j.either(j.identity, predicate),\n            sanitizedList = j.either([], list);\n            \n        return !Boolean(list) ?\n                [[], []] :\n                j.reduce(j.partial(multiPartitioner, sanitizedPredicate),\n                         sanitizedArgs,\n                         [sanitizedList]);\n    }\n\n    j.contains = contains;\n    j.compact = compact;\n    j.difference = difference;\n    j.every = every;\n\tj.filter = filter;\n    j.find = find;\n    j.intersect = intersect;\n\tj.map = map;\n\tj.multiPartition = multiPartition;\n\tj.numberOf = numberOf;\n    j.partition = partition;\n    j.some = some;\n    j.symmetricDifference = symmetricDifference;\n    j.union = union;\n    j.unique = unique;\n\n})(jfp);\n\n(function (j) {\n\t'use strict';\n\t\n\t//Performs 'and' operation on valueSet\n    function ander(a, b){\n        return a && b;\n    }\n\n    function orer(a, b){\n        return a || b;\n    }\n\n    function reduceConditions(conditionArgs, operator, initialCondition){\n        var args = j.map(Boolean, j.slice(0, conditionArgs));\n        return Boolean(j.reduce(operator, args, initialCondition));\n    }\n\n    function and(a, b){\n        return reduceConditions(arguments, ander, true);\n    }\n\n    function or(a, b){\n        return reduceConditions(arguments, orer, false);\n    }\n\n    function xor(a, b){\n        var equivalent = Boolean(a) === Boolean(b);\n        return or(a, b) && j.not(equivalent);\n    }\n\n\tj.and = and;\n\tj.or = or;\n\tj.xor = xor;\n\n})(jfp);\n\n(function (j) {\n\t'use strict';\n\t\n\tfunction dereferencer(dataObject, token){\n        var key = j.either('', token).trim();\n        return key === '' ? dataObject : j.pick(token, dataObject);\n    }\n\n    function deref(baseData, key, defaultValue){\n        var sanitizedDefault = defaultValue === undefined ? null : defaultValue,\n            keyTokens = j.either('', key, 'string').split('.'),\n            result = j.reduce(dereferencer, keyTokens, j.either(null, baseData, 'object'));\n        \n        return j.either(sanitizedDefault, result);\n    }\n    \n    function plucker (baseObj, finalObj, key){\n        finalObj[key] = baseObj[key];\n        return finalObj;\n    }\n    \n    function pluckKeys (keys, baseObj){\n        var sanitizedObject = j.either({}, baseObj, 'object');\n        return j.reduce(j.partial(plucker, sanitizedObject), keys, {});\n    }\n    \n    function pluck (key, baseObj) {\n        return pluckKeys([key], baseObj);\n    }\n\n\tj.deref = deref;\n    j.pluck = pluck;\n    j.pluckKeys = pluckKeys;\n\n})(jfp);\n\n(function(j){\n    'use strict';\n\n//This is a recursive add fn\n    function adder(recur, current, valueSet){\n        return (valueSet.length === 0) ?\n                current :\n                recur(current + j.first(valueSet), j.rest(valueSet));\n    }\n    \n    function add(a, b){\n        return j.recur(adder, 0, j.slice(0, arguments));\n    }\n    \n    //This is a recursive divide fn\n    function divider(recur, current, valueSet){\n        return (valueSet.length === 0) ?\n                current :\n                recur(current / j.first(valueSet), j.rest(valueSet));\n    }\n    \n    function divide(){\n        var args = j.slice(0, arguments),\n            first = args.length ? j.first(args) : 1;\n        return j.recur(divider, first, j.rest(args));\n    }\n    \n    //This is a recursive multiply fn\n    function multiplier(recur, current, valueSet){\n        return (valueSet.length === 0) ?\n                current :\n                recur(current * j.first(valueSet), j.rest(valueSet));\n    }\n    \n    function multiply(){\n        return j.recur(multiplier, 1, j.slice(0, arguments));\n    }\n    \n    //This is a recursive subtraction fn\n    function subtractor(recur, current, valueSet){\n        return (valueSet.length === 0) ?\n                current :\n                recur(current - j.first(valueSet), j.rest(valueSet));\n    }\n    \n    function subtract(){\n        var args = j.slice(0, arguments),\n            first = args.length ? j.first(args) : 0;\n        return j.recur(subtractor, first, j.rest(args));\n    }\n\n    //This is a recursive constructor function for ranges\n    function rangeRecurCheck(m, n, inc){\n        return inc > 0 ? (m + inc) < n : (m + inc) > n;\n    }\n\n    function rangeBuilder(recur, currentRange, m, n, inc){\n        var finalRange = rangeRecurCheck(m - inc, n, inc) ?\n                            j.conj(m, currentRange) :\n                            currentRange;\n        \n        return rangeRecurCheck(m, n, inc) ?\n                recur(finalRange, m + inc, n, inc) :\n                finalRange;\n    }\n    \n    function range(a, b, inc){\n        var start = j.isUndefined(b) ? 0 : a,\n            end = j.isUndefined(b) ? j.either(0, a) : b,\n            increment = (!inc) ? 1 : inc;\n            \n        return j.recur(rangeBuilder,\n                       [],\n                       j.either(0, start),\n                       j.either(0, end),\n                       increment);\n    }\n\n    function mod(a, b){\n        return j.isUndefined(b) ? j.either(0, a) : a%b;\n    }\n\n    function modulo(a, b){\n        var _a = j.either(0, a),\n            _b = j.either(0, b);\n\n        return (_a > 0) ? mod(_a, _b) : _b * (Math.floor(Math.abs(_a)/_b) + 1) + _a;\n    }\n\n    function truncate(value){\n        return (value > 0) ? Math.floor(value) : Math.floor(value) + 1;\n    }\n    \n    function max(a, b){\n        var maxValue = -Number.MAX_VALUE,\n            _a = j.isUndefined(a) ? maxValue : a,\n            _b = j.isUndefined(b) ? maxValue : b;\n            \n        maxValue = (_a > maxValue) ? _a : maxValue;\n        maxValue = (_b > maxValue) ? _b : maxValue;\n        \n        return maxValue;\n    }\n    \n    function min(a, b){\n        var minValue = Number.MAX_VALUE,\n            _a = j.isUndefined(a) ? minValue : a,\n            _b = j.isUndefined(b) ? minValue : b;\n        \n        minValue = (_a < minValue) ? _a : minValue;\n        minValue = (_b < minValue) ? _b : minValue;\n        \n        return minValue;\n    }\n\n    function fac(value){\n        var factorial = j.compose(j.partial(j.reduce, multiply),\n                                  j.partial(range, 1),\n                                  j.partial(add, 1));\n\n        return j.either(1, j.when(j.greater(value, 0), factorial, value));\n    }\n\n    j.add = add;\n    j.divide = divide;\n    j.fac = fac;\n    j.inc = j.partial(j.add, 1);\n    j.max = max;\n    j.min = min;\n    j.mod = mod;\n    j.modulo = modulo;\n    j.multiply = multiply;\n    j.range = range;\n    j.subtract = subtract;\n    j.truncate = truncate;\n\n})(jfp);\n\n\n(function(j){\n\n    function throwWhenNotComparable(a, b){\n        j.when(j.isUndefined(a) || j.isUndefined(b), function(){\n            throw new TypeError('Inequality comparisons require two values');\n        });\n    }\n\n    function equal(a, b){\n        var isNotUndefined = j.compose(j.not, j.isUndefined);\n        return (isNotUndefined(a) && isNotUndefined(b)) ? a === b : false;\n    }\n\n    function greater(a, b){\n        throwWhenNotComparable(a, b);\n        return a > b;\n    }\n\n    function less(a, b){\n        throwWhenNotComparable(a, b);\n        return a < b;\n    }\n\n    function isEven(value){\n        return equal(0, j.mod(value, 2));\n    }\n\n    function isPositive(value){\n        return greater(value, 0);\n    }\n\n    function isZero(value){\n        return value === 0;\n    }\n\n    function isNegative(value){\n        return j.compose(j.not, j.or)(isPositive(value), isZero(value));\n    }\n\n    function isInt(value){\n        return equal(j.truncate(value), value);\n    }\n\n    j.isEven = isEven;\n    j.isInt = isInt;\n    j.isNegative = isNegative;\n    j.isNonNegative = j.compose(j.not, isNegative);\n    j.isNonPositive = j.compose(j.not, isPositive);\n    j.isNonZero = j.compose(j.not, isZero);\n    j.isOdd = j.compose(j.not, isEven);\n    j.isPositive = isPositive;\n    j.isZero = isZero;\n\n    //Special case predicate naming is intended for these functions\n    //There is a general expectation that these not be named with 'is'\n    j.equal = equal;\n    j.geq = j.compose(j.not, less);\n    j.greater = greater;\n    j.leq = j.compose(j.not, greater);\n    j.less = less;\n\n})(jfp);\n\nvar j = jfp;\n\nif(typeof module !== 'undefined' && !!module.exports){\n    module.exports = j;\n}\n\n\n"]}