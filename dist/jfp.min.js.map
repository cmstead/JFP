{"version":3,"sources":["jfp.js"],"names":["jfp","resolveFunction","functionValue","curryAlias","args","slice","arguments","apply","curry","pickAlias","key","value","cleanKey","Boolean","pick","partial","chooseResolver","resolveToPick","charAt","resolver","j","isUndefined","undefined","not","equal","a","b","missingValues","isType","typeString","getType","isNumeric","pattern","number","numericString","match","isTruthy","typeCheckReduction","result","isPrimitive","primitiveNames","reduce","bind","isTuple","size","list","length","hasFirst","either","isEmptyString","isNull","isArray","isBoolean","isFunction","isNumber","isObject","isString","isPair","isSingle","isTriple","identity","valueType","Object","prototype","toString","call","empty","array","boolean","null","object","string","maybe","type","typeOkay","defaultValue","testValue","begin","valueSet","boundaries","Array","always","output","shortCircuit","fn","optionValue","userFn","when","checkValue","eitherIf","predicateValue","safePredicate","eitherWhen","sanitizedFn","concat","original","extension","sanitizedExtension","i","push","basePartial","direction","appliedFunction","applicationArgs","splitPartial","baseFn","left","right","leftApplied","reverseArgs","reverse","countArguments","execute","rpartial","toDec","parseInt","copyArray","makeValueArray","conj","dest","cons","source","first","values","lastIndex","last","drop","index","splice","dropLast","nth","rest","take","count","naturalComparator","comparison","sort","dropFirst","init","valueMap","pickResult","getKeys","obj","keys","mergeValue","dataObj","mergedObj","merge","baseObj","mergeData","finalObj","done","appliedFn","recursor","recurFn","recursorFn","localRecursor","verifyRecurValue","recurValue","recur","recursingFn","reducer","reduction","collection","hasInitialState","initialValue","remainder","compositor","f","g","clean","compose","pipeline","partialReverse","clone","originalValue","depth","depthOkay","geq","copyOkay","copy","container","each","newDepth","err","RangeError","maybeType","eitherType","timesRecursor","accumulator","isZero","times","repeatStepFactory","repeat","mapper","finalArray","map","mapperFn","filterer","userPredicate","filter","predicate","filterFn","compact","valueList","predicateAccumulator","total","sanitizedTotal","numberOf","captureUnique","finalList","unique","union","set1","set2","addToHash","finalObject","buildValueHash","captureIntersection","valueHash","intersect","setHash","captureDifference","difference","symmetricDifference","setUnion","setIntersection","everyReducer","every","finder","find","someRecur","some","contains","partitioner","partitions","partition","sanitizedPredicate","multiPartitioner","partitionPredicate","computedPartitions","multiPartition","predicateArgs","sanitizedArgs","sanitizedList","eachFn","userArray","continuing","inc","sanitizedArray","takeEltsUntil","aggregate","elt","takeUntil","dropEltsUntil","dropUntil","zipStep","zipElts","lists","zip","lista","listb","ander","orer","reduceConditions","conditionArgs","operator","initialCondition","and","or","xor","equivalent","composePredicate","predicateFn","predicateList","combinator","lastIsCombinator","executor","keyReduction","toValues","dereferencer","dataObject","token","trim","internalDeref","baseData","sanitizedDefault","keyTokens","split","deref","sanitizedKey","sanitizedData","plucker","pluckKeys","sanitizedObject","pluck","transformer","transformation","transform","adder","current","add","divider","divide","multiplier","multiply","subtractor","subtract","rangeRecurCheck","m","n","rangeBuilder","currentRange","finalRange","range","start","end","increment","mod","modulo","_a","_b","Math","floor","abs","truncate","max","maxValue","Number","MAX_VALUE","min","minValue","fac","factorial","greater","throwWhenNotComparable","TypeError","less","isInt","isMultipleOf","base","test","isEven","between","bounds","sortedBounds","lowerBound","upperBound","isNegative","isPositive","isNonNegative","isNonPositive","isNonZero","isOdd","leq","attachFunction","module","addModule","provider","moduleKeys","exports","define","amd"],"mappings":"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","file":"jfp.min.js","sourcesContent":["var jfp = (function(){\n    'use strict';\n    \n    function resolveFunction(functionValue){\n        return typeof functionValue === 'string' ? jfp[functionValue] : functionValue;\n    }\n    \n    function curryAlias(){\n        var args = jfp.slice(0, arguments);\n\n        args[0] = resolveFunction(args[0]);\n        \n        return jfp.apply(jfp.curry, args);\n    }\n    \n    function pickAlias(key, value){\n        var cleanKey = key.slice(1);\n        \n        return Boolean(value) ? jfp.pick(cleanKey, value) : jfp.partial(jfp.pick, cleanKey);\n    }\n    \n    function chooseResolver(value){\n        var resolveToPick = typeof value === 'string' && value.charAt(0) === ':';\n        \n        return resolveToPick ? pickAlias : curryAlias;\n    }\n    \n    return function(){\n        var args = jfp.slice(0, arguments),\n            resolver = chooseResolver(args[0]);\n        \n        return jfp.apply(resolver, args);\n    };\n    \n})();\n\n(function(j){\n    'use strict';\n\n    function isUndefined(value){\n        return value === undefined;\n    }\n    \n    function not(value){\n        return !Boolean(value);\n    }\n    \n    function equal (a, b) {\n        var missingValues = isUndefined(a) || isUndefined(b);\n        return not(missingValues) && a === b;\n    }\n\n    function isType (typeString, value) {\n        return j.equal(j.getType(value), typeString);\n    }\n    \n    function isNumeric(value){\n        var pattern = /^(0x)?[0-9]+((\\.[0-9]+)|(e\\-?[0-9]+))?$/,\n            number = isType('number', value),\n            numericString = isType('string', value) && Boolean(value.match(pattern));\n            \n        return number || numericString;\n    }\n    \n    function isTruthy(value){\n        return Boolean(value);\n    }\n    \n    function typeCheckReduction (value, result, typeString){\n        return result || isType(typeString, value);\n    }\n    \n    function isPrimitive (value) {\n        var primitiveNames = ['number',\n                              'string',\n                              'boolean',\n                              'undefined'];\n\n        return primitiveNames.reduce(typeCheckReduction.bind(null, value), equal(null, value));\n    }\n\n    function isTuple (size, list) {\n        return isType('array', list) && list.length === size;\n    }\n    \n    function hasFirst (list) {\n        return not(isUndefined(j.either([], list, 'array')[0]));\n    }\n\n    // Equality\n    j.equal = equal;\n    j.isEmptyString = equal.bind(null, '');\n    j.isNull = equal.bind(null, null);\n\n    // Types\n    j.isType = isType;\n    j.isArray = isType.bind(null, 'array');\n    j.isBoolean = isType.bind(null, 'boolean');\n    j.isFunction = isType.bind(null, 'function');\n    j.isNumber = isType.bind(null, 'number');\n    j.isObject = isType.bind(null, 'object');\n    j.isString = isType.bind(null, 'string');\n    j.isUndefined = isType.bind(null, 'undefined');\n\n    // Tuples\n    j.isTuple = isTuple;\n    j.isPair = isTuple.bind(null, 2);\n    j.isSingle = isTuple.bind(null, 1);\n    j.isTriple = isTuple.bind(null, 3);\n\n    //Other predicates\n    j.hasFirst = hasFirst;\n    j.isNumeric = isNumeric;\n    j.isPrimitive = isPrimitive;\n    j.isTruthy = isTruthy;\n    j.not = not;\n\n})(jfp);\n\n\n(function(j){\n    'use strict';\n\n    function identity(value){\n        return value;\n    }\n\n    function getType (value) {\n        var valueType = typeof value,\n            isArray = valueType === 'object' && Object.prototype.toString.call(value) === '[object Array]';\n            \n        return isArray ? 'array' : valueType;\n    }\n\n    function empty (typeString) {\n        return {\n                array: [],\n                boolean: false,\n                'null': null,\n                number: 0,\n                object: {},\n                string: ''\n            }[typeString];\n    }\n\n    function maybe(value){\n        var type = arguments[1],\n            valueType = getType(value),\n            typeOkay = valueType === type || valueType === 'array' && type === 'object';\n        \n        return typeOkay || (!type && Boolean(value)) ? value : null;\n    }\n\n    function either(defaultValue, testValue){\n        var type = arguments[2];\n        return maybe(testValue, type) === null ? defaultValue : testValue;\n    }\n    \n    function slice (begin, valueSet) {\n        var boundaries = !arguments[2] ? [begin] : [begin, arguments[2]];\n        return Array.prototype.slice.apply(either([], valueSet), boundaries);\n    }\n\n    function always (value) {\n        var output = getType(value) === 'undefined' ? null : value;\n        return identity.bind(null, output);\n    }\n\n    function shortCircuit(defaultValue, fn, optionValue){\n        var type = optionValue === 0 ? 'number' : arguments[3];\n        return maybe(optionValue, type) !== null ? fn(optionValue) : defaultValue;\n    }\n\n    function apply(userFn, args){\n        return userFn.apply(null, args);\n    }\n\n    function when(checkValue, userFn){\n        return j.isTruthy(checkValue) ? apply(userFn, slice(2, arguments)) : null;\n    }\n\n    function eitherIf(defaultValue, testValue, predicateValue){\n        var safePredicate = j.isUndefined(predicateValue) ? true : predicateValue;\n\n        return j.either(defaultValue, j.when(safePredicate, j.partial(j.identity, testValue)));\n    }\n\n    function eitherWhen(defaultValue, predicateValue, userFn){\n        var sanitizedFn = eitherIf(j.identity, userFn, j.isFunction(userFn));\n\n        return j.either(defaultValue, j.when(predicateValue, sanitizedFn));\n    }\n\n    function concat(original, extension){\n        var result = slice(0, either([], original)),\n            sanitizedExtension = either([], extension),\n            i;\n\n        //This is the most performant way to handle concatenation. Trust me.\n        for(i = 0; i < sanitizedExtension.length; i++){\n            result.push(sanitizedExtension[i]);\n        }\n\n        return result;\n    }\n\n    function basePartial(direction, userFn){\n        var args = slice(2, arguments);\n\n        return function appliedFunction(){\n            var applicationArgs = (direction === 'left') ?\n                                    concat(args, slice(0, arguments)) :\n                                    concat(slice(0, arguments), args);\n\n            return apply(userFn, applicationArgs);\n        };\n    }\n\n    function splitPartial (baseFn, left, right) {\n        var leftApplied = apply(basePartial, concat(['left', baseFn], left));\n        return apply(basePartial, concat(['right', leftApplied], right));\n    }\n\n    function reverseArgs(userFn){\n        return function(){\n            return j.apply(userFn, j.slice(0, arguments).reverse());\n        };\n    }\n\n    function countArguments(userFn){\n        return either(function(){}, userFn).length;\n    }\n\n    function execute(userFn){\n        return j.apply(userFn, j.slice(1, arguments));\n    }\n    \n    j.always = always;\n    j.apply = apply;\n    j.concat = concat;\n    j.countArguments = countArguments;\n    j.either = either;\n    j.eitherIf = eitherIf;\n    j.eitherWhen = eitherWhen;\n    j.empty = empty;\n    j.execute = execute;\n    j.getType = getType;\n    j.identity = identity;\n    j.maybe = maybe;\n    j.partial = basePartial('left', basePartial, 'left');\n    j.reverseArgs = reverseArgs;\n    j.rpartial = basePartial('left', basePartial, 'right');\n    j.shortCircuit = shortCircuit;\n    j.slice = slice;\n    j.splitPartial = splitPartial;\n    j.when = when;\n\n})(jfp);\n\n\n(function(j){\n    'use strict';\n\n    function toDec(value){\n        return (j.isNumeric(value)) ? parseInt(value, 10) : null;\n    }\n\n    j.toDec = toDec;\n\n})(jfp);\n\n(function(j){\n    'use strict';\n\n    function copyArray(valueSet){\n        return j.slice(0, valueSet);\n    }\n\n    function makeValueArray(value){\n        return j.not(j.isUndefined(value)) ? [value] : [];\n    }\n\n    function conj(value, dest){\n        return j.concat(copyArray(dest), makeValueArray(value));\n    }\n\n    function cons(value, source){\n        return j.concat(makeValueArray(value), source);\n    }\n\n    function first(values){\n        return j.isArray(values) ? j.either(null, values[0]) : null;\n    }\n\n    function lastIndex(values){\n        return j.isArray(values) ? values.length - 1 : null;\n    }\n\n    function last(values){\n        return j.isArray(values) ? values[lastIndex(values)] : null;\n    }\n\n    function drop (index, list) {\n        var result = j.slice(0, j.either([], list, 'array'));\n        \n        result.splice(j.either(0, index, 'number'), 1);\n        \n        return result;\n    }\n\n    function dropLast(valueSet){\n        return drop(lastIndex(valueSet), valueSet);\n    }\n\n    function nth(index, valueSet){\n        return j.either(null, j.either([], valueSet)[index]);\n    }\n\n    function rest(values){\n        return j.slice(1, values);\n    }\n\n    function take(count, values){\n        return j.isArray(values) ? j.slice(0, values, count) : null;\n    }\n\n    function naturalComparator(a, b){\n        var comparison = a < b ? -1 : 1;\n        return a === b ? 0 : comparison;\n    }\n\n    function sort(optionValue, valueSet){\n        return j.slice(0, j.either(valueSet, optionValue, 'array'))\n                .sort(j.either(naturalComparator, optionValue, 'function'));\n    }\n\n    j.conj = conj;\n    j.cons = cons;\n    j.copyArray = copyArray;\n    j.drop = drop;\n    j.dropFirst = j.partial(drop, 0);\n    j.dropLast = dropLast;\n    //j.each = each;\n    j.first = first;\n    j.init = j.dropLast;\n    j.last = last;\n    j.lastIndex = lastIndex;\n    j.nth = nth;\n    j.rest = rest;\n    j.sort = sort;\n    j.take = take;\n\n})(jfp);\n\n\n(function(j){\n    'use strict';\n\n    function pick(key, valueMap){\n        var pickResult = j.either({}, valueMap)[key];\n        return j.isUndefined(pickResult) ? null : pickResult;\n    }\n\n    function getKeys (obj) {\n        return Object.keys(j.either({}, obj, 'object'));\n    }\n\n    function mergeValue (dataObj, mergedObj, key) {\n        mergedObj[key] = dataObj[key];\n        return mergedObj;\n    }\n\n    function merge(baseObj, mergeData){\n        var finalObj = null;\n        \n        if (j.maybe(baseObj) !== null) {\n            finalObj = getKeys(baseObj).reduce(j.partial(mergeValue, baseObj), {});\n            finalObj = getKeys(mergeData).reduce(j.partial(mergeValue, mergeData), finalObj);\n        }\n\n        return finalObj;\n    }\n\n    j.getKeys = getKeys;\n    j.merge = merge;\n    j.pick = pick;\n\n})(jfp);\n\n\n(function(j){\n    'use strict';\n\n    //This is complicated and I don't expect people to grok it on first read.\n    function curry(userFn){\n        var args = j.slice(1, arguments),\n            done = args.length >= j.countArguments(userFn),\n            appliedFn = !done ? j.apply(j.partial, j.concat([curry, userFn], args)) : null,\n            result = Boolean(userFn) && done ? j.apply(userFn, args) : null;\n\n        return j.either(appliedFn, result);\n    }\n\n    //zOMG! TAIL OPTIMIZED RECURSION\n    function recursor(recurFn){\n        var args = j.slice(1, arguments);\n\n        //This is to make the returned function distinct and identifiable.\n        return function recursorFn(localRecursor){\n            return j.apply(recurFn, j.concat([localRecursor], args));\n        };\n    }\n\n    function verifyRecurValue(recurValue){\n        return typeof recurValue === 'function' &&\n            recurValue.toString().match('recursorFn');\n    }\n\n    //Tail optimization with managed recursion is really complicated.\n    //Please don't muck with this unless you TRULY understand what is happening.\n    function recur(userFn){\n        var recursingFn = j.either(j.identity, userFn, 'function'),\n            localRecursor = j.partial(recursor, recursingFn),\n            recurValue = j.apply(localRecursor, j.slice(1, arguments));\n\n        while(verifyRecurValue(recurValue = recurValue(localRecursor)) && recursingFn !== j.identity);\n\n        return recurValue;\n    }\n\n\t/*\n     * Reduce uses tail-optimized (while-trampolined, fully returning) recursion to resolve reductions.\n     * Reducer is a pure function for handling a single reduction step.\n     * Reduce manages the setup and recursion execution.\n     */\n    function reducer(userFn, recur, reduction, collection){\n        return collection.length === 0 ?\n                    reduction :\n                    recur(userFn(reduction, j.first(collection)),\n                          j.rest(collection));\n    }\n\n    function reduce(userFn, values){\n        var hasInitialState = !j.isUndefined(arguments[2]),\n            initialValue = !hasInitialState ? j.first(values) : arguments[2],\n            remainder = !hasInitialState ? j.rest(values) : values;\n\n        return (Boolean(values) && values.length > 0) ?\n                j.recur(j.partial(reducer, userFn), initialValue, remainder) :\n                initialValue;\n    }\n\n    //Produces a function that returns f(g(x))\n    function compositor(f, g){\n        var clean = j.splitPartial(j.either, [j.identity], ['function']);\n            \n        return function () {\n            return clean(f)(j.apply(clean(g), j.slice(0, arguments)));\n        };\n    }\n\n    function compose(){\n        return reduce(compositor, j.slice(0, arguments), j.identity);\n    }\n\n    function pipeline(value){\n        return j.apply(compose, j.slice(1, arguments).reverse())(value);\n    }\n\n    function partialReverse(){\n        return j.apply(j.compose(j.reverseArgs, j.partial),\n                       j.slice(0, arguments));\n    }\n\n    function clone (originalValue, depth) {\n        var depthOkay = j.isUndefined(depth) || j.geq(depth, 0),\n            copyOkay = j.isType('object', originalValue) || j.isType('array', originalValue);\n        \n        function copy () {\n            var keys = Object.keys(originalValue),\n                container = j.isArray(originalValue) ? [] : {};\n            \n            j.each(function (key) {\n                var newDepth = j.isNumber(depth) ? depth - 1 : undefined;\n                \n                try {\n                    container[key] = clone(originalValue[key], newDepth);\n                } catch (err) {\n                    throw new RangeError('Object contains circular reference or is too deep to clone.');\n                }\n                \n            }, keys);\n            \n            return container;\n        }\n        \n        return copyOkay && depthOkay ? copy() : originalValue;\n    }\n\n    function maybeType (typeString) {\n        return j.curry(function (value) {\n            return j.maybe(value, typeString);\n        }).apply(j, j.slice(1, arguments));\n    }\n    \n    function eitherType (typeString) {\n        return j.curry(function (defaultValue, optionValue) {\n            return j.either(defaultValue, optionValue, typeString);\n        }).apply(j, j.slice(1, arguments));\n    }\n    \n    function timesRecursor (recur, count, userFn, accumulator){\n        return j.isZero(count) ? accumulator : recur(count - 1, userFn, userFn(accumulator));\n    }\n    \n    function times (count, userFn){\n        var accumulator = arguments[2];\n        return j.recur(timesRecursor, count, userFn, accumulator);\n    }\n    \n    function repeatStepFactory (value){\n        return function (accumulator) {\n            return accumulator + value;\n        };\n    }\n    \n    function repeat (count, value){\n        return times(count, repeatStepFactory(value), '');\n    }\n    \n    j.clone = clone;\n    j.compose = compose;\n    j.curry = curry;\n    j.eitherType = eitherType;\n    j.maybeType = maybeType;\n    j.partialReverse = partialReverse;\n    j.pipeline = pipeline;\n    j.recur = recur;\n    j.reduce = reduce;\n    j.repeat = repeat;\n    j.times = times;\n\n})(jfp);\n\n\n(function(j){\n\t\n    /*\n     * Map uses reduce to produce a new, completely reference-decoupled list of values\n     * Mapper handles a single update step for the final output array\n     */\n    function mapper(userFn, finalArray, value){\n        finalArray.push(userFn(value));\n        return finalArray;\n    }\n\n    function map (userFn, values) {\n        var mapperFn = j.partial(mapper, userFn);\n        return j.reduce(mapperFn, values, []);\n    }\n    \n    /*\n     * Filter uses reduce to produce a new, completely reference-decoupled list of values\n     * Filterer handles a single update step for the final output array\n     */\n    function filterer(userPredicate, finalArray, value){\n        return userPredicate(value) ? j.conj(value, finalArray) : finalArray;\n    }\n\n    function filter (predicate, values) {\n        var filterFn = j.partial(filterer, predicate);\n        return j.reduce(filterFn, values, []);\n    }\n    \n    function compact(valueList){\n        return filter(j.isTruthy, valueList);\n    }\n\n    function predicateAccumulator(predicate, total, value){\n        var sanitizedTotal = j.either(0, total, 'number');\n        return predicate(value) ? sanitizedTotal + 1 : sanitizedTotal;\n    }\n\n    function numberOf(predicate, valueSet){\n        var accumulator = j.partial(predicateAccumulator, predicate);\n        return j.reduce(accumulator, j.either([], valueSet), 0);\n    }\n\n    function captureUnique(finalList, value){\n        return j.last(finalList) === value ? finalList : j.conj(value, finalList);\n    }\n    \n    function unique(valueSet){\n        return j.reduce(captureUnique, j.sort(j.slice(0, valueSet)), []);\n    }\n\n    function union(set1, set2){\n        return j.compose(j.unique, j.concat)(set1, set2);\n    }\n\n    function addToHash(finalObject, value){\n        finalObject[value] = true;\n        return finalObject;\n    }\n\n    function buildValueHash(valueList){\n        return j.either({}, j.reduce(addToHash, valueList, {}));\n    }\n\n    function captureIntersection(valueHash, finalList, value){\n        return valueHash[value] ? j.conj(value, finalList) : finalList;\n    }\n    \n    function intersect(set1, set2){\n        var setHash = buildValueHash(j.either([], set2));\n        return j.reduce(j.partial(captureIntersection, setHash), set1, []); \n    }\n\n    function captureDifference(valueHash, finalList, value){\n        return !valueHash[value] ? j.conj(value, finalList) : finalList;\n    }\n    \n    function difference(set1, set2){\n        var setHash = buildValueHash(j.either([], set2));\n        return j.reduce(j.partial(captureDifference, setHash), set1, []);\n    }\n\n    function symmetricDifference(set1, set2){\n        var setUnion = union(set1, set2),\n            setIntersection = intersect(set1, set2);\n\n        return difference(setUnion, setIntersection);\n    }\n\n    function everyReducer (predicate, result, valueList){\n        return result && predicate(valueList);\n    }\n\n    function every (predicate, valueList){\n        var reducer = j.partial(everyReducer, predicate);\n        return Boolean(j.reduce(reducer, valueList, true));\n    }\n\n    function finder (recur, predicate, valueList) {\n        var done = !Boolean(valueList) || valueList.length === 0,\n            result = done ? null : j.first(valueList);\n        \n        return done || predicate(result) ? result : recur(predicate, j.rest(valueList));\n    }\n\n    function find (predicate, valueList){\n        return j.recur(finder, predicate, valueList);\n    }\n\n    function someRecur(recur, predicate, valueList){\n        var done = valueList.length === 0,\n            result = done ? false : predicate(j.first(valueList));\n            \n        return result || done ? result : recur(predicate, j.rest(valueList));\n    }\n\n    function some(predicate, valueList){\n        return Boolean(j.recur(someRecur, predicate, valueList));\n    }\n    \n    function contains(value, valueList){\n        return some(j.partial(j.equal, value), valueList);\n    }\n\n    function partitioner(predicate, partitions, value){\n        var index = predicate(value) ? 0 : 1;\n\n        partitions[index].push(value);\n\n        return partitions;\n    }\n\n    function partition(predicate, list){\n        var sanitizedPredicate = j.either(j.identity, predicate, 'function');\n        \n        return j.reduce(j.partial(partitioner, sanitizedPredicate),\n                        j.either([], list),\n                        [[], []]);\n    }\n\n    function multiPartitioner(predicate, partitions, value){\n        var partitionPredicate = j.rpartial(predicate, value),\n            computedPartitions = j.dropLast(partitions);\n        \n        return j.concat(computedPartitions, partition(partitionPredicate, j.last(partitions)));\n    }\n    \n    function multiPartition(predicate, predicateArgs, list){\n        var sanitizedArgs = j.either([], predicateArgs),\n            sanitizedPredicate = j.either(j.identity, predicate),\n            sanitizedList = j.either([], list);\n            \n        return !Boolean(list) ?\n                [[], []] :\n                j.reduce(j.partial(multiPartitioner, sanitizedPredicate),\n                         sanitizedArgs,\n                         [sanitizedList]);\n    }\n\n    function eachFn(recur, userFn, userArray, index){\n        var continuing = j.hasFirst(userArray) && userFn(j.first(userArray), index) !== false;\n        return continuing ? recur(userFn, j.rest(userArray), j.inc(index)) : false;\n    }\n    \n    function each (userFn, userArray) {\n        var sanitizedFn = j.either(j.identity, userFn),\n            sanitizedArray = j.either([], userArray);\n        \n        j.recur(eachFn, sanitizedFn, sanitizedArray, 0);\n        return sanitizedArray;\n    }\n\n    function takeEltsUntil (recur, predicate, list, aggregate) {\n        var elt = j.first(list);\n        return predicate(elt, aggregate) || j.equal(0, list.length) ? aggregate : recur(predicate, j.rest(list), j.conj(elt, aggregate));\n    }\n\n    function takeUntil (predicate, list) {\n        return j.recur(takeEltsUntil, predicate, list, []);\n    }\n\n    function dropEltsUntil (recur, predicate, list){\n        return predicate(j.first(list), list) || j.equal(0, list.length) ? list : recur(predicate, j.rest(list));\n    }\n\n    function dropUntil (predicate, list){\n        return j.recur(dropEltsUntil, predicate, list);\n    }\n\n    function zipStep (aggregate, list){\n        return [j.conj(j.first(list), aggregate[0]),\n                j.conj(j.rest(list), aggregate[1])];\n    }\n\n    function zipElts (recur, aggregate, lists){\n        var reduction = j.reduce(zipStep, lists, [[], []]);\n        return j.equal(0, lists[0].length) ? aggregate : recur(j.conj(reduction[0], aggregate), reduction[1]);\n    }\n\n    function zip (lista, listb){\n        var lists = j.slice(0, arguments);\n        return j.equal(0, lists.length) ? [] : j.recur(zipElts, [], lists);\n    }    \n    \n    j.contains = contains;\n    j.compact = compact;\n    j.difference = difference;\n    j.dropUntil = dropUntil;\n    j.each = each;\n    j.every = every;\n\tj.filter = filter;\n    j.find = find;\n    j.intersect = intersect;\n\tj.map = map;\n\tj.multiPartition = multiPartition;\n\tj.numberOf = numberOf;\n    j.partition = partition;\n    j.some = some;\n    j.symmetricDifference = symmetricDifference;\n    j.takeUntil = takeUntil;\n    j.union = union;\n    j.unique = unique;\n    j.zip = zip;\n\n})(jfp);\n\n(function (j) {\n\t'use strict';\n\t\n\t//Performs 'and' operation on valueSet\n    function ander(a, b){\n        return a && b;\n    }\n\n    function orer(a, b){\n        return a || b;\n    }\n\n    function reduceConditions(conditionArgs, operator, initialCondition) {\n        return j.pipeline(conditionArgs,\n                          j.partial(j.slice, 0),\n                          j.partial(j.map, Boolean),\n                          j.splitPartial(j.reduce, [operator], [initialCondition]),\n                          Boolean);\n    }\n\n    function and(a, b){\n        return reduceConditions(arguments, ander, true);\n    }\n\n    function or(a, b){\n        return reduceConditions(arguments, orer, false);\n    }\n\n    function xor(a, b){\n        var equivalent = Boolean(a) === Boolean(b);\n        return or(a, b) && !equivalent;\n    }\n    \n    function composePredicate (predicateFn) {\n        var predicateList = j.slice(0, arguments),\n            combinator = j.last(predicateList),\n            lastIsCombinator = combinator === or || combinator === and;\n        \n        predicateList = lastIsCombinator ? j.dropLast(predicateList) : predicateList;\n        combinator = combinator === or ? or : and;\n        \n        return function (value) {\n            var executor = j.rpartial(j.execute, value);\n            \n            return j.pipeline(predicateList,\n                              j.partial(j.map, executor),\n                              j.partial(j.reduce, combinator),\n                              Boolean);\n        };\n    }\n    \n    // Predicate combinators\n\tj.and = and;\n\tj.or = or;\n\tj.xor = xor;\n\n    j.composePredicate = composePredicate;\n    \n})(jfp);\n\n(function (j) {\n\t'use strict';\n\t\n    /*\n     * toValues converts an object to an array of values\n     * This is necessary for reduce to convert objects into\n     * processible arrays in an upcoming version.\n     */\n\tfunction keyReduction (baseObj, finalList, key) {\n\t\treturn j.conj(baseObj[key], finalList);\n\t}\n\t\n\tfunction toValues (baseObj) {\n\t\tvar reducer = j.partial(keyReduction, baseObj);\n\t\treturn j.isNull(j.maybe(baseObj, 'object')) ? null : j.reduce(reducer, Object.keys(baseObj), []);\n\t}\n\n\tfunction dereferencer(dataObject, token){\n        var key = j.either('', token).trim();\n        return key === '' ? dataObject : j.pick(token, dataObject);\n    }\n\n    function internalDeref(key, baseData, defaultValue){\n        var sanitizedDefault = j.isUndefined(defaultValue) ? null : defaultValue,\n            keyTokens = key.split('.'),\n            result = j.reduce(dereferencer, keyTokens, baseData);\n        \n        return j.either(sanitizedDefault, result);\n    }\n    \n    function deref(key, baseData){\n        // Satisifes backwards-compatibility case where key an data are reversed\n        var defaultValue = arguments[2],\n            sanitizedKey = typeof key === 'string' ? key : baseData,\n            sanitizedData = typeof baseData === 'object' ? baseData : key;\n        \n        // Fully sanitize data before executing the dereference function\n        sanitizedKey = j.either('', sanitizedKey, 'string');\n        sanitizedData = j.either(null, sanitizedData, 'object');\n        \n        return internalDeref(j.either('', sanitizedKey), sanitizedData, defaultValue);\n    }\n    \n    function plucker (baseObj, finalObj, key){\n        finalObj[key] = baseObj[key];\n        return finalObj;\n    }\n    \n    function pluckKeys (keys, baseObj){\n        var sanitizedObject = j.either({}, baseObj, 'object');\n        return j.reduce(j.partial(plucker, sanitizedObject), keys, {});\n    }\n    \n    function pluck (key, baseObj) {\n        return pluckKeys([key], baseObj);\n    }\n\n    function transformer (obj, result, transformation) {\n        result[transformation[1]] = deref(transformation[0], obj);\n        return result;\n    }\n\n    function transform (transformation, obj) {\n        return j.pipeline(transformation,\n                          j.partial(j.filter, j.isPair),\n                          j.splitPartial(j.reduce, [j.partial(transformer, obj)], [{}]));\n    }\n\n\tj.deref = deref;\n    j.pluck = pluck;\n    j.pluckKeys = pluckKeys;\n    j.toValues = toValues;\n    j.transform = transform;\n\n})(jfp);\n\n(function(j){\n    'use strict';\n\n//This is a recursive add fn\n    function adder(recur, current, valueSet){\n        return (valueSet.length === 0) ?\n                current :\n                recur(current + j.first(valueSet), j.rest(valueSet));\n    }\n    \n    function add(a, b){\n        return j.recur(adder, 0, j.slice(0, arguments));\n    }\n    \n    //This is a recursive divide fn\n    function divider(recur, current, valueSet){\n        return (valueSet.length === 0) ?\n                current :\n                recur(current / j.first(valueSet), j.rest(valueSet));\n    }\n    \n    function divide(){\n        var args = j.slice(0, arguments),\n            first = args.length ? j.first(args) : 1;\n        return j.recur(divider, first, j.rest(args));\n    }\n    \n    //This is a recursive multiply fn\n    function multiplier(recur, current, valueSet){\n        return (valueSet.length === 0) ?\n                current :\n                recur(current * j.first(valueSet), j.rest(valueSet));\n    }\n    \n    function multiply(){\n        return j.recur(multiplier, 1, j.slice(0, arguments));\n    }\n    \n    //This is a recursive subtraction fn\n    function subtractor(recur, current, valueSet){\n        return (valueSet.length === 0) ?\n                current :\n                recur(current - j.first(valueSet), j.rest(valueSet));\n    }\n    \n    function subtract(){\n        var args = j.slice(0, arguments),\n            first = args.length ? j.first(args) : 0;\n        return j.recur(subtractor, first, j.rest(args));\n    }\n\n    //This is a recursive constructor function for ranges\n    function rangeRecurCheck(m, n, inc){\n        return inc > 0 ? (m + inc) < n : (m + inc) > n;\n    }\n\n    function rangeBuilder(recur, currentRange, m, n, inc){\n        var finalRange = rangeRecurCheck(m - inc, n, inc) ?\n                            j.conj(m, currentRange) :\n                            currentRange;\n        \n        return rangeRecurCheck(m, n, inc) ?\n                recur(finalRange, m + inc, n, inc) :\n                finalRange;\n    }\n    \n    function range(a, b, inc){\n        var start = j.isUndefined(b) ? 0 : a,\n            end = j.isUndefined(b) ? j.either(0, a) : b,\n            increment = (!inc) ? 1 : inc;\n            \n        return j.recur(rangeBuilder,\n                       [],\n                       j.either(0, start),\n                       j.either(0, end),\n                       increment);\n    }\n\n    function mod(a, b){\n        return j.isUndefined(b) ? j.either(0, a) : a%b;\n    }\n\n    function modulo(a, b){\n        var _a = j.either(0, a),\n            _b = j.either(0, b);\n\n        return (_a > 0) ? mod(_a, _b) : _b * (Math.floor(Math.abs(_a)/_b) + 1) + _a;\n    }\n\n    function truncate(value){\n        return (value > 0) ? Math.floor(value) : Math.floor(value) + 1;\n    }\n    \n    function max(a, b){\n        var maxValue = -Number.MAX_VALUE,\n            _a = j.isUndefined(a) ? maxValue : a,\n            _b = j.isUndefined(b) ? maxValue : b;\n            \n        maxValue = (_a > maxValue) ? _a : maxValue;\n        maxValue = (_b > maxValue) ? _b : maxValue;\n        \n        return maxValue;\n    }\n    \n    function min(a, b){\n        var minValue = Number.MAX_VALUE,\n            _a = j.isUndefined(a) ? minValue : a,\n            _b = j.isUndefined(b) ? minValue : b;\n        \n        minValue = (_a < minValue) ? _a : minValue;\n        minValue = (_b < minValue) ? _b : minValue;\n        \n        return minValue;\n    }\n\n    function fac(value){\n        var factorial = j.compose(j.partial(j.reduce, multiply),\n                                  j.partial(range, 1),\n                                  j.partial(add, 1));\n\n        return j.either(1, j.when(j.greater(value, 0), factorial, value));\n    }\n\n    j.add = add;\n    j.divide = divide;\n    j.fac = fac;\n    j.inc = j.partial(j.add, 1);\n    j.max = max;\n    j.min = min;\n    j.mod = mod;\n    j.modulo = modulo;\n    j.multiply = multiply;\n    j.range = range;\n    j.subtract = subtract;\n    j.truncate = truncate;\n\n})(jfp);\n\n\n(function(j){\n\n    function throwWhenNotComparable(a, b){\n        j.when(j.isUndefined(a) || j.isUndefined(b), function(){\n            throw new TypeError('Inequality comparisons require two values');\n        });\n    }\n\n    function greater(a, b){\n        throwWhenNotComparable(a, b);\n        return a > b;\n    }\n\n    function less(a, b){\n        throwWhenNotComparable(a, b);\n        return a < b;\n    }\n\n    function isInt(value){\n        return j.equal(j.truncate(value), value);\n    }\n\n    function isMultipleOf (base, test) {\n        return j.equal(0, j.mod(test, base));\n    }\n\n    function isEven (value) {\n        return isZero(j.mod(value, 2));\n    }\n\n    function between (bounds, value){\n        var sortedBounds = j.sort(j.take(2, bounds)),\n            lowerBound = j.first(sortedBounds),\n            upperBound = j.last(sortedBounds);\n        return j.less(lowerBound, value) && j.greater(upperBound, value);\n    }\n\n    var isNegative = j.partial(greater, 0),\n        isPositive = j.partial(less, 0),\n        isZero = j.partial(j.equal, 0);\n\n    j.between = between;\n    j.isEven = isEven;\n    j.isInt = isInt;\n    j.isMultipleOf = isMultipleOf;\n    j.isNegative = isNegative;\n    j.isNonNegative = j.compose(j.not, isNegative);\n    j.isNonPositive = j.compose(j.not, isPositive);\n    j.isNonZero = j.compose(j.not, isZero);\n    j.isOdd = j.compose(j.not, isEven);\n    j.isPositive = isPositive;\n    j.isZero = isZero;\n\n    //Special case predicate naming is intended for these functions\n    //There is a general expectation that these not be named with 'is'\n    j.geq = j.compose(j.not, less);\n    j.greater = greater;\n    j.leq = j.compose(j.not, greater);\n    j.less = less;\n\n})(jfp);\n\n(function (j) {\n\t'use strict';\n\t\n\tfunction attachFunction (module, j, key) {\n\t\tif(j.isUndefined(j[key]) && j.isType('function', module[key])) {\n\t\t\tj[key] = module[key];\n\t\t}\n\t\treturn j;\n\t}\n\t\n\tfunction addModule (provider) {\n\t\tvar module = j.either(j.always({}), provider, 'function')(),\n\t\t\tmoduleKeys = j.getKeys(module);\n\t\t\t\n\t\treturn function () {\n\t\t\treturn j.reduce(j.partial(attachFunction, module), moduleKeys, j);\n\t\t};\n\t}\n\t\n\tj.addModule = addModule;\n\t\n})(jfp);\n\nvar j = jfp;\n\nif(typeof module !== 'undefined' && Boolean(module.exports)){\n    // Node and CommonJS export\n    module.exports = j;\n} else if (typeof define === 'function' && Boolean(define.amd)) {\n    // AMD and Require.js module definition\n    define([], function () {\n        return jfp;\n    });\n}\n\n\n"]}