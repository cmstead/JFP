{"version":3,"file":"jfp.min.js","sources":["jfp.js"],"names":["jfp","resolveFunction","functionValue","args","slice","arguments","apply","curry","j","isBoolean","value","isFunction","testFn","isObject","isArray","Object","prototype","toString","call","isString","isEmptyString","isNull","isNumber","isNumeric","pattern","match","isTruthy","isUndefined","undefined","not","identity","begin","valueSet","end","values","Array","shortCircuit","defaultValue","userFn","testValue","maybe","type","typeOkay","either","when","checkValue","eitherIf","predicateValue","safePredicate","partial","eitherWhen","sanitizedFn","concat","original","extension","result","sanitizedExtension","i","length","push","basePartial","direction","appliedFunction","applicationArgs","reverseArgs","reverse","captureArguments","replace","split","countArguments","params","execute","rpartial","toValues","valueMap","finalArray","key","hasOwnProperty","conj","toDec","parseInt","copyArray","makeValueArray","dest","cons","source","each","userArray","sanitizedArray","filter","predicate","filterFn","find","finalValue","findFn","first","lastIndex","last","drop","index","finalIndex","sanitizedIndex","firstArray","secondArray","dropLast","map","mapFn","nth","rest","take","count","some","satisfied","someFn","contains","equal","every","everyFn","numberOf","accumulator","accumulate","naturalComparator","a","b","comparison","sort","optionValue","comparator","finalSet","union","set1","set2","compose","unique","buildValueHash","finalHash","intersect","seta","setbHash","difference","symmetricDifference","setUnion","setIntersection","dropFirst","init","pick","pickResult","pluckKeys","keys","finalOutput","sanitizedKeys","sanitizedValueMap","captureValue","pluck","merge","defaultObj","mergeData","finalObj","argumentCount","appliedFn","recursor","recurFn","recursorFn","localRecursor","verifyRecurValue","recurValue","recur","recursingFn","reduce","initialState","initialValue","remainder","reducer","reduction","collection","ander","current","and","orer","or","xor","compositor","f","g","pipeline","finalValues","operator","partialReverse","partialAndReverse","deref","baseData","sanitizedDefault","keyTokens","derefValue","returnValue","Boolean","compact","adder","add","divider","divide","multiplier","multiply","subtractor","subtract","rangeRecurCheck","m","n","inc","rangeBuilder","currentRange","finalRange","range","start","increment","mod","modulo","_a","_b","Math","floor","abs","truncate","max","maxValue","Number","MAX_VALUE","min","minValue","fac","factorial","greater","throwWhenNotComparable","TypeError","isNotUndefined","less","isEven","isPositive","isZero","isNegative","isInt","isNonNegative","isNonPositive","isNonZero","isOdd","geq","leq","module","exports"],"mappings":"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","sourcesContent":["var jfp = (function(){\n    'use strict';\n    \n    function resolveFunction(functionValue){\n        return typeof functionValue === 'string' ? jfp[functionValue] : functionValue;\n    }\n    \n    return function(){\n        var args = jfp.slice(0, arguments);\n        \n        args[0] = resolveFunction(args[0]);\n        \n        return jfp.apply(jfp.curry, args);\n    };\n    \n})();\n\n(function(j){\n    'use strict';\n    \n    function isBoolean(value){\n        return typeof value === 'boolean';\n    }\n\n    function isFunction(testFn){\n        return typeof testFn === 'function';\n    }\n    \n    function isObject(value){\n        return (typeof value == 'object');\n    }\n    \n    function isArray(value){\n        return (isObject(value) && Object.prototype.toString.call(value) === '[object Array]');\n    }\n    \n    function isString(value){\n        return typeof value === 'string';\n    }\n\n    function isEmptyString(value){\n        return isString(value) && value === '';\n    }\n    \n    function isNull(value){\n        return value === null;\n    }\n    \n    function isNumber(value){\n        return typeof value === 'number';\n    }\n    \n    function isNumeric(value){\n        var pattern = /^(0x)?[0-9]+((\\.[0-9]+)|(e\\-?[0-9]+))?$/;\n        return isNumber(value) || (isString(value) && !!value.match(pattern));\n    }\n    \n    function isTruthy(value){\n        return !!value;\n    }\n    \n    function isUndefined(value){\n        return value === undefined;\n    }\n\n    function not(value){\n        return !value;\n    }\n\n    j.isArray = isArray;\n    j.isBoolean = isBoolean;\n    j.isEmptyString = isEmptyString;\n    j.isFunction = isFunction;\n    j.isNull = isNull;\n    j.isNumber = isNumber;\n    j.isNumeric = isNumeric;\n    j.isObject = isObject;\n    j.isString = isString;\n    j.isTruthy = isTruthy;\n    j.isUndefined = isUndefined;\n    j.not = not;\n\n})(jfp);\n\n\n(function(j){\n    'use strict';\n\n    function identity(value){\n        return value;\n    }\n\n    function slice(begin, valueSet, end){\n        var values = j.not(j.isTruthy(valueSet)) ? [] : valueSet;\n\n        return j.not(j.isTruthy(end)) ?\n                    Array.prototype.slice.call(values, begin) :\n                    Array.prototype.slice.call(values, begin, end);\n    }\n\n    function shortCircuit(defaultValue, userFn, testValue){\n        return (j.isTruthy(testValue) || testValue === 0) ?\n            userFn(testValue) :\n            defaultValue;\n    }\n\n    function maybe(value){\n        var type = arguments[1],\n            typeOkay = typeof value === type;\n\n        return typeOkay || (!type && !!value) ? value : null;\n    }\n\n    function either(defaultValue, testValue){\n        var type = arguments[2];\n        return maybe(testValue, type) === null ? defaultValue : testValue;\n    }\n\n    function apply(userFn, args){\n        return userFn.apply(null, args);\n    }\n\n    function when(checkValue, userFn){\n        var args = slice(2, arguments);\n        return j.isTruthy(checkValue) ? apply(userFn, args) : null;\n    }\n\n    function eitherIf(defaultValue, testValue, predicateValue){\n        var safePredicate = j.isUndefined(predicateValue) ? true : predicateValue;\n\n        return j.either(defaultValue, j.when(safePredicate, j.partial(j.identity, testValue)));\n    }\n\n    function eitherWhen(defaultValue, predicateValue, userFn){\n        var sanitizedFn = eitherIf(j.identity, userFn, j.isFunction(userFn));\n\n        return j.either(defaultValue, j.when(predicateValue, sanitizedFn));\n    }\n\n    function concat(original, extension){\n        var result = slice(0, either([], original)),\n            sanitizedExtension = either([], extension),\n            i;\n\n        //This is the most performant way to handle concatenation. Trust me.\n        for(i = 0; i < sanitizedExtension.length; i++){\n            result.push(sanitizedExtension[i]);\n        }\n\n        return result;\n    }\n\n    function basePartial(direction, userFn){\n        var args = slice(2, arguments);\n\n        return function appliedFunction(){\n            var applicationArgs = (direction === 'left') ?\n                                    concat(args, slice(0, arguments)) :\n                                    concat(slice(0, arguments), args);\n\n            return apply(userFn, applicationArgs);\n        };\n    }\n\n    function reverseArgs(userFn){\n        return function(){\n            var args = j.slice(0, arguments).reverse();\n            return j.apply(userFn, args);\n        };\n    }\n\n    function captureArguments(userFn){\n        return userFn.toString()\n            .replace(/((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/)|(\\s))/mg,'')\n            .match(/^function\\s*[^\\(]*\\(\\s*([^\\)]*)\\)/m)[1]\n            .split(/,/);\n    }\n\n    function countArguments(userFn){\n        var params = shortCircuit([], captureArguments, userFn);\n\n        params = (params.length === 1 && params[0] === '') ? [] : params;\n\n        return params.length;\n    }\n\n    function execute(userFn){\n        return j.apply(userFn, j.slice(1, arguments));\n    }\n\n    j.apply = apply;\n    j.concat = concat;\n    j.countArguments = countArguments;\n    j.either = either;\n    j.eitherIf = eitherIf;\n    j.eitherWhen = eitherWhen;\n    j.execute = execute;\n    j.identity = identity;\n    j.maybe = maybe;\n    j.partial = basePartial('left', basePartial, 'left');\n    j.reverseArgs = reverseArgs;\n    j.rpartial = basePartial('left', basePartial, 'right');\n    j.shortCircuit = shortCircuit;\n    j.slice = slice;\n    j.when = when;\n\n})(jfp);\n\n\n(function(j){\n    'use strict';\n\n    function toValues(valueMap){\n        var finalArray = [],\n            key;\n\n        j.when(j.isObject(valueMap), function(){\n            for(key in valueMap){\n                if(valueMap.hasOwnProperty(key) && j.isTruthy(valueMap[key])){\n                    finalArray = j.conj(valueMap[key], finalArray);\n                }\n            }\n        });\n\n        return j.either(null, j.when(j.isObject(valueMap), function(){ return finalArray; }));\n    }\n\n    function toDec(value){\n        return (j.isNumeric(value)) ? parseInt(value, 10) : null;\n    }\n\n    j.toDec = toDec;\n    j.toValues = toValues;\n\n})(jfp);\n\n(function(j){\n    'use strict';\n\n    function copyArray(valueSet){\n        return j.slice(0, valueSet);\n    }\n\n    function makeValueArray(value){\n        return j.not(j.isUndefined(value)) ? [value] : [];\n    }\n\n    function conj(value, dest){\n        return j.concat(copyArray(dest), makeValueArray(value));\n    }\n\n    function cons(value, source){\n        return j.concat(makeValueArray(value), source);\n    }\n\n    function each(userFn, userArray){\n        var sanitizedArray = j.either([], userArray),\n            sanitizedFn = j.either(j.identity, userFn),\n            i;\n\n        for(i = 0; i < sanitizedArray.length; i++){\n            if(sanitizedFn(sanitizedArray[i], i) === false){\n                break;\n            }\n        }\n\n        return sanitizedArray;\n    }\n\n    function filter(predicate, userArray){\n        var result = [];\n\n        function filterFn(value){\n            j.when(predicate(value), function(){\n                result = conj(value, result);\n            });\n        }\n\n        each(filterFn, userArray);\n\n        return result;\n    }\n\n    function find(predicate, valueSet){\n        var finalValue = null;\n\n        function findFn(value){\n            return j.not(j.when(predicate(value), function(){\n                            finalValue = value;\n                            return true;\n                         }));\n        }\n\n        each(findFn, j.either([], valueSet));\n\n        return finalValue;\n    }\n\n    function first(values){\n        return j.isArray(values) ? j.either(null, values[0]) : null;\n    }\n\n    function lastIndex(values){\n        return j.isArray(values) ? values.length - 1 : null;\n    }\n\n    function last(values){\n        return j.isArray(values) ? values[lastIndex(values)] : null;\n    }\n\n    function drop(index, valueSet){\n        var finalIndex = lastIndex(valueSet),\n\n            sanitizedIndex = (index === 0 || index === finalIndex) ?\n                index : j.either(1, index) - 1,\n\n            firstArray = (sanitizedIndex === 0) ?\n                [] : j.slice(0, valueSet, sanitizedIndex),\n\n            secondArray = (sanitizedIndex === finalIndex)?\n                [] : j.slice(sanitizedIndex + 1, valueSet);\n\n        return j.concat(firstArray, secondArray);\n    }\n\n    function dropLast(valueSet){\n        return drop(lastIndex(valueSet), valueSet);\n    }\n\n    function map(userFn, userArray){\n        var finalArray = [];\n\n        function mapFn(value){\n            finalArray = conj(userFn(value), finalArray);\n        }\n\n        each(mapFn, userArray);\n\n        return finalArray;\n    }\n\n    function nth(index, valueSet){\n        return j.either(null, j.either([], valueSet)[index]);\n    }\n\n    function rest(values){\n        return j.slice(1, values);\n    }\n\n    function take(count, values){\n        return j.isArray(values) ? j.slice(0, values, count) : null;\n    }\n\n    function some(predicate, valueSet){\n        var satisfied = false;\n\n        function someFn(value, index){\n            satisfied = predicate(value, index);\n            return !satisfied;\n        }\n\n        each(someFn, valueSet);\n\n        return satisfied;\n    }\n\n    function contains(value, valueSet){\n        return some(j.partial(j.equal, value), valueSet);\n    }\n\n    function every(predicate, valueSet){\n        var satisfied = false;\n\n        function everyFn(value, index){\n            satisfied = predicate(value, index);\n            return satisfied;\n        }\n\n        each(everyFn, valueSet);\n\n        return satisfied;\n    }\n\n    function numberOf(predicate, valueSet){\n        var accumulator = 0;\n\n        function accumulate(value){\n            accumulator += predicate(value) ? 1 : 0;\n        }\n\n        each(accumulate, valueSet);\n\n        return accumulator;\n    }\n\n    function naturalComparator(a, b){\n        var comparison = a < b ? -1 : 1;\n        return a === b ? 0 : comparison;\n    }\n\n    function sort(optionValue, valueSet){\n        var comparator = j.isFunction(optionValue) ? optionValue : naturalComparator,\n            finalSet = j.isArray(optionValue) ? j.slice(0, optionValue) : j.slice(0, valueSet);\n\n        return finalSet.sort(comparator);\n    }\n\n    function union(set1, set2){\n        return j.compose(j.unique, j.concat)(set1, set2);\n    }\n\n    function buildValueHash(valueSet){\n        var finalHash = {};\n\n        j.each(function(value){\n            finalHash[value] = true;\n        }, valueSet);\n\n        return finalHash;\n    }\n\n    function intersect(set1, set2){\n        var finalSet = [],\n            seta = j.unique(j.either([], set1)),\n            setbHash = buildValueHash(j.either([], set2)),\n            i = 0;\n\n        for(; i < seta.length; i++){\n            if(setbHash[seta[i]]){\n                finalSet.push(seta[i]);\n            }\n        }\n\n        return finalSet;\n    }\n\n    function difference(set1, set2){\n        var finalSet = [],\n            seta = j.unique(j.either([], set1)),\n            setbHash = buildValueHash(j.either([], set2)),\n            i = 0;\n\n        for(; i < seta.length; i++){\n            if(!setbHash[seta[i]]){\n                finalSet.push(seta[i]);\n            }\n        }\n\n        return finalSet;\n    }\n\n    function symmetricDifference(set1, set2){\n        var setUnion = union(set1, set2),\n            setIntersection = intersect(set1, set2);\n\n        return difference(setUnion, setIntersection);\n    }\n\n    j.conj = conj;\n    j.cons = cons;\n    j.contains = contains;\n    j.copyArray = copyArray;\n    j.difference = difference;\n    j.drop = drop;\n    j.dropFirst = j.partial(drop, 0);\n    j.dropLast = dropLast;\n    j.each = each;\n    j.every = every;\n    j.filter = filter;\n    j.find = find;\n    j.first = first;\n    j.init = j.dropLast;\n    j.intersect = intersect;\n    j.last = last;\n    j.lastIndex = lastIndex;\n    j.map = map;\n    j.nth = nth;\n    j.numberOf = numberOf;\n    j.rest = rest;\n    j.sort = sort;\n    j.some = some;\n    j.symmetricDifference = symmetricDifference;\n    j.take = take;\n    j.union = union;\n\n})(jfp);\n\n\n(function(j){\n    'use strict';\n\n    function pick(key, valueMap){\n        var pickResult = j.either({}, valueMap)[key];\n        return j.isUndefined(pickResult) ? null : pickResult;\n    }\n\n    function pluckKeys(keys, valueMap){\n        var finalOutput = {},\n            sanitizedKeys = j.either([], keys),\n            sanitizedValueMap = j.either({}, valueMap);\n\n        function captureValue(key){\n            finalOutput[key] = sanitizedValueMap[key];\n        }\n\n        j.each(captureValue, sanitizedKeys);\n\n        return finalOutput;\n    }\n\n    function pluck(key, valueMap){\n        return pluckKeys([key], valueMap);\n    }\n\n    function merge(defaultObj, mergeData){\n        var finalObj = {},\n            key;\n\n        for(key in j.either({}, defaultObj)){\n            finalObj[key] = defaultObj[key];\n        }\n\n        for(key in j.either({}, mergeData)){\n            finalObj[key] = mergeData[key];\n        }\n\n        return j.eitherIf(null, finalObj, j.isTruthy(defaultObj));\n    }\n\n    j.merge = merge;\n    j.pick = pick;\n    j.pluck = pluck;\n    j.pluckKeys = pluckKeys;\n\n})(jfp);\n\n\n(function(j){\n    'use strict';\n\n    //This is complicated and I don't expect people to grok it on first read.\n    function curry(userFn){\n        var args = j.slice(1, arguments),\n            argumentCount = j.shortCircuit(0, j.countArguments, userFn),\n            appliedFn = (args.length < argumentCount) ? j.apply(j.partial, j.concat([curry, userFn], args)) : null,\n            result = (!!userFn && args.length >= argumentCount) ? j.apply(userFn, args) : null;\n\n        return j.either(appliedFn, result);\n    }\n\n    //zOMG! TAIL RECURSION\n    function recursor(recurFn){\n        var args = j.slice(1, arguments);\n\n        //This is to make the returned function distinct and identifiable.\n        return function recursorFn(localRecursor){\n            return j.apply(recurFn, j.concat([localRecursor], args));\n        };\n    }\n\n    function verifyRecurValue(recurValue){\n        return typeof recurValue === 'function' &&\n            recurValue.toString().match('recursorFn');\n    }\n\n    //Tail optimization with managed recursion is really complicated.\n    //Please don't muck with this unless you TRULY understand what is happening.\n    function recur(userFn){\n        var recursingFn = j.either(j.identity, userFn),\n            localRecursor = j.partial(recursor, recursingFn),\n            recurValue = j.apply(localRecursor, j.slice(1, arguments));\n\n        while(verifyRecurValue(recurValue = recurValue(localRecursor)) && recursingFn !== j.identity);\n\n        return recurValue;\n    }\n\n    function reduce(userFn, values, initialState){\n        var initialValue = j.either(j.first(values), initialState),\n            remainder = initialValue === initialState ? values : j.rest(values);\n            \n        function reducer(recur, reduction, collection){\n            return (collection.length) ?\n                recur(userFn(reduction, j.first(collection)), j.rest(collection)) :\n                reduction;\n        }\n\n        return (!!values && values.length > 0) ? recur(reducer, initialValue, remainder) : null;\n    }\n\n    //Performs 'and' operation on valueSet\n    function ander(recur, current, valueSet){\n        return (valueSet.length === 0) ?\n            current :\n            recur(current && !!j.first(valueSet), j.rest(valueSet));\n    }\n\n    function and(){\n        return recur(ander, true, j.slice(0, arguments));\n    }\n\n    //Performs 'or' operation on valueSet\n    function orer(recur, current, valueSet){\n        return (valueSet.length === 0) ?\n            current :\n            recur(current || !!j.first(valueSet), j.rest(valueSet));\n    }\n\n    function or(){\n        return recur(orer, false, j.slice(0, arguments));\n    }\n\n    function xor(a, b){\n        return !!(or(a, b) && j.not(j.isTruthy(a) === j.isTruthy(b)));\n    }\n\n    //Produces a function that returns f(g(x))\n    function compositor(f, g){\n        return function(){\n            return f(j.apply(g, j.slice(0, arguments)));\n        };\n    }\n\n    function compose(){\n        var args = j.slice(0, arguments);\n        return (args.length >= 1) ? reduce(compositor, args) : j.identity;\n    }\n\n    function pipeline(value){\n        return j.apply(compose, j.slice(1, arguments).reverse())(value);\n    }\n\n    function unique(valueSet){\n        var values = j.slice(0, valueSet).sort(),\n            finalValues = [];\n\n        function operator(value){\n            finalValues = j.eitherIf(finalValues,\n                                     j.conj(value, finalValues),\n                                     j.compose(j.not,\n                                               j.partial(j.equal, value),\n                                               j.last)(finalValues));\n        }\n\n        j.each(operator, values);\n\n        return finalValues;\n    }\n\n    function partialReverse(){\n        var args = j.slice(0, arguments),\n            partialAndReverse = j.compose(j.reverseArgs, j.partial);\n            \n        return j.apply(partialAndReverse, args);\n    }\n\n    function deref(baseData, key, defaultValue){\n        var sanitizedDefault = j.either(null, defaultValue),\n            keyTokens = j.either('', key).split('.'),\n            derefValue = j.reduce(j.reverseArgs(j.pick), keyTokens, baseData),\n            returnValue = Boolean(key) ? derefValue : baseData;\n        \n        returnValue = !Boolean(baseData) ? null : returnValue;\n        \n        return returnValue === null ? sanitizedDefault : returnValue;\n    }\n\n    j.and = and;\n    j.compact = j.partial(j.filter, j.isTruthy);\n    j.compose = compose;\n    j.curry = curry;\n    j.deref = deref;\n    j.or = or;\n    j.partialReverse = partialReverse;\n    j.pipeline = pipeline;\n    j.recur = recur;\n    j.reduce = reduce;\n    j.unique = unique;\n    j.xor = xor;\n\n})(jfp);\n\n\n(function(j){\n    'use strict';\n\n//This is a recursive add fn\n    function adder(recur, current, valueSet){\n        return (valueSet.length === 0) ?\n                current :\n                recur(current + j.first(valueSet), j.rest(valueSet));\n    }\n    \n    function add(a, b){\n        return j.recur(adder, 0, j.slice(0, arguments));\n    }\n    \n    //This is a recursive divide fn\n    function divider(recur, current, valueSet){\n        return (valueSet.length === 0) ?\n                current :\n                recur(current / j.first(valueSet), j.rest(valueSet));\n    }\n    \n    function divide(){\n        var args = j.slice(0, arguments),\n            first = args.length ? j.first(args) : 1;\n        return j.recur(divider, first, j.rest(args));\n    }\n    \n    //This is a recursive multiply fn\n    function multiplier(recur, current, valueSet){\n        return (valueSet.length === 0) ?\n                current :\n                recur(current * j.first(valueSet), j.rest(valueSet));\n    }\n    \n    function multiply(){\n        return j.recur(multiplier, 1, j.slice(0, arguments));\n    }\n    \n    //This is a recursive subtraction fn\n    function subtractor(recur, current, valueSet){\n        return (valueSet.length === 0) ?\n                current :\n                recur(current - j.first(valueSet), j.rest(valueSet));\n    }\n    \n    function subtract(){\n        var args = j.slice(0, arguments),\n            first = args.length ? j.first(args) : 0;\n        return j.recur(subtractor, first, j.rest(args));\n    }\n\n    //This is a recursive constructor function for ranges\n    function rangeRecurCheck(m, n, inc){\n        return inc > 0 ? (m + inc) < n : (m + inc) > n;\n    }\n\n    function rangeBuilder(recur, currentRange, m, n, inc){\n        var finalRange = rangeRecurCheck(m - inc, n, inc) ?\n                            j.conj(m, currentRange) :\n                            currentRange;\n        \n        return rangeRecurCheck(m, n, inc) ?\n                recur(finalRange, m + inc, n, inc) :\n                finalRange;\n    }\n    \n    function range(a, b, inc){\n        var start = j.isUndefined(b) ? 0 : a,\n            end = j.isUndefined(b) ? j.either(0, a) : b,\n            increment = (!inc) ? 1 : inc;\n            \n        return j.recur(rangeBuilder,\n                       [],\n                       j.either(0, start),\n                       j.either(0, end),\n                       increment);\n    }\n\n    function mod(a, b){\n        return j.isUndefined(b) ? j.either(0, a) : a%b;\n    }\n\n    function modulo(a, b){\n        var _a = j.either(0, a),\n            _b = j.either(0, b);\n\n        return (_a > 0) ? mod(_a, _b) : _b * (Math.floor(Math.abs(_a)/_b) + 1) + _a;\n    }\n\n    function truncate(value){\n        return (value > 0) ? Math.floor(value) : Math.floor(value) + 1;\n    }\n    \n    function max(a, b){\n        var maxValue = -Number.MAX_VALUE,\n            _a = j.isUndefined(a) ? maxValue : a,\n            _b = j.isUndefined(b) ? maxValue : b;\n            \n        maxValue = (_a > maxValue) ? _a : maxValue;\n        maxValue = (_b > maxValue) ? _b : maxValue;\n        \n        return maxValue;\n    }\n    \n    function min(a, b){\n        var minValue = Number.MAX_VALUE,\n            _a = j.isUndefined(a) ? minValue : a,\n            _b = j.isUndefined(b) ? minValue : b;\n        \n        minValue = (_a < minValue) ? _a : minValue;\n        minValue = (_b < minValue) ? _b : minValue;\n        \n        return minValue;\n    }\n\n    function fac(value){\n        var factorial = j.compose(j.partial(j.reduce, multiply),\n                                  j.partial(range, 1),\n                                  j.partial(add, 1));\n\n        return j.either(1, j.when(j.greater(value, 0), factorial, value));\n    }\n\n    j.add = add;\n    j.divide = divide;\n    j.fac = fac;\n    j.inc = j.partial(j.add, 1);\n    j.max = max;\n    j.min = min;\n    j.mod = mod;\n    j.modulo = modulo;\n    j.multiply = multiply;\n    j.range = range;\n    j.subtract = subtract;\n    j.truncate = truncate;\n\n})(jfp);\n\n\n(function(j){\n\n    function throwWhenNotComparable(a, b){\n        j.when(j.isUndefined(a) || j.isUndefined(b), function(){\n            throw new TypeError('Inequality comparisons require two values');\n        });\n    }\n\n    function equal(a, b){\n        var isNotUndefined = j.compose(j.not, j.isUndefined);\n        return (isNotUndefined(a) && isNotUndefined(b)) ? a === b : false;\n    }\n\n    function greater(a, b){\n        throwWhenNotComparable(a, b);\n        return a > b;\n    }\n\n    function less(a, b){\n        throwWhenNotComparable(a, b);\n        return a < b;\n    }\n\n    function isEven(value){\n        return equal(0, j.mod(value, 2));\n    }\n\n    function isPositive(value){\n        return greater(value, 0);\n    }\n\n    function isZero(value){\n        return value === 0;\n    }\n\n    function isNegative(value){\n        return j.compose(j.not, j.or)(isPositive(value), isZero(value));\n    }\n\n    function isInt(value){\n        return equal(j.truncate(value), value);\n    }\n\n    j.isEven = isEven;\n    j.isInt = isInt;\n    j.isNegative = isNegative;\n    j.isNonNegative = j.compose(j.not, isNegative);\n    j.isNonPositive = j.compose(j.not, isPositive);\n    j.isNonZero = j.compose(j.not, isZero);\n    j.isOdd = j.compose(j.not, isEven);\n    j.isPositive = isPositive;\n    j.isZero = isZero;\n\n    //Special case predicate naming is intended for these functions\n    //There is a general expectation that these not be named with 'is'\n    j.equal = equal;\n    j.geq = j.compose(j.not, less);\n    j.greater = greater;\n    j.leq = j.compose(j.not, greater);\n    j.less = less;\n\n})(jfp);\n\nvar j = jfp;\n\nif(typeof module !== 'undefined' && !!module.exports){\n    module.exports = j;\n}\n\n\n"]}