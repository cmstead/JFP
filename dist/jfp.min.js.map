{"version":3,"file":"jfp.min.js","sources":["jfp.js"],"names":["jfp","resolveFunction","functionValue","curryAlias","args","slice","arguments","apply","curry","pickAlias","key","value","cleanKey","Boolean","pick","partial","chooseResolver","resolveToPick","charAt","resolver","j","isUndefined","undefined","not","equal","a","b","missingValues","isType","typeString","getType","isNumeric","pattern","number","numericString","match","isTruthy","typeCheckReduction","result","isPrimitive","primitiveNames","reduce","bind","isTuple","size","list","length","hasFirst","either","isEmptyString","isNull","isArray","isBoolean","isFunction","isNumber","isObject","isString","isPair","isSingle","isTriple","identity","valueType","Object","prototype","toString","call","empty","array","boolean","null","object","string","maybe","type","typeOkay","defaultValue","testValue","begin","valueSet","boundaries","Array","always","output","shortCircuit","fn","optionValue","userFn","when","checkValue","eitherIf","predicateValue","safePredicate","eitherWhen","sanitizedFn","concat","original","extension","sanitizedExtension","i","push","basePartial","direction","appliedFunction","applicationArgs","splitPartial","baseFn","left","right","leftApplied","reverseArgs","reverse","countArguments","execute","rpartial","toDec","parseInt","copyArray","makeValueArray","conj","dest","cons","source","first","values","lastIndex","last","drop","index","splice","dropLast","nth","rest","take","count","naturalComparator","comparison","sort","dropFirst","init","valueMap","pickResult","getKeys","obj","keys","mergeValue","dataObj","mergedObj","merge","baseObj","mergeData","finalObj","done","appliedFn","recursor","recurFn","recursorFn","localRecursor","verifyRecurValue","recurValue","recur","recursingFn","reducer","reduction","collection","hasInitialState","initialValue","remainder","compositor","f","g","clean","compose","pipeline","partialReverse","clone","originalValue","depth","depthOkay","geq","copyOkay","copy","container","each","newDepth","err","RangeError","maybeType","eitherType","mapper","finalArray","map","mapperFn","filterer","userPredicate","filter","predicate","filterFn","compact","valueList","predicateAccumulator","total","sanitizedTotal","numberOf","accumulator","captureUnique","finalList","unique","union","set1","set2","addToHash","finalObject","buildValueHash","captureIntersection","valueHash","intersect","setHash","captureDifference","difference","symmetricDifference","setUnion","setIntersection","everyReducer","every","finder","find","someRecur","some","contains","partitioner","partitions","partition","sanitizedPredicate","multiPartitioner","partitionPredicate","computedPartitions","multiPartition","predicateArgs","sanitizedArgs","sanitizedList","eachFn","userArray","continuing","inc","sanitizedArray","takeEltsUntil","aggregate","elt","takeUntil","dropEltsUntil","dropUntil","zipStep","zipElts","lists","zip","lista","listb","ander","orer","reduceConditions","conditionArgs","operator","initialCondition","and","or","xor","equivalent","composePredicate","predicateFn","predicateList","combinator","lastIsCombinator","executor","keyReduction","toValues","dereferencer","dataObject","token","trim","internalDeref","baseData","sanitizedDefault","keyTokens","split","deref","sanitizedKey","sanitizedData","plucker","pluckKeys","sanitizedObject","pluck","transformer","transformation","transform","adder","current","add","divider","divide","multiplier","multiply","subtractor","subtract","rangeRecurCheck","m","n","rangeBuilder","currentRange","finalRange","range","start","end","increment","mod","modulo","_a","_b","Math","floor","abs","truncate","max","maxValue","Number","MAX_VALUE","min","minValue","fac","factorial","greater","throwWhenNotComparable","TypeError","less","isInt","isMultipleOf","base","test","isNegative","isPositive","isZero","isEven","isNonNegative","isNonPositive","isNonZero","isOdd","leq","attachFunction","module","addModule","provider","moduleKeys","exports","define","amd"],"mappings":"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","sourcesContent":["var jfp = (function(){\r\n    'use strict';\r\n    \r\n    function resolveFunction(functionValue){\r\n        return typeof functionValue === 'string' ? jfp[functionValue] : functionValue;\r\n    }\r\n    \r\n    function curryAlias(){\r\n        var args = jfp.slice(0, arguments);\r\n\r\n        args[0] = resolveFunction(args[0]);\r\n        \r\n        return jfp.apply(jfp.curry, args);\r\n    }\r\n    \r\n    function pickAlias(key, value){\r\n        var cleanKey = key.slice(1);\r\n        \r\n        return Boolean(value) ? jfp.pick(cleanKey, value) : jfp.partial(jfp.pick, cleanKey);\r\n    }\r\n    \r\n    function chooseResolver(value){\r\n        var resolveToPick = typeof value === 'string' && value.charAt(0) === ':';\r\n        \r\n        return resolveToPick ? pickAlias : curryAlias;\r\n    }\r\n    \r\n    return function(){\r\n        var args = jfp.slice(0, arguments),\r\n            resolver = chooseResolver(args[0]);\r\n        \r\n        return jfp.apply(resolver, args);\r\n    };\r\n    \r\n})();\r\n\r\n(function(j){\r\n    'use strict';\r\n\r\n    function isUndefined(value){\r\n        return value === undefined;\r\n    }\r\n    \r\n    function not(value){\r\n        return !Boolean(value);\r\n    }\r\n    \r\n    function equal (a, b) {\r\n        var missingValues = isUndefined(a) || isUndefined(b);\r\n        return not(missingValues) && a === b;\r\n    }\r\n\r\n    function isType (typeString, value) {\r\n        return j.equal(j.getType(value), typeString);\r\n    }\r\n    \r\n    function isNumeric(value){\r\n        var pattern = /^(0x)?[0-9]+((\\.[0-9]+)|(e\\-?[0-9]+))?$/,\r\n            number = isType('number', value),\r\n            numericString = isType('string', value) && Boolean(value.match(pattern));\r\n            \r\n        return number || numericString;\r\n    }\r\n    \r\n    function isTruthy(value){\r\n        return Boolean(value);\r\n    }\r\n    \r\n    function typeCheckReduction (value, result, typeString){\r\n        return result || isType(typeString, value);\r\n    }\r\n    \r\n    function isPrimitive (value) {\r\n        var primitiveNames = ['number',\r\n                              'string',\r\n                              'boolean',\r\n                              'undefined'];\r\n\r\n        return primitiveNames.reduce(typeCheckReduction.bind(null, value), equal(null, value));\r\n    }\r\n\r\n    function isTuple (size, list) {\r\n        return isType('array', list) && list.length === size;\r\n    }\r\n    \r\n    function hasFirst (list) {\r\n        return not(isUndefined(j.either([], list, 'array')[0]));\r\n    }\r\n\r\n    // Equality\r\n    j.equal = equal;\r\n    j.isEmptyString = equal.bind(null, '');\r\n    j.isNull = equal.bind(null, null);\r\n\r\n    // Types\r\n    j.isType = isType;\r\n    j.isArray = isType.bind(null, 'array');\r\n    j.isBoolean = isType.bind(null, 'boolean');\r\n    j.isFunction = isType.bind(null, 'function');\r\n    j.isNumber = isType.bind(null, 'number');\r\n    j.isObject = isType.bind(null, 'object');\r\n    j.isString = isType.bind(null, 'string');\r\n    j.isUndefined = isType.bind(null, 'undefined');\r\n\r\n    // Tuples\r\n    j.isTuple = isTuple;\r\n    j.isPair = isTuple.bind(null, 2);\r\n    j.isSingle = isTuple.bind(null, 1);\r\n    j.isTriple = isTuple.bind(null, 3);\r\n\r\n    //Other predicates\r\n    j.hasFirst = hasFirst;\r\n    j.isNumeric = isNumeric;\r\n    j.isPrimitive = isPrimitive;\r\n    j.isTruthy = isTruthy;\r\n    j.not = not;\r\n\r\n})(jfp);\r\n\r\n\r\n(function(j){\r\n    'use strict';\r\n\r\n    function identity(value){\r\n        return value;\r\n    }\r\n\r\n    function getType (value) {\r\n        var valueType = typeof value,\r\n            isArray = valueType === 'object' && Object.prototype.toString.call(value) === '[object Array]';\r\n            \r\n        return isArray ? 'array' : valueType;\r\n    }\r\n\r\n    function empty (typeString) {\r\n        return {\r\n                array: [],\r\n                boolean: false,\r\n                'null': null,\r\n                number: 0,\r\n                object: {},\r\n                string: ''\r\n            }[typeString];\r\n    }\r\n\r\n    function maybe(value){\r\n        var type = arguments[1],\r\n            valueType = getType(value),\r\n            typeOkay = valueType === type || valueType === 'array' && type === 'object';\r\n        \r\n        return typeOkay || (!type && Boolean(value)) ? value : null;\r\n    }\r\n\r\n    function either(defaultValue, testValue){\r\n        var type = arguments[2];\r\n        return maybe(testValue, type) === null ? defaultValue : testValue;\r\n    }\r\n    \r\n    function slice (begin, valueSet) {\r\n        var boundaries = !arguments[2] ? [begin] : [begin, arguments[2]];\r\n        return Array.prototype.slice.apply(either([], valueSet), boundaries);\r\n    }\r\n\r\n    function always (value) {\r\n        var output = getType(value) === 'undefined' ? null : value;\r\n        return identity.bind(null, output);\r\n    }\r\n\r\n    function shortCircuit(defaultValue, fn, optionValue){\r\n        var type = optionValue === 0 ? 'number' : arguments[3];\r\n        return maybe(optionValue, type) !== null ? fn(optionValue) : defaultValue;\r\n    }\r\n\r\n    function apply(userFn, args){\r\n        return userFn.apply(null, args);\r\n    }\r\n\r\n    function when(checkValue, userFn){\r\n        return j.isTruthy(checkValue) ? apply(userFn, slice(2, arguments)) : null;\r\n    }\r\n\r\n    function eitherIf(defaultValue, testValue, predicateValue){\r\n        var safePredicate = j.isUndefined(predicateValue) ? true : predicateValue;\r\n\r\n        return j.either(defaultValue, j.when(safePredicate, j.partial(j.identity, testValue)));\r\n    }\r\n\r\n    function eitherWhen(defaultValue, predicateValue, userFn){\r\n        var sanitizedFn = eitherIf(j.identity, userFn, j.isFunction(userFn));\r\n\r\n        return j.either(defaultValue, j.when(predicateValue, sanitizedFn));\r\n    }\r\n\r\n    function concat(original, extension){\r\n        var result = slice(0, either([], original)),\r\n            sanitizedExtension = either([], extension),\r\n            i;\r\n\r\n        //This is the most performant way to handle concatenation. Trust me.\r\n        for(i = 0; i < sanitizedExtension.length; i++){\r\n            result.push(sanitizedExtension[i]);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    function basePartial(direction, userFn){\r\n        var args = slice(2, arguments);\r\n\r\n        return function appliedFunction(){\r\n            var applicationArgs = (direction === 'left') ?\r\n                                    concat(args, slice(0, arguments)) :\r\n                                    concat(slice(0, arguments), args);\r\n\r\n            return apply(userFn, applicationArgs);\r\n        };\r\n    }\r\n\r\n    function splitPartial (baseFn, left, right) {\r\n        var leftApplied = apply(basePartial, concat(['left', baseFn], left));\r\n        return apply(basePartial, concat(['right', leftApplied], right));\r\n    }\r\n\r\n    function reverseArgs(userFn){\r\n        return function(){\r\n            return j.apply(userFn, j.slice(0, arguments).reverse());\r\n        };\r\n    }\r\n\r\n    function countArguments(userFn){\r\n        return either(function(){}, userFn).length;\r\n    }\r\n\r\n    function execute(userFn){\r\n        return j.apply(userFn, j.slice(1, arguments));\r\n    }\r\n    \r\n    j.always = always;\r\n    j.apply = apply;\r\n    j.concat = concat;\r\n    j.countArguments = countArguments;\r\n    j.either = either;\r\n    j.eitherIf = eitherIf;\r\n    j.eitherWhen = eitherWhen;\r\n    j.empty = empty;\r\n    j.execute = execute;\r\n    j.getType = getType;\r\n    j.identity = identity;\r\n    j.maybe = maybe;\r\n    j.partial = basePartial('left', basePartial, 'left');\r\n    j.reverseArgs = reverseArgs;\r\n    j.rpartial = basePartial('left', basePartial, 'right');\r\n    j.shortCircuit = shortCircuit;\r\n    j.slice = slice;\r\n    j.splitPartial = splitPartial;\r\n    j.when = when;\r\n\r\n})(jfp);\r\n\r\n\r\n(function(j){\r\n    'use strict';\r\n\r\n    function toDec(value){\r\n        return (j.isNumeric(value)) ? parseInt(value, 10) : null;\r\n    }\r\n\r\n    j.toDec = toDec;\r\n\r\n})(jfp);\r\n\r\n(function(j){\r\n    'use strict';\r\n\r\n    function copyArray(valueSet){\r\n        return j.slice(0, valueSet);\r\n    }\r\n\r\n    function makeValueArray(value){\r\n        return j.not(j.isUndefined(value)) ? [value] : [];\r\n    }\r\n\r\n    function conj(value, dest){\r\n        return j.concat(copyArray(dest), makeValueArray(value));\r\n    }\r\n\r\n    function cons(value, source){\r\n        return j.concat(makeValueArray(value), source);\r\n    }\r\n\r\n    function first(values){\r\n        return j.isArray(values) ? j.either(null, values[0]) : null;\r\n    }\r\n\r\n    function lastIndex(values){\r\n        return j.isArray(values) ? values.length - 1 : null;\r\n    }\r\n\r\n    function last(values){\r\n        return j.isArray(values) ? values[lastIndex(values)] : null;\r\n    }\r\n\r\n    function drop (index, list) {\r\n        var result = j.slice(0, j.either([], list, 'array'));\r\n        \r\n        result.splice(j.either(0, index, 'number'), 1);\r\n        \r\n        return result;\r\n    }\r\n\r\n    function dropLast(valueSet){\r\n        return drop(lastIndex(valueSet), valueSet);\r\n    }\r\n\r\n    function nth(index, valueSet){\r\n        return j.either(null, j.either([], valueSet)[index]);\r\n    }\r\n\r\n    function rest(values){\r\n        return j.slice(1, values);\r\n    }\r\n\r\n    function take(count, values){\r\n        return j.isArray(values) ? j.slice(0, values, count) : null;\r\n    }\r\n\r\n    function naturalComparator(a, b){\r\n        var comparison = a < b ? -1 : 1;\r\n        return a === b ? 0 : comparison;\r\n    }\r\n\r\n    function sort(optionValue, valueSet){\r\n        return j.slice(0, j.either(valueSet, optionValue, 'array'))\r\n                .sort(j.either(naturalComparator, optionValue, 'function'));\r\n    }\r\n\r\n    j.conj = conj;\r\n    j.cons = cons;\r\n    j.copyArray = copyArray;\r\n    j.drop = drop;\r\n    j.dropFirst = j.partial(drop, 0);\r\n    j.dropLast = dropLast;\r\n    //j.each = each;\r\n    j.first = first;\r\n    j.init = j.dropLast;\r\n    j.last = last;\r\n    j.lastIndex = lastIndex;\r\n    j.nth = nth;\r\n    j.rest = rest;\r\n    j.sort = sort;\r\n    j.take = take;\r\n\r\n})(jfp);\r\n\r\n\r\n(function(j){\r\n    'use strict';\r\n\r\n    function pick(key, valueMap){\r\n        var pickResult = j.either({}, valueMap)[key];\r\n        return j.isUndefined(pickResult) ? null : pickResult;\r\n    }\r\n\r\n    function getKeys (obj) {\r\n        return Object.keys(j.either({}, obj, 'object'));\r\n    }\r\n\r\n    function mergeValue (dataObj, mergedObj, key) {\r\n        mergedObj[key] = dataObj[key];\r\n        return mergedObj;\r\n    }\r\n\r\n    function merge(baseObj, mergeData){\r\n        var finalObj = null;\r\n        \r\n        if (j.maybe(baseObj) !== null) {\r\n            finalObj = getKeys(baseObj).reduce(j.partial(mergeValue, baseObj), {});\r\n            finalObj = getKeys(mergeData).reduce(j.partial(mergeValue, mergeData), finalObj);\r\n        }\r\n\r\n        return finalObj;\r\n    }\r\n\r\n    j.getKeys = getKeys;\r\n    j.merge = merge;\r\n    j.pick = pick;\r\n\r\n})(jfp);\r\n\r\n\r\n(function(j){\r\n    'use strict';\r\n\r\n    //This is complicated and I don't expect people to grok it on first read.\r\n    function curry(userFn){\r\n        var args = j.slice(1, arguments),\r\n            done = args.length >= j.countArguments(userFn),\r\n            appliedFn = !done ? j.apply(j.partial, j.concat([curry, userFn], args)) : null,\r\n            result = Boolean(userFn) && done ? j.apply(userFn, args) : null;\r\n\r\n        return j.either(appliedFn, result);\r\n    }\r\n\r\n    //zOMG! TAIL OPTIMIZED RECURSION\r\n    function recursor(recurFn){\r\n        var args = j.slice(1, arguments);\r\n\r\n        //This is to make the returned function distinct and identifiable.\r\n        return function recursorFn(localRecursor){\r\n            return j.apply(recurFn, j.concat([localRecursor], args));\r\n        };\r\n    }\r\n\r\n    function verifyRecurValue(recurValue){\r\n        return typeof recurValue === 'function' &&\r\n            recurValue.toString().match('recursorFn');\r\n    }\r\n\r\n    //Tail optimization with managed recursion is really complicated.\r\n    //Please don't muck with this unless you TRULY understand what is happening.\r\n    function recur(userFn){\r\n        var recursingFn = j.either(j.identity, userFn, 'function'),\r\n            localRecursor = j.partial(recursor, recursingFn),\r\n            recurValue = j.apply(localRecursor, j.slice(1, arguments));\r\n\r\n        while(verifyRecurValue(recurValue = recurValue(localRecursor)) && recursingFn !== j.identity);\r\n\r\n        return recurValue;\r\n    }\r\n\r\n\t/*\r\n     * Reduce uses tail-optimized (while-trampolined, fully returning) recursion to resolve reductions.\r\n     * Reducer is a pure function for handling a single reduction step.\r\n     * Reduce manages the setup and recursion execution.\r\n     */\r\n    function reducer(userFn, recur, reduction, collection){\r\n        return collection.length === 0 ?\r\n                    reduction :\r\n                    recur(userFn(reduction, j.first(collection)),\r\n                          j.rest(collection));\r\n    }\r\n\r\n    function reduce(userFn, values){\r\n        var hasInitialState = !j.isUndefined(arguments[2]),\r\n            initialValue = !hasInitialState ? j.first(values) : arguments[2],\r\n            remainder = !hasInitialState ? j.rest(values) : values;\r\n\r\n        return (Boolean(values) && values.length > 0) ?\r\n                j.recur(j.partial(reducer, userFn), initialValue, remainder) :\r\n                initialValue;\r\n    }\r\n\r\n    //Produces a function that returns f(g(x))\r\n    function compositor(f, g){\r\n        var clean = j.splitPartial(j.either, [j.identity], ['function']);\r\n            \r\n        return function () {\r\n            return clean(f)(j.apply(clean(g), j.slice(0, arguments)));\r\n        };\r\n    }\r\n\r\n    function compose(){\r\n        return reduce(compositor, j.slice(0, arguments), j.identity);\r\n    }\r\n\r\n    function pipeline(value){\r\n        return j.apply(compose, j.slice(1, arguments).reverse())(value);\r\n    }\r\n\r\n    function partialReverse(){\r\n        return j.apply(j.compose(j.reverseArgs, j.partial),\r\n                       j.slice(0, arguments));\r\n    }\r\n\r\n    function clone (originalValue, depth) {\r\n        var depthOkay = j.isUndefined(depth) || j.geq(depth, 0),\r\n            copyOkay = j.isType('object', originalValue) || j.isType('array', originalValue);\r\n        \r\n        function copy () {\r\n            var keys = Object.keys(originalValue),\r\n                container = j.isArray(originalValue) ? [] : {};\r\n            \r\n            j.each(function (key) {\r\n                var newDepth = j.isNumber(depth) ? depth - 1 : undefined;\r\n                \r\n                try {\r\n                    container[key] = clone(originalValue[key], newDepth);\r\n                } catch (err) {\r\n                    throw new RangeError('Object contains circular reference or is too deep to clone.');\r\n                }\r\n                \r\n            }, keys);\r\n            \r\n            return container;\r\n        }\r\n        \r\n        return copyOkay && depthOkay ? copy() : originalValue;\r\n    }\r\n\r\n    function maybeType (typeString) {\r\n        return j.curry(function (value) {\r\n            return j.maybe(value, typeString);\r\n        }).apply(j, j.slice(1, arguments));\r\n    }\r\n    \r\n    function eitherType (typeString) {\r\n        return j.curry(function (defaultValue, optionValue) {\r\n            return j.either(defaultValue, optionValue, typeString);\r\n        }).apply(j, j.slice(1, arguments));\r\n    }\r\n    \r\n    j.clone = clone;\r\n    j.compose = compose;\r\n    j.curry = curry;\r\n    j.eitherType = eitherType;\r\n    j.maybeType = maybeType;\r\n    j.partialReverse = partialReverse;\r\n    j.pipeline = pipeline;\r\n    j.recur = recur;\r\n    j.reduce = reduce;\r\n\r\n})(jfp);\r\n\r\n\r\n(function(j){\r\n\t\r\n    /*\r\n     * Map uses reduce to produce a new, completely reference-decoupled list of values\r\n     * Mapper handles a single update step for the final output array\r\n     */\r\n    function mapper(userFn, finalArray, value){\r\n        finalArray.push(userFn(value));\r\n        return finalArray;\r\n    }\r\n\r\n    function map (userFn, values) {\r\n        var mapperFn = j.partial(mapper, userFn);\r\n        return j.reduce(mapperFn, values, []);\r\n    }\r\n    \r\n    /*\r\n     * Filter uses reduce to produce a new, completely reference-decoupled list of values\r\n     * Filterer handles a single update step for the final output array\r\n     */\r\n    function filterer(userPredicate, finalArray, value){\r\n        return userPredicate(value) ? j.conj(value, finalArray) : finalArray;\r\n    }\r\n\r\n    function filter (predicate, values) {\r\n        var filterFn = j.partial(filterer, predicate);\r\n        return j.reduce(filterFn, values, []);\r\n    }\r\n    \r\n    function compact(valueList){\r\n        return filter(j.isTruthy, valueList);\r\n    }\r\n\r\n    function predicateAccumulator(predicate, total, value){\r\n        var sanitizedTotal = j.either(0, total, 'number');\r\n        return predicate(value) ? sanitizedTotal + 1 : sanitizedTotal;\r\n    }\r\n\r\n    function numberOf(predicate, valueSet){\r\n        var accumulator = j.partial(predicateAccumulator, predicate);\r\n        return j.reduce(accumulator, j.either([], valueSet), 0);\r\n    }\r\n\r\n    function captureUnique(finalList, value){\r\n        return j.last(finalList) === value ? finalList : j.conj(value, finalList);\r\n    }\r\n    \r\n    function unique(valueSet){\r\n        return j.reduce(captureUnique, j.sort(j.slice(0, valueSet)), []);\r\n    }\r\n\r\n    function union(set1, set2){\r\n        return j.compose(j.unique, j.concat)(set1, set2);\r\n    }\r\n\r\n    function addToHash(finalObject, value){\r\n        finalObject[value] = true;\r\n        return finalObject;\r\n    }\r\n\r\n    function buildValueHash(valueList){\r\n        return j.either({}, j.reduce(addToHash, valueList, {}));\r\n    }\r\n\r\n    function captureIntersection(valueHash, finalList, value){\r\n        return valueHash[value] ? j.conj(value, finalList) : finalList;\r\n    }\r\n    \r\n    function intersect(set1, set2){\r\n        var setHash = buildValueHash(j.either([], set2));\r\n        return j.reduce(j.partial(captureIntersection, setHash), set1, []); \r\n    }\r\n\r\n    function captureDifference(valueHash, finalList, value){\r\n        return !valueHash[value] ? j.conj(value, finalList) : finalList;\r\n    }\r\n    \r\n    function difference(set1, set2){\r\n        var setHash = buildValueHash(j.either([], set2));\r\n        return j.reduce(j.partial(captureDifference, setHash), set1, []);\r\n    }\r\n\r\n    function symmetricDifference(set1, set2){\r\n        var setUnion = union(set1, set2),\r\n            setIntersection = intersect(set1, set2);\r\n\r\n        return difference(setUnion, setIntersection);\r\n    }\r\n\r\n    function everyReducer (predicate, result, valueList){\r\n        return result && predicate(valueList);\r\n    }\r\n\r\n    function every (predicate, valueList){\r\n        var reducer = j.partial(everyReducer, predicate);\r\n        return Boolean(j.reduce(reducer, valueList, true));\r\n    }\r\n\r\n    function finder (recur, predicate, valueList) {\r\n        var done = !Boolean(valueList) || valueList.length === 0,\r\n            result = done ? null : j.first(valueList);\r\n        \r\n        return done || predicate(result) ? result : recur(predicate, j.rest(valueList));\r\n    }\r\n\r\n    function find (predicate, valueList){\r\n        return j.recur(finder, predicate, valueList);\r\n    }\r\n\r\n    function someRecur(recur, predicate, valueList){\r\n        var done = valueList.length === 0,\r\n            result = done ? false : predicate(j.first(valueList));\r\n            \r\n        return result || done ? result : recur(predicate, j.rest(valueList));\r\n    }\r\n\r\n    function some(predicate, valueList){\r\n        return Boolean(j.recur(someRecur, predicate, valueList));\r\n    }\r\n    \r\n    function contains(value, valueList){\r\n        return some(j.partial(j.equal, value), valueList);\r\n    }\r\n\r\n    function partitioner(predicate, partitions, value){\r\n        var index = predicate(value) ? 0 : 1;\r\n\r\n        partitions[index].push(value);\r\n\r\n        return partitions;\r\n    }\r\n\r\n    function partition(predicate, list){\r\n        var sanitizedPredicate = j.either(j.identity, predicate, 'function');\r\n        \r\n        return j.reduce(j.partial(partitioner, sanitizedPredicate),\r\n                        j.either([], list),\r\n                        [[], []]);\r\n    }\r\n\r\n    function multiPartitioner(predicate, partitions, value){\r\n        var partitionPredicate = j.rpartial(predicate, value),\r\n            computedPartitions = j.dropLast(partitions);\r\n        \r\n        return j.concat(computedPartitions, partition(partitionPredicate, j.last(partitions)));\r\n    }\r\n    \r\n    function multiPartition(predicate, predicateArgs, list){\r\n        var sanitizedArgs = j.either([], predicateArgs),\r\n            sanitizedPredicate = j.either(j.identity, predicate),\r\n            sanitizedList = j.either([], list);\r\n            \r\n        return !Boolean(list) ?\r\n                [[], []] :\r\n                j.reduce(j.partial(multiPartitioner, sanitizedPredicate),\r\n                         sanitizedArgs,\r\n                         [sanitizedList]);\r\n    }\r\n\r\n    function eachFn(recur, userFn, userArray, index){\r\n        var continuing = j.hasFirst(userArray) && userFn(j.first(userArray), index) !== false;\r\n        return continuing ? recur(userFn, j.rest(userArray), j.inc(index)) : false;\r\n    }\r\n    \r\n    function each (userFn, userArray) {\r\n        var sanitizedFn = j.either(j.identity, userFn),\r\n            sanitizedArray = j.either([], userArray);\r\n        \r\n        j.recur(eachFn, sanitizedFn, sanitizedArray, 0);\r\n        return sanitizedArray;\r\n    }\r\n\r\n    function takeEltsUntil (recur, predicate, list, aggregate) {\r\n        var elt = j.first(list);\r\n        return predicate(elt) || j.equal(0, list.length) ? aggregate : recur(predicate, j.rest(list), j.conj(elt, aggregate));\r\n    }\r\n\r\n    function takeUntil (predicate, list) {\r\n        return j.recur(takeEltsUntil, predicate, list, []);\r\n    }\r\n\r\n    function dropEltsUntil (recur, predicate, list){\r\n        return predicate(j.first(list)) || j.equal(0, list.length) ? list : recur(predicate, j.rest(list));\r\n    }\r\n\r\n    function dropUntil (predicate, list){\r\n        return j.recur(dropEltsUntil, predicate, list);\r\n    }\r\n\r\n    function zipStep (aggregate, list){\r\n        return [j.conj(j.first(list), aggregate[0]),\r\n                j.conj(j.rest(list), aggregate[1])];\r\n    }\r\n\r\n    function zipElts (recur, aggregate, lists){\r\n        var reduction = j.reduce(zipStep, lists, [[], []]);\r\n        return j.equal(0, lists[0].length) ? aggregate : recur(j.conj(reduction[0], aggregate), reduction[1]);\r\n    }\r\n\r\n    function zip (lista, listb){\r\n        var lists = j.slice(0, arguments);\r\n        return j.equal(0, lists.length) ? [] : j.recur(zipElts, [], lists);\r\n    }    \r\n    \r\n    j.contains = contains;\r\n    j.compact = compact;\r\n    j.difference = difference;\r\n    j.dropUntil = dropUntil;\r\n    j.each = each;\r\n    j.every = every;\r\n\tj.filter = filter;\r\n    j.find = find;\r\n    j.intersect = intersect;\r\n\tj.map = map;\r\n\tj.multiPartition = multiPartition;\r\n\tj.numberOf = numberOf;\r\n    j.partition = partition;\r\n    j.some = some;\r\n    j.symmetricDifference = symmetricDifference;\r\n    j.takeUntil = takeUntil;\r\n    j.union = union;\r\n    j.unique = unique;\r\n    j.zip = zip;\r\n\r\n})(jfp);\r\n\r\n(function (j) {\r\n\t'use strict';\r\n\t\r\n\t//Performs 'and' operation on valueSet\r\n    function ander(a, b){\r\n        return a && b;\r\n    }\r\n\r\n    function orer(a, b){\r\n        return a || b;\r\n    }\r\n\r\n    function reduceConditions(conditionArgs, operator, initialCondition) {\r\n        return j.pipeline(conditionArgs,\r\n                          j.partial(j.slice, 0),\r\n                          j.partial(j.map, Boolean),\r\n                          j.splitPartial(j.reduce, [operator], [initialCondition]),\r\n                          Boolean);\r\n    }\r\n\r\n    function and(a, b){\r\n        return reduceConditions(arguments, ander, true);\r\n    }\r\n\r\n    function or(a, b){\r\n        return reduceConditions(arguments, orer, false);\r\n    }\r\n\r\n    function xor(a, b){\r\n        var equivalent = Boolean(a) === Boolean(b);\r\n        return or(a, b) && !equivalent;\r\n    }\r\n    \r\n    function composePredicate (predicateFn) {\r\n        var predicateList = j.slice(0, arguments),\r\n            combinator = j.last(predicateList),\r\n            lastIsCombinator = combinator === or || combinator === and;\r\n        \r\n        predicateList = lastIsCombinator ? j.dropLast(predicateList) : predicateList;\r\n        combinator = combinator === or ? or : and;\r\n        \r\n        return function (value) {\r\n            var executor = j.rpartial(j.execute, value);\r\n            \r\n            return j.pipeline(predicateList,\r\n                              j.partial(j.map, executor),\r\n                              j.partial(j.reduce, combinator),\r\n                              Boolean);\r\n        };\r\n    }\r\n    \r\n    // Predicate combinators\r\n\tj.and = and;\r\n\tj.or = or;\r\n\tj.xor = xor;\r\n\r\n    j.composePredicate = composePredicate;\r\n    \r\n})(jfp);\r\n\r\n(function (j) {\r\n\t'use strict';\r\n\t\r\n    /*\r\n     * toValues converts an object to an array of values\r\n     * This is necessary for reduce to convert objects into\r\n     * processible arrays in an upcoming version.\r\n     */\r\n\tfunction keyReduction (baseObj, finalList, key) {\r\n\t\treturn j.conj(baseObj[key], finalList);\r\n\t}\r\n\t\r\n\tfunction toValues (baseObj) {\r\n\t\tvar reducer = j.partial(keyReduction, baseObj);\r\n\t\treturn j.isNull(j.maybe(baseObj, 'object')) ? null : j.reduce(reducer, Object.keys(baseObj), []);\r\n\t}\r\n\r\n\tfunction dereferencer(dataObject, token){\r\n        var key = j.either('', token).trim();\r\n        return key === '' ? dataObject : j.pick(token, dataObject);\r\n    }\r\n\r\n    function internalDeref(key, baseData, defaultValue){\r\n        var sanitizedDefault = j.isUndefined(defaultValue) ? null : defaultValue,\r\n            keyTokens = key.split('.'),\r\n            result = j.reduce(dereferencer, keyTokens, baseData);\r\n        \r\n        return j.either(sanitizedDefault, result);\r\n    }\r\n    \r\n    function deref(key, baseData){\r\n        // Satisifes backwards-compatibility case where key an data are reversed\r\n        var defaultValue = arguments[2],\r\n            sanitizedKey = typeof key === 'string' ? key : baseData,\r\n            sanitizedData = typeof baseData === 'object' ? baseData : key;\r\n        \r\n        // Fully sanitize data before executing the dereference function\r\n        sanitizedKey = j.either('', sanitizedKey, 'string');\r\n        sanitizedData = j.either(null, sanitizedData, 'object');\r\n        \r\n        return internalDeref(j.either('', sanitizedKey), sanitizedData, defaultValue);\r\n    }\r\n    \r\n    function plucker (baseObj, finalObj, key){\r\n        finalObj[key] = baseObj[key];\r\n        return finalObj;\r\n    }\r\n    \r\n    function pluckKeys (keys, baseObj){\r\n        var sanitizedObject = j.either({}, baseObj, 'object');\r\n        return j.reduce(j.partial(plucker, sanitizedObject), keys, {});\r\n    }\r\n    \r\n    function pluck (key, baseObj) {\r\n        return pluckKeys([key], baseObj);\r\n    }\r\n\r\n    function transformer (obj, result, transformation) {\r\n        result[transformation[1]] = deref(transformation[0], obj);\r\n        return result;\r\n    }\r\n\r\n    function transform (transformation, obj) {\r\n        return j.pipeline(transformation,\r\n                          j.partial(j.filter, j.isPair),\r\n                          j.splitPartial(j.reduce, [j.partial(transformer, obj)], [{}]));\r\n    }\r\n\r\n\tj.deref = deref;\r\n    j.pluck = pluck;\r\n    j.pluckKeys = pluckKeys;\r\n    j.toValues = toValues;\r\n    j.transform = transform;\r\n\r\n})(jfp);\r\n\r\n(function(j){\r\n    'use strict';\r\n\r\n//This is a recursive add fn\r\n    function adder(recur, current, valueSet){\r\n        return (valueSet.length === 0) ?\r\n                current :\r\n                recur(current + j.first(valueSet), j.rest(valueSet));\r\n    }\r\n    \r\n    function add(a, b){\r\n        return j.recur(adder, 0, j.slice(0, arguments));\r\n    }\r\n    \r\n    //This is a recursive divide fn\r\n    function divider(recur, current, valueSet){\r\n        return (valueSet.length === 0) ?\r\n                current :\r\n                recur(current / j.first(valueSet), j.rest(valueSet));\r\n    }\r\n    \r\n    function divide(){\r\n        var args = j.slice(0, arguments),\r\n            first = args.length ? j.first(args) : 1;\r\n        return j.recur(divider, first, j.rest(args));\r\n    }\r\n    \r\n    //This is a recursive multiply fn\r\n    function multiplier(recur, current, valueSet){\r\n        return (valueSet.length === 0) ?\r\n                current :\r\n                recur(current * j.first(valueSet), j.rest(valueSet));\r\n    }\r\n    \r\n    function multiply(){\r\n        return j.recur(multiplier, 1, j.slice(0, arguments));\r\n    }\r\n    \r\n    //This is a recursive subtraction fn\r\n    function subtractor(recur, current, valueSet){\r\n        return (valueSet.length === 0) ?\r\n                current :\r\n                recur(current - j.first(valueSet), j.rest(valueSet));\r\n    }\r\n    \r\n    function subtract(){\r\n        var args = j.slice(0, arguments),\r\n            first = args.length ? j.first(args) : 0;\r\n        return j.recur(subtractor, first, j.rest(args));\r\n    }\r\n\r\n    //This is a recursive constructor function for ranges\r\n    function rangeRecurCheck(m, n, inc){\r\n        return inc > 0 ? (m + inc) < n : (m + inc) > n;\r\n    }\r\n\r\n    function rangeBuilder(recur, currentRange, m, n, inc){\r\n        var finalRange = rangeRecurCheck(m - inc, n, inc) ?\r\n                            j.conj(m, currentRange) :\r\n                            currentRange;\r\n        \r\n        return rangeRecurCheck(m, n, inc) ?\r\n                recur(finalRange, m + inc, n, inc) :\r\n                finalRange;\r\n    }\r\n    \r\n    function range(a, b, inc){\r\n        var start = j.isUndefined(b) ? 0 : a,\r\n            end = j.isUndefined(b) ? j.either(0, a) : b,\r\n            increment = (!inc) ? 1 : inc;\r\n            \r\n        return j.recur(rangeBuilder,\r\n                       [],\r\n                       j.either(0, start),\r\n                       j.either(0, end),\r\n                       increment);\r\n    }\r\n\r\n    function mod(a, b){\r\n        return j.isUndefined(b) ? j.either(0, a) : a%b;\r\n    }\r\n\r\n    function modulo(a, b){\r\n        var _a = j.either(0, a),\r\n            _b = j.either(0, b);\r\n\r\n        return (_a > 0) ? mod(_a, _b) : _b * (Math.floor(Math.abs(_a)/_b) + 1) + _a;\r\n    }\r\n\r\n    function truncate(value){\r\n        return (value > 0) ? Math.floor(value) : Math.floor(value) + 1;\r\n    }\r\n    \r\n    function max(a, b){\r\n        var maxValue = -Number.MAX_VALUE,\r\n            _a = j.isUndefined(a) ? maxValue : a,\r\n            _b = j.isUndefined(b) ? maxValue : b;\r\n            \r\n        maxValue = (_a > maxValue) ? _a : maxValue;\r\n        maxValue = (_b > maxValue) ? _b : maxValue;\r\n        \r\n        return maxValue;\r\n    }\r\n    \r\n    function min(a, b){\r\n        var minValue = Number.MAX_VALUE,\r\n            _a = j.isUndefined(a) ? minValue : a,\r\n            _b = j.isUndefined(b) ? minValue : b;\r\n        \r\n        minValue = (_a < minValue) ? _a : minValue;\r\n        minValue = (_b < minValue) ? _b : minValue;\r\n        \r\n        return minValue;\r\n    }\r\n\r\n    function fac(value){\r\n        var factorial = j.compose(j.partial(j.reduce, multiply),\r\n                                  j.partial(range, 1),\r\n                                  j.partial(add, 1));\r\n\r\n        return j.either(1, j.when(j.greater(value, 0), factorial, value));\r\n    }\r\n\r\n    j.add = add;\r\n    j.divide = divide;\r\n    j.fac = fac;\r\n    j.inc = j.partial(j.add, 1);\r\n    j.max = max;\r\n    j.min = min;\r\n    j.mod = mod;\r\n    j.modulo = modulo;\r\n    j.multiply = multiply;\r\n    j.range = range;\r\n    j.subtract = subtract;\r\n    j.truncate = truncate;\r\n\r\n})(jfp);\r\n\r\n\r\n(function(j){\r\n\r\n    function throwWhenNotComparable(a, b){\r\n        j.when(j.isUndefined(a) || j.isUndefined(b), function(){\r\n            throw new TypeError('Inequality comparisons require two values');\r\n        });\r\n    }\r\n\r\n    function greater(a, b){\r\n        throwWhenNotComparable(a, b);\r\n        return a > b;\r\n    }\r\n\r\n    function less(a, b){\r\n        throwWhenNotComparable(a, b);\r\n        return a < b;\r\n    }\r\n\r\n    function isInt(value){\r\n        return j.equal(j.truncate(value), value);\r\n    }\r\n\r\n    function isMultipleOf (base, test) {\r\n        return j.equal(0, j.mod(test, base));\r\n    }\r\n\r\n    var isNegative = j.partial(greater, 0),\r\n        isPositive = j.partial(less, 0),\r\n        isZero = j.partial(j.equal, 0),\r\n        isEven = j.compose(isZero, j.rpartial(j.mod, 2));\r\n\r\n    j.isEven = isEven;\r\n    j.isInt = isInt;\r\n    j.isMultipleOf = isMultipleOf;\r\n    j.isNegative = isNegative;\r\n    j.isNonNegative = j.compose(j.not, isNegative);\r\n    j.isNonPositive = j.compose(j.not, isPositive);\r\n    j.isNonZero = j.compose(j.not, isZero);\r\n    j.isOdd = j.compose(j.not, isEven);\r\n    j.isPositive = isPositive;\r\n    j.isZero = isZero;\r\n\r\n    //Special case predicate naming is intended for these functions\r\n    //There is a general expectation that these not be named with 'is'\r\n    j.geq = j.compose(j.not, less);\r\n    j.greater = greater;\r\n    j.leq = j.compose(j.not, greater);\r\n    j.less = less;\r\n\r\n})(jfp);\r\n\r\n(function (j) {\r\n\t'use strict';\r\n\t\r\n\tfunction attachFunction (module, j, key) {\r\n\t\tif(j.isUndefined(j[key]) && j.isType('function', module[key])) {\r\n\t\t\tj[key] = module[key];\r\n\t\t}\r\n\t\treturn j;\r\n\t}\r\n\t\r\n\tfunction addModule (provider) {\r\n\t\tvar module = j.either(j.always({}), provider, 'function')(),\r\n\t\t\tmoduleKeys = j.getKeys(module);\r\n\t\t\t\r\n\t\treturn function () {\r\n\t\t\treturn j.reduce(j.partial(attachFunction, module), moduleKeys, j);\r\n\t\t};\r\n\t}\r\n\t\r\n\tj.addModule = addModule;\r\n\t\r\n})(jfp);\r\n\r\nvar j = jfp;\r\n\r\nif(typeof module !== 'undefined' && Boolean(module.exports)){\r\n    // Node and CommonJS export\r\n    module.exports = j;\r\n} else if (typeof define === 'function' && Boolean(define.amd)) {\r\n    // AMD and Require.js module definition\r\n    define([], function () {\r\n        return jfp;\r\n    });\r\n}\r\n\r\n\r\n"]}